<Type Name="RelationalStrings" FullName="Microsoft.EntityFrameworkCore.Internal.RelationalStrings">
  <TypeSignature Language="C#" Value="public static class RelationalStrings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalStrings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.RelationalStrings" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalStrings" />
  <TypeSignature Language="F#" Value="type RelationalStrings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            	This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AmbientTransaction">
      <MemberSignature Language="C#" Value="public static string AmbientTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string AmbientTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.AmbientTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AmbientTransaction As String" />
      <MemberSignature Language="F#" Value="static member AmbientTransaction : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.AmbientTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An ambient transaction has been detected. Entity Framework Core does not support ambient transactions. See http://go.microsoft.com/fwlink/?LinkId=800142
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyingMigration">
      <MemberSignature Language="C#" Value="public static string ApplyingMigration (object migration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ApplyingMigration(object migration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ApplyingMigration(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ApplyingMigration (migration As Object) As String" />
      <MemberSignature Language="F#" Value="static member ApplyingMigration : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ApplyingMigration migration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migration" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="migration">To be added.</param>
        <summary>
            Applying migration '{migration}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadSequenceString">
      <MemberSignature Language="C#" Value="public static string BadSequenceString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string BadSequenceString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BadSequenceString As String" />
      <MemberSignature Language="F#" Value="static member BadSequenceString : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to deserialize sequence from model metadata. See inner exception for details.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadSequenceType">
      <MemberSignature Language="C#" Value="public static string BadSequenceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string BadSequenceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BadSequenceType As String" />
      <MemberSignature Language="F#" Value="static member BadSequenceType : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Invalid type for sequence. Valid types are 'Int64' (the default), 'Int32', 'Int16', 'Byte' and 'Decimal'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseElseResultTypeUnexpected">
      <MemberSignature Language="C#" Value="public static string CaseElseResultTypeUnexpected (object elseResultType, object resultType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CaseElseResultTypeUnexpected(object elseResultType, object resultType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.CaseElseResultTypeUnexpected(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CaseElseResultTypeUnexpected (elseResultType As Object, resultType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CaseElseResultTypeUnexpected : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.CaseElseResultTypeUnexpected (elseResultType, resultType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elseResultType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="resultType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="elseResultType">To be added.</param>
        <param name="resultType">To be added.</param>
        <summary>
                The result type of '{elseResultType}' in the else clause is invalid. The expected type is '{resultType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseWhenClauseResultTypeUnexpected">
      <MemberSignature Language="C#" Value="public static string CaseWhenClauseResultTypeUnexpected (object whenResultType, object resultType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CaseWhenClauseResultTypeUnexpected(object whenResultType, object resultType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.CaseWhenClauseResultTypeUnexpected(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CaseWhenClauseResultTypeUnexpected (whenResultType As Object, resultType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CaseWhenClauseResultTypeUnexpected : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.CaseWhenClauseResultTypeUnexpected (whenResultType, resultType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenResultType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="resultType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="whenResultType">To be added.</param>
        <param name="resultType">To be added.</param>
        <summary>
                The result type of '{whenResultType}' in a when clause is invalid. The expected type is '{resultType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseWhenClauseTestTypeUnexpected">
      <MemberSignature Language="C#" Value="public static string CaseWhenClauseTestTypeUnexpected (object whenOperandType, object expectedWhenOperandType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CaseWhenClauseTestTypeUnexpected(object whenOperandType, object expectedWhenOperandType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.CaseWhenClauseTestTypeUnexpected(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CaseWhenClauseTestTypeUnexpected (whenOperandType As Object, expectedWhenOperandType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CaseWhenClauseTestTypeUnexpected : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.CaseWhenClauseTestTypeUnexpected (whenOperandType, expectedWhenOperandType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenOperandType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="expectedWhenOperandType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="whenOperandType">To be added.</param>
        <param name="expectedWhenOperandType">To be added.</param>
        <summary>
                The operand type of '{whenOperandType}' in a when clause is invalid. The expected type is '{expectedWhenOperandType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientEvalWarning">
      <MemberSignature Language="C#" Value="public static string ClientEvalWarning (object expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClientEvalWarning(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ClientEvalWarning(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClientEvalWarning (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClientEvalWarning : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ClientEvalWarning expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
            The LINQ expression '{expression}' could not be translated and will be evaluated locally.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingAmbientTransaction">
      <MemberSignature Language="C#" Value="public static string ConflictingAmbientTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConflictingAmbientTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingAmbientTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConflictingAmbientTransaction As String" />
      <MemberSignature Language="F#" Value="static member ConflictingAmbientTransaction : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingAmbientTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An ambient transaction has been detected. The ambient transaction needs to be completed before beginning a transaction on this connection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingColumnServerGeneration">
      <MemberSignature Language="C#" Value="public static string ConflictingColumnServerGeneration (object conflictingConfiguration, object property, object existingConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingColumnServerGeneration(object conflictingConfiguration, object property, object existingConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingColumnServerGeneration(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingColumnServerGeneration (conflictingConfiguration As Object, property As Object, existingConfiguration As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingColumnServerGeneration : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingColumnServerGeneration (conflictingConfiguration, property, existingConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conflictingConfiguration" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="existingConfiguration" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="conflictingConfiguration">To be added.</param>
        <param name="property">To be added.</param>
        <param name="existingConfiguration">To be added.</param>
        <summary>
                {conflictingConfiguration} cannot be set for '{property}', because {existingConfiguration} is already set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingEnlistedTransaction">
      <MemberSignature Language="C#" Value="public static string ConflictingEnlistedTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConflictingEnlistedTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingEnlistedTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConflictingEnlistedTransaction As String" />
      <MemberSignature Language="F#" Value="static member ConflictingEnlistedTransaction : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingEnlistedTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The connection is currently enlisted in a transaction. The enlisted transaction needs to be completed before starting a transaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingOriginalRowValues">
      <MemberSignature Language="C#" Value="public static string ConflictingOriginalRowValues (object firstEntityType, object secondEntityType, object firstProperties, object secondProperties, object columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingOriginalRowValues(object firstEntityType, object secondEntityType, object firstProperties, object secondProperties, object columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingOriginalRowValues(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingOriginalRowValues (firstEntityType As Object, secondEntityType As Object, firstProperties As Object, secondProperties As Object, columns As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingOriginalRowValues : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingOriginalRowValues (firstEntityType, secondEntityType, firstProperties, secondProperties, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="firstProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondProperties" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columns" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <param name="firstProperties">To be added.</param>
        <param name="secondProperties">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>
                An instance of entity type '{firstEntityType}' and an instance of entity type '{secondEntityType}' are mapped to the same row, but have different original property values for the properties {firstProperties} and {secondProperties} mapped to {columns}. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingOriginalRowValuesSensitive">
      <MemberSignature Language="C#" Value="public static string ConflictingOriginalRowValuesSensitive (object firstEntityType, object secondEntityType, object keyValue, object firstConflictingValues, object secondConflictingValues, object columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingOriginalRowValuesSensitive(object firstEntityType, object secondEntityType, object keyValue, object firstConflictingValues, object secondConflictingValues, object columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingOriginalRowValuesSensitive(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingOriginalRowValuesSensitive (firstEntityType As Object, secondEntityType As Object, keyValue As Object, firstConflictingValues As Object, secondConflictingValues As Object, columns As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingOriginalRowValuesSensitive : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingOriginalRowValuesSensitive (firstEntityType, secondEntityType, keyValue, firstConflictingValues, secondConflictingValues, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="keyValue" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="firstConflictingValues" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondConflictingValues" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columns" Type="System.Object" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <param name="firstConflictingValues">To be added.</param>
        <param name="secondConflictingValues">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>
                The instance of entity type '{firstEntityType}' and the instance of entity type '{secondEntityType}' are mapped to the same row with the key value '{keyValue}', but have different original property values '{firstConflictingValues}' and '{secondConflictingValues}' mapped to {columns}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRowUpdates">
      <MemberSignature Language="C#" Value="public static string ConflictingRowUpdates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConflictingRowUpdates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdates" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConflictingRowUpdates As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRowUpdates : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Two entities cannot make conflicting updates to the same row.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRowUpdateTypes">
      <MemberSignature Language="C#" Value="public static string ConflictingRowUpdateTypes (object firstEntityType, object firstState, object secondEntityType, object secondState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingRowUpdateTypes(object firstEntityType, object firstState, object secondEntityType, object secondState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdateTypes(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingRowUpdateTypes (firstEntityType As Object, firstState As Object, secondEntityType As Object, secondState As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRowUpdateTypes : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdateTypes (firstEntityType, firstState, secondEntityType, secondState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="firstState" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondState" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="firstState">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <param name="secondState">To be added.</param>
        <summary>
                An instance of entity type '{firstEntityType}' is marked as '{firstState}', but an instance of entity type '{secondEntityType}' is marked as '{secondState}' and both are mapped to the same row. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRowUpdateTypesSensitive">
      <MemberSignature Language="C#" Value="public static string ConflictingRowUpdateTypesSensitive (object firstEntityType, object firstKeyValue, object firstState, object secondEntityType, object secondKeyValue, object secondState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingRowUpdateTypesSensitive(object firstEntityType, object firstKeyValue, object firstState, object secondEntityType, object secondKeyValue, object secondState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdateTypesSensitive(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingRowUpdateTypesSensitive (firstEntityType As Object, firstKeyValue As Object, firstState As Object, secondEntityType As Object, secondKeyValue As Object, secondState As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRowUpdateTypesSensitive : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdateTypesSensitive (firstEntityType, firstKeyValue, firstState, secondEntityType, secondKeyValue, secondState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="firstKeyValue" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="firstState" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondKeyValue" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondState" Type="System.Object" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="firstKeyValue">To be added.</param>
        <param name="firstState">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <param name="secondKeyValue">To be added.</param>
        <param name="secondState">To be added.</param>
        <summary>
                The instance of entity type '{firstEntityType}' with the key value '{firstKeyValue}' is marked as '{firstState}', but the instance of entity type '{secondEntityType}' with the key value '{secondKeyValue}' is marked as '{secondState}' and both are mapped to the same row.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRowValues">
      <MemberSignature Language="C#" Value="public static string ConflictingRowValues (object firstEntityType, object secondEntityType, object firstProperties, object secondProperties, object columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingRowValues(object firstEntityType, object secondEntityType, object firstProperties, object secondProperties, object columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowValues(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingRowValues (firstEntityType As Object, secondEntityType As Object, firstProperties As Object, secondProperties As Object, columns As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRowValues : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowValues (firstEntityType, secondEntityType, firstProperties, secondProperties, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="firstProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondProperties" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columns" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <param name="firstProperties">To be added.</param>
        <param name="secondProperties">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>
                An instance of entity type '{firstEntityType}' and an instance of entity type '{secondEntityType}' are mapped to the same row, but have different property values for the properties {firstProperties} and {secondProperties} mapped to {columns}. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRowValuesSensitive">
      <MemberSignature Language="C#" Value="public static string ConflictingRowValuesSensitive (object firstEntityType, object secondEntityType, object keyValue, object firstConflictingValues, object secondConflictingValues, object columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingRowValuesSensitive(object firstEntityType, object secondEntityType, object keyValue, object firstConflictingValues, object secondConflictingValues, object columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowValuesSensitive(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingRowValuesSensitive (firstEntityType As Object, secondEntityType As Object, keyValue As Object, firstConflictingValues As Object, secondConflictingValues As Object, columns As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRowValuesSensitive : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowValuesSensitive (firstEntityType, secondEntityType, keyValue, firstConflictingValues, secondConflictingValues, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="keyValue" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="firstConflictingValues" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="secondConflictingValues" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columns" Type="System.Object" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <param name="firstConflictingValues">To be added.</param>
        <param name="secondConflictingValues">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>
                The instance of entity type '{firstEntityType}' and the instance of entity type '{secondEntityType}' are mapped to the same row with the key value '{keyValue}', but have different property values '{firstConflictingValues}' and '{secondConflictingValues}' mapped to {columns}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionAndConnectionString">
      <MemberSignature Language="C#" Value="public static string ConnectionAndConnectionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConnectionAndConnectionString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConnectionAndConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionAndConnectionString As String" />
      <MemberSignature Language="F#" Value="static member ConnectionAndConnectionString : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConnectionAndConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Both an existing DbConnection and a connection string have been configured. When an existing DbConnection is used the connection string must be set on that connection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbFunctionExpressionIsNotMethodCall">
      <MemberSignature Language="C#" Value="public static string DbFunctionExpressionIsNotMethodCall (object expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbFunctionExpressionIsNotMethodCall(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionExpressionIsNotMethodCall(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbFunctionExpressionIsNotMethodCall (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbFunctionExpressionIsNotMethodCall : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionExpressionIsNotMethodCall expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The provided DbFunction expression '{expression}' is invalid. The expression should be a lambda expression containing a single method call to the target static method. Default values can be provided as arguments if required. E.g. () =&gt; SomeClass.SomeMethod(null, 0)
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbFunctionGenericMethodNotSupported">
      <MemberSignature Language="C#" Value="public static string DbFunctionGenericMethodNotSupported (object function);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbFunctionGenericMethodNotSupported(object function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionGenericMethodNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbFunctionGenericMethodNotSupported (function As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbFunctionGenericMethodNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionGenericMethodNotSupported function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>
                The DbFunction '{function}' is generic. Generic methods are not supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbFunctionInvalidInstanceType">
      <MemberSignature Language="C#" Value="public static string DbFunctionInvalidInstanceType (object function, object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbFunctionInvalidInstanceType(object function, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidInstanceType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbFunctionInvalidInstanceType (function As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbFunctionInvalidInstanceType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidInstanceType (function, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The DbFunction '{function}' defined on type '{type}' must be either a static method or an instance method defined on a DbContext subclass. Instance methods on other types are not supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbFunctionInvalidParameterType">
      <MemberSignature Language="C#" Value="public static string DbFunctionInvalidParameterType (object parameter, object function, object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbFunctionInvalidParameterType(object parameter, object function, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidParameterType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbFunctionInvalidParameterType (parameter As Object, function As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbFunctionInvalidParameterType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidParameterType (parameter, function, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="function" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="function">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The parameter '{parameter}' for the DbFunction '{function}' has an invalid type '{type}'. Ensure the parameter type can be mapped by the current provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbFunctionInvalidReturnType">
      <MemberSignature Language="C#" Value="public static string DbFunctionInvalidReturnType (object function, object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbFunctionInvalidReturnType(object function, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidReturnType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbFunctionInvalidReturnType (function As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbFunctionInvalidReturnType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionInvalidReturnType (function, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The DbFunction '{function}' has an invalid return type '{type}'. Ensure that the return type can be mapped by the current provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbFunctionMethodMustBeStatic">
      <MemberSignature Language="C#" Value="public static string DbFunctionMethodMustBeStatic (object function);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbFunctionMethodMustBeStatic(object function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionMethodMustBeStatic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbFunctionMethodMustBeStatic (function As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbFunctionMethodMustBeStatic : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionMethodMustBeStatic function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>
                The DbFunction '{function}' must be a static method. Non-static methods are not supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbFunctionNameEmpty">
      <MemberSignature Language="C#" Value="public static string DbFunctionNameEmpty (object function);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbFunctionNameEmpty(object function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionNameEmpty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbFunctionNameEmpty (function As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbFunctionNameEmpty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DbFunctionNameEmpty function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>
                The DbFunction '{function}' has no name set. Name is a required property of a DbFunction.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedQueryTypeView">
      <MemberSignature Language="C#" Value="public static string DerivedQueryTypeView (object queryType, object baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedQueryTypeView(object queryType, object baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DerivedQueryTypeView(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedQueryTypeView (queryType As Object, baseType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedQueryTypeView : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DerivedQueryTypeView (queryType, baseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="baseType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="queryType">To be added.</param>
        <param name="baseType">To be added.</param>
        <summary>
                The query type '{queryType}' cannot be mapped to a view because it is derived from '{baseType}'. Only base query types can be mapped to a view.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorEntityTypeNotDerived">
      <MemberSignature Language="C#" Value="public static string DiscriminatorEntityTypeNotDerived (object entityType, object rootEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorEntityTypeNotDerived(object entityType, object rootEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorEntityTypeNotDerived(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorEntityTypeNotDerived (entityType As Object, rootEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DiscriminatorEntityTypeNotDerived : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorEntityTypeNotDerived (entityType, rootEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="rootEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="rootEntityType">To be added.</param>
        <summary>
                Cannot configure the discriminator value for entity type '{entityType}' because it doesn't derive from '{rootEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorPropertyMustBeOnRoot">
      <MemberSignature Language="C#" Value="public static string DiscriminatorPropertyMustBeOnRoot (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorPropertyMustBeOnRoot(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyMustBeOnRoot(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorPropertyMustBeOnRoot (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DiscriminatorPropertyMustBeOnRoot : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyMustBeOnRoot entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                A discriminator property cannot be set for the entity type '{entityType}' because it is not the root of an inheritance hierarchy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorPropertyNotFound">
      <MemberSignature Language="C#" Value="public static string DiscriminatorPropertyNotFound (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorPropertyNotFound(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorPropertyNotFound (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DiscriminatorPropertyNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyNotFound (property, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to set property '{property}' as a discriminator for entity type '{entityType}' because it is not a property of '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorValueIncompatible">
      <MemberSignature Language="C#" Value="public static string DiscriminatorValueIncompatible (object value, object discriminator, object discriminatorType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorValueIncompatible(object value, object discriminator, object discriminatorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorValueIncompatible(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorValueIncompatible (value As Object, discriminator As Object, discriminatorType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DiscriminatorValueIncompatible : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorValueIncompatible (value, discriminator, discriminatorType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="discriminator" Type="System.Object" />
        <Parameter Name="discriminatorType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="discriminator">To be added.</param>
        <param name="discriminatorType">To be added.</param>
        <summary>
                Cannot set discriminator value '{value}' for discriminator property '{discriminator}' because it is not assignable to property of type '{discriminatorType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnName">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnName (object entityType1, object property1, object entityType2, object property2, object columnName, object table, object dataType1, object dataType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnName(object entityType1, object property1, object entityType2, object property2, object columnName, object table, object dataType1, object dataType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnName(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnName (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object, dataType1 As Object, dataType2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnName : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnName (entityType1, property1, entityType2, property2, columnName, table, dataType1, dataType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="property1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="property2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="columnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="table" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="dataType1" Type="System.Object" Index="6" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="dataType2" Type="System.Object" Index="7" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <param name="dataType1">To be added.</param>
        <param name="dataType2">To be added.</param>
        <summary>
            '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different data types ('{dataType1}' and '{dataType2}').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnNameComputedSqlMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameComputedSqlMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table, object value1, object value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnNameComputedSqlMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table, object value1, object value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameComputedSqlMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnNameComputedSqlMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object, value1 As Object, value2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnNameComputedSqlMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameComputedSqlMismatch (entityType1, property1, entityType2, property2, columnName, table, value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" />
        <Parameter Name="property1" Type="System.Object" />
        <Parameter Name="entityType2" Type="System.Object" />
        <Parameter Name="property2" Type="System.Object" />
        <Parameter Name="columnName" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="value1" Type="System.Object" />
        <Parameter Name="value2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <param name="value1">To be added.</param>
        <param name="value2">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different computed values ('{value1}' and '{value2}').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnNameDataTypeMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameDataTypeMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table, object dataType1, object dataType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnNameDataTypeMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table, object dataType1, object dataType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDataTypeMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnNameDataTypeMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object, dataType1 As Object, dataType2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnNameDataTypeMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDataTypeMismatch (entityType1, property1, entityType2, property2, columnName, table, dataType1, dataType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="property1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="property2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="dataType1" Type="System.Object" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="dataType2" Type="System.Object" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <param name="dataType1">To be added.</param>
        <param name="dataType2">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different data types ('{dataType1}' and '{dataType2}').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnNameDefaultSqlMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameDefaultSqlMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table, object value1, object value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnNameDefaultSqlMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table, object value1, object value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDefaultSqlMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnNameDefaultSqlMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object, value1 As Object, value2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnNameDefaultSqlMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDefaultSqlMismatch (entityType1, property1, entityType2, property2, columnName, table, value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" />
        <Parameter Name="property1" Type="System.Object" />
        <Parameter Name="entityType2" Type="System.Object" />
        <Parameter Name="property2" Type="System.Object" />
        <Parameter Name="columnName" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="value1" Type="System.Object" />
        <Parameter Name="value2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <param name="value1">To be added.</param>
        <param name="value2">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different default values ('{value1}' and '{value2}').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnNameNullabilityMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameNullabilityMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnNameNullabilityMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameNullabilityMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnNameNullabilityMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnNameNullabilityMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameNullabilityMismatch (entityType1, property1, entityType2, property2, columnName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" />
        <Parameter Name="property1" Type="System.Object" />
        <Parameter Name="entityType2" Type="System.Object" />
        <Parameter Name="property2" Type="System.Object" />
        <Parameter Name="columnName" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured with different nullability.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateDiscriminatorValue">
      <MemberSignature Language="C#" Value="public static string DuplicateDiscriminatorValue (object entityType1, object discriminatorValue, object entityType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateDiscriminatorValue(object entityType1, object discriminatorValue, object entityType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateDiscriminatorValue(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateDiscriminatorValue (entityType1 As Object, discriminatorValue As Object, entityType2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateDiscriminatorValue : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateDiscriminatorValue (entityType1, discriminatorValue, entityType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" />
        <Parameter Name="discriminatorValue" Type="System.Object" />
        <Parameter Name="entityType2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="discriminatorValue">To be added.</param>
        <param name="entityType2">To be added.</param>
        <summary>
                The discriminator value for '{entityType1}' is '{discriminatorValue}' which is the same for '{entityType2}'. Every concrete entity type in the hierarchy needs to have a unique discriminator value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateForeignKeyColumnMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKeyColumnMismatch (object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object columnNames1, object columnNames2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKeyColumnMismatch(object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object columnNames1, object columnNames2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKeyColumnMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, foreignKeyName As Object, columnNames1 As Object, columnNames2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKeyColumnMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyColumnMismatch (index1, entityType1, index2, entityType2, table, foreignKeyName, columnNames1, columnNames2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyName" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columnNames1" Type="System.Object" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columnNames2" Type="System.Object" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="columnNames1">To be added.</param>
        <param name="columnNames2">To be added.</param>
        <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but use different columns ({columnNames1} and {columnNames2}).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateForeignKeyDeleteBehaviorMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKeyDeleteBehaviorMismatch (object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object deleteBehavior1, object deleteBehavior2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKeyDeleteBehaviorMismatch(object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object deleteBehavior1, object deleteBehavior2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyDeleteBehaviorMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKeyDeleteBehaviorMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, foreignKeyName As Object, deleteBehavior1 As Object, deleteBehavior2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKeyDeleteBehaviorMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyDeleteBehaviorMismatch (index1, entityType1, index2, entityType2, table, foreignKeyName, deleteBehavior1, deleteBehavior2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyName" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="deleteBehavior1" Type="System.Object" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="deleteBehavior2" Type="System.Object" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="deleteBehavior1">To be added.</param>
        <param name="deleteBehavior2">To be added.</param>
        <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but with different delete behavior ('{deleteBehavior1}' and '{deleteBehavior2}').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateForeignKeyPrincipalColumnMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKeyPrincipalColumnMismatch (object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object principalColumnNames1, object principalColumnNames2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKeyPrincipalColumnMismatch(object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object principalColumnNames1, object principalColumnNames2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKeyPrincipalColumnMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, foreignKeyName As Object, principalColumnNames1 As Object, principalColumnNames2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKeyPrincipalColumnMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalColumnMismatch (index1, entityType1, index2, entityType2, table, foreignKeyName, principalColumnNames1, principalColumnNames2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyName" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="principalColumnNames1" Type="System.Object" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="principalColumnNames2" Type="System.Object" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="principalColumnNames1">To be added.</param>
        <param name="principalColumnNames2">To be added.</param>
        <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but referencing different principal columns ({principalColumnNames1} and {principalColumnNames2}).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateForeignKeyPrincipalTableMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKeyPrincipalTableMismatch (object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object principalTable1, object principalTable2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKeyPrincipalTableMismatch(object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName, object principalTable1, object principalTable2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalTableMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKeyPrincipalTableMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, foreignKeyName As Object, principalTable1 As Object, principalTable2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKeyPrincipalTableMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalTableMismatch (index1, entityType1, index2, entityType2, table, foreignKeyName, principalTable1, principalTable2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyName" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="principalTable1" Type="System.Object" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="principalTable2" Type="System.Object" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="principalTable1">To be added.</param>
        <param name="principalTable2">To be added.</param>
        <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but referencing different principal tables ('{principalTable1}' and '{principalTable2}').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateForeignKeyUniquenessMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKeyUniquenessMismatch (object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKeyUniquenessMismatch(object index1, object entityType1, object index2, object entityType2, object table, object foreignKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyUniquenessMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKeyUniquenessMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, foreignKeyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKeyUniquenessMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyUniquenessMismatch (index1, entityType1, index2, entityType2, table, foreignKeyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyName" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <summary>
                The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but with different uniqueness.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexColumnMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexColumnMismatch (object index1, object entityType1, object index2, object entityType2, object table, object indexName, object columnNames1, object columnNames2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexColumnMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName, object columnNames1, object columnNames2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexColumnMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object, columnNames1 As Object, columnNames2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexColumnMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexColumnMismatch (index1, entityType1, index2, entityType2, table, indexName, columnNames1, columnNames2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columnNames1" Type="System.Object" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columnNames2" Type="System.Object" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <param name="columnNames1">To be added.</param>
        <param name="columnNames2">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}' but with different columns ({columnNames1} and {columnNames2}).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexUniquenessMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexUniquenessMismatch (object index1, object entityType1, object index2, object entityType2, object table, object indexName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexUniquenessMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexUniquenessMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexUniquenessMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexUniquenessMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexUniquenessMismatch (index1, entityType1, index2, entityType2, table, indexName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}' but with different uniqueness.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKeyColumnMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateKeyColumnMismatch (object key1, object entityType1, object key2, object entityType2, object table, object keyName, object columnNames1, object columnNames2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateKeyColumnMismatch(object key1, object entityType1, object key2, object entityType2, object table, object keyName, object columnNames1, object columnNames2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateKeyColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateKeyColumnMismatch (key1 As Object, entityType1 As Object, key2 As Object, entityType2 As Object, table As Object, keyName As Object, columnNames1 As Object, columnNames2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateKeyColumnMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateKeyColumnMismatch (key1, entityType1, key2, entityType2, table, keyName, columnNames1, columnNames2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="key2" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="keyName" Type="System.Object" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columnNames1" Type="System.Object" Index="6" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columnNames2" Type="System.Object" Index="7" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="key1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="key2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="keyName">To be added.</param>
        <param name="columnNames1">To be added.</param>
        <param name="columnNames2">To be added.</param>
        <summary>
                The keys {key1} on '{entityType1}' and {key2} on '{entityType2}' are both mapped to '{table}.{keyName}' but with different columns ({columnNames1} and {columnNames2}).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateTableName">
      <MemberSignature Language="C#" Value="public static string DuplicateTableName (object table, object schema, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateTableName(object table, object schema, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateTableName(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateTableName (table As Object, schema As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateTableName : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateTableName (table, schema, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
            Cannot use table '{table}' in schema '{schema}' for entity '{entityType}' since it is being used for another entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedNonNullParameter">
      <MemberSignature Language="C#" Value="public static string ExpectedNonNullParameter (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExpectedNonNullParameter(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ExpectedNonNullParameter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpectedNonNullParameter (parameter As Object) As String" />
      <MemberSignature Language="F#" Value="static member ExpectedNonNullParameter : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ExpectedNonNullParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                Expected a non-null value for query parameter '{parameter}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSqlMissingColumn">
      <MemberSignature Language="C#" Value="public static string FromSqlMissingColumn (object column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FromSqlMissingColumn(object column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.FromSqlMissingColumn(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSqlMissingColumn (column As Object) As String" />
      <MemberSignature Language="F#" Value="static member FromSqlMissingColumn : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.FromSqlMissingColumn column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
                The required column '{column}' was not present in the results of a 'FromSql' operation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratingDown">
      <MemberSignature Language="C#" Value="public static string GeneratingDown (object migration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratingDown(object migration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.GeneratingDown(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratingDown (migration As Object) As String" />
      <MemberSignature Language="F#" Value="static member GeneratingDown : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.GeneratingDown migration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migration" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="migration">To be added.</param>
        <summary>
            Generating down script for migration '{migration}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratingUp">
      <MemberSignature Language="C#" Value="public static string GeneratingUp (object migration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratingUp(object migration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.GeneratingUp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratingUp (migration As Object) As String" />
      <MemberSignature Language="F#" Value="static member GeneratingUp : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.GeneratingUp migration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migration" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="migration">To be added.</param>
        <summary>
            Generating up script for migration '{migration}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleTableDerivedPrincipal">
      <MemberSignature Language="C#" Value="public static string IncompatibleTableDerivedPrincipal (object table, object dependentType, object principalType, object rootType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleTableDerivedPrincipal(object table, object dependentType, object principalType, object rootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableDerivedPrincipal(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleTableDerivedPrincipal (table As Object, dependentType As Object, principalType As Object, rootType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleTableDerivedPrincipal : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableDerivedPrincipal (table, dependentType, principalType, rootType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="dependentType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="principalType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="rootType" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalType">To be added.</param>
        <param name="rootType">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{dependentType}' since it has a relation ship to a derived entity type '{principalType}'. Either point the relationship to the base type '{rootType}' or map '{dependentType}' to a different table.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleTableKeyNameMismatch">
      <MemberSignature Language="C#" Value="public static string IncompatibleTableKeyNameMismatch (object table, object entityType, object otherEntityType, object keyName, object primaryKey, object otherName, object otherPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleTableKeyNameMismatch(object table, object entityType, object otherEntityType, object keyName, object primaryKey, object otherName, object otherPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableKeyNameMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleTableKeyNameMismatch (table As Object, entityType As Object, otherEntityType As Object, keyName As Object, primaryKey As Object, otherName As Object, otherPrimaryKey As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleTableKeyNameMismatch : obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableKeyNameMismatch (table, entityType, otherEntityType, keyName, primaryKey, otherName, otherPrimaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="keyName" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="primaryKey" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="otherName" Type="System.Object" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="otherPrimaryKey" Type="System.Object" Index="6" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <param name="keyName">To be added.</param>
        <param name="primaryKey">To be added.</param>
        <param name="otherName">To be added.</param>
        <param name="otherPrimaryKey">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and the name '{keyName}' of the primary key {primaryKey} does not match the name '{otherName}' of the primary key {otherPrimaryKey}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleTableNoRelationship">
      <MemberSignature Language="C#" Value="public static string IncompatibleTableNoRelationship (object table, object entityType, object otherEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleTableNoRelationship(object table, object entityType, object otherEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableNoRelationship(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleTableNoRelationship (table As Object, entityType As Object, otherEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleTableNoRelationship : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableNoRelationship (table, entityType, otherEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and there is no relationship between their primary keys.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleTableNoRelationship">
      <MemberSignature Language="C#" Value="public static string IncompatibleTableNoRelationship (object table, object entityType, object otherEntityType, object primaryKey, object otherPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleTableNoRelationship(object table, object entityType, object otherEntityType, object primaryKey, object otherPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableNoRelationship(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleTableNoRelationship (table As Object, entityType As Object, otherEntityType As Object, primaryKey As Object, otherPrimaryKey As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleTableNoRelationship : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncompatibleTableNoRelationship (table, entityType, otherEntityType, primaryKey, otherPrimaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="primaryKey" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="otherPrimaryKey" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <param name="primaryKey">To be added.</param>
        <param name="otherPrimaryKey">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and there is no relationship between the primary key {primaryKey} and the primary key {otherPrimaryKey}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncorrectDefaultValueType">
      <MemberSignature Language="C#" Value="public static string IncorrectDefaultValueType (object value, object valueType, object property, object propertyType, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncorrectDefaultValueType(object value, object valueType, object property, object propertyType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncorrectDefaultValueType(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncorrectDefaultValueType (value As Object, valueType As Object, property As Object, propertyType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncorrectDefaultValueType : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncorrectDefaultValueType (value, valueType, property, propertyType, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="valueType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="propertyType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot set default value '{value}' of type '{valueType}' on property '{property}' of type '{propertyType}' in entity type '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidCommandTimeout">
      <MemberSignature Language="C#" Value="public static string InvalidCommandTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidCommandTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidCommandTimeout As String" />
      <MemberSignature Language="F#" Value="static member InvalidCommandTimeout : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidCommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The specified CommandTimeout value is not valid. It must be a positive number.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidMaxBatchSize">
      <MemberSignature Language="C#" Value="public static string InvalidMaxBatchSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidMaxBatchSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidMaxBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidMaxBatchSize As String" />
      <MemberSignature Language="F#" Value="static member InvalidMaxBatchSize : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidMaxBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The specified MaxBatchSize value is not valid. It must be a positive number.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidMinBatchSize">
      <MemberSignature Language="C#" Value="public static string InvalidMinBatchSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidMinBatchSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidMinBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidMinBatchSize As String" />
      <MemberSignature Language="F#" Value="static member InvalidMinBatchSize : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidMinBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The specified MinBatchSize value is not valid. It must be a positive number.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyHasDefaultValue">
      <MemberSignature Language="C#" Value="public static string KeyHasDefaultValue (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyHasDefaultValue(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.KeyHasDefaultValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyHasDefaultValue (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyHasDefaultValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.KeyHasDefaultValue (property, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
            Property '{property}' on entity type '{entityType}' is part of a primary or alternate key but has a constant default value set. Constant default values are not useful for primary or alternate keys since these properties must always have non-null unqiue values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogAmbientTransaction">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogAmbientTransaction;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogAmbientTransaction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogAmbientTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogAmbientTransaction As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogAmbientTransaction : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogAmbientTransaction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An ambient transaction has been detected. The current provider does not support ambient transactions. See http://go.microsoft.com/fwlink/?LinkId=800142
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogAmbientTransactionEnlisted">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogAmbientTransactionEnlisted;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogAmbientTransactionEnlisted" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogAmbientTransactionEnlisted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogAmbientTransactionEnlisted As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogAmbientTransactionEnlisted : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogAmbientTransactionEnlisted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Enlisted in an ambient transaction with isolation level '{isolationLevel}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogApplyingMigration">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogApplyingMigration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogApplyingMigration" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogApplyingMigration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogApplyingMigration As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogApplyingMigration : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogApplyingMigration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Applying migration '{migration}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogBatchReadyForExecution">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int&gt; LogBatchReadyForExecution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;int32&gt; LogBatchReadyForExecution" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogBatchReadyForExecution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogBatchReadyForExecution As EventDefinition(Of Integer) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogBatchReadyForExecution : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogBatchReadyForExecution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Executing {batchCommandsCount} update commands as a batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogBatchSmallerThanMinBatchSize">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,int&gt; LogBatchSmallerThanMinBatchSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;int32, int32&gt; LogBatchSmallerThanMinBatchSize" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogBatchSmallerThanMinBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogBatchSmallerThanMinBatchSize As EventDefinition(Of Integer, Integer) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogBatchSmallerThanMinBatchSize : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, int&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogBatchSmallerThanMinBatchSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Executing update commands individually as the number of batchable commands ({batchableCommandsCount}) is smaller than the minimum batch size ({minBatchSize}).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogBoolWithDefaultWarning">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogBoolWithDefaultWarning;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogBoolWithDefaultWarning" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogBoolWithDefaultWarning" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogBoolWithDefaultWarning As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogBoolWithDefaultWarning : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogBoolWithDefaultWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The 'bool' property '{property}' on entity type '{entityType}' is configured with a database-generated default. This default will always be used for inserts when the property has the value 'false', since this is the CLR default for the 'bool' type. Consider using the nullable 'bool?' type instead so that the default will only be used for inserts when the property value is 'null'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogClientEvalWarning">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;object&gt; LogClientEvalWarning;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;object&gt; LogClientEvalWarning" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogClientEvalWarning" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogClientEvalWarning As EventDefinition(Of Object) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogClientEvalWarning : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogClientEvalWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The LINQ expression '{expression}' could not be translated and will be evaluated locally.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDisposingDataReader">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogDisposingDataReader;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogDisposingDataReader" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogDisposingDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogDisposingDataReader As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogDisposingDataReader : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogDisposingDataReader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A data reader was disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExplicitTransactionEnlisted">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogExplicitTransactionEnlisted;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogExplicitTransactionEnlisted" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogExplicitTransactionEnlisted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogExplicitTransactionEnlisted As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogExplicitTransactionEnlisted : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogExplicitTransactionEnlisted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Enlisted in an explicit transaction with isolation level '{isolationLevel}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogGeneratingDown">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogGeneratingDown;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogGeneratingDown" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogGeneratingDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogGeneratingDown As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogGeneratingDown : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogGeneratingDown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Generating down script for migration '{migration}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogGeneratingUp">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogGeneratingUp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogGeneratingUp" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogGeneratingUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogGeneratingUp As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogGeneratingUp : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogGeneratingUp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Generating up script for migration '{migration}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogKeyHasDefaultValue">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogKeyHasDefaultValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogKeyHasDefaultValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogKeyHasDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogKeyHasDefaultValue As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogKeyHasDefaultValue : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogKeyHasDefaultValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Property '{property}' on entity type '{entityType}' is part of a primary or alternate key but has a constant default value set. Constant default values are not useful for primary or alternate keys since these properties must always have non-null unqiue values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMigrating">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogMigrating;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogMigrating" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogMigrating" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMigrating As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMigrating : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogMigrating" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Migrating using database '{database}' on server '{dataSource}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMigrationAttributeMissingWarning">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMigrationAttributeMissingWarning;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMigrationAttributeMissingWarning" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogMigrationAttributeMissingWarning" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMigrationAttributeMissingWarning As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMigrationAttributeMissingWarning : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogMigrationAttributeMissingWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A MigrationAttribute isn't specified on the '{class}' class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNoMigrationsApplied">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogNoMigrationsApplied;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogNoMigrationsApplied" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogNoMigrationsApplied" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogNoMigrationsApplied As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogNoMigrationsApplied : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogNoMigrationsApplied" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No migrations were applied. The database is already up to date.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNoMigrationsFound">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogNoMigrationsFound;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogNoMigrationsFound" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogNoMigrationsFound" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogNoMigrationsFound As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogNoMigrationsFound : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogNoMigrationsFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No migrations were found in assembly '{migrationsAssembly}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPossibleUnintendedUseOfEquals">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;object&gt; LogPossibleUnintendedUseOfEquals;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;object&gt; LogPossibleUnintendedUseOfEquals" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogPossibleUnintendedUseOfEquals" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPossibleUnintendedUseOfEquals As EventDefinition(Of Object) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPossibleUnintendedUseOfEquals : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogPossibleUnintendedUseOfEquals" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Possible unintended use of method Equals(object) for arguments of different types in expression '{expression}'. This comparison will always return 'false'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogQueryPossibleExceptionWithAggregateOperator">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogQueryPossibleExceptionWithAggregateOperator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogQueryPossibleExceptionWithAggregateOperator" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogQueryPossibleExceptionWithAggregateOperator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogQueryPossibleExceptionWithAggregateOperator As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogQueryPossibleExceptionWithAggregateOperator : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogQueryPossibleExceptionWithAggregateOperator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Possible unintended use of a potentially throwing aggregate method (Min, Max, Average) in a subquery. Client evaluation will be used and operator will throw if no data exists. Changing the subquery result type to a nullable type will allow full translation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerBeginningTransaction">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogRelationalLoggerBeginningTransaction;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogRelationalLoggerBeginningTransaction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerBeginningTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerBeginningTransaction As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerBeginningTransaction : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerBeginningTransaction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Beginning transaction with isolation level '{isolationLevel}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerClosedConnection">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRelationalLoggerClosedConnection;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRelationalLoggerClosedConnection" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerClosedConnection" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerClosedConnection As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerClosedConnection : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerClosedConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Closed connection to database '{database}' on server '{server}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerClosingConnection">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRelationalLoggerClosingConnection;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRelationalLoggerClosingConnection" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerClosingConnection" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerClosingConnection As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerClosingConnection : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerClosingConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Closing connection to database '{database}' on server '{server}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerCommandFailed">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,System.Data.CommandType,int,string,string&gt; LogRelationalLoggerCommandFailed;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6&lt;string, string, valuetype System.Data.CommandType, int32, string, string&gt; LogRelationalLoggerCommandFailed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerCommandFailed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerCommandFailed As EventDefinition(Of String, String, CommandType, Integer, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerCommandFailed : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, System.Data.CommandType, int, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerCommandFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Data.CommandType,System.Int32,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Failed executing DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerCommittingTransaction">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerCommittingTransaction;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerCommittingTransaction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerCommittingTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerCommittingTransaction As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerCommittingTransaction : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerCommittingTransaction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Committing transaction.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerConnectionError">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRelationalLoggerConnectionError;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRelationalLoggerConnectionError" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerConnectionError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerConnectionError As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerConnectionError : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerConnectionError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An error occurred using the connection to database '{database}' on server '{server}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerConnectionErrorAsDebug">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRelationalLoggerConnectionErrorAsDebug;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRelationalLoggerConnectionErrorAsDebug" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerConnectionErrorAsDebug" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerConnectionErrorAsDebug As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerConnectionErrorAsDebug : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerConnectionErrorAsDebug" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An error occurred using the connection to database '{database}' on server '{server}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerDisposingTransaction">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerDisposingTransaction;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerDisposingTransaction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerDisposingTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerDisposingTransaction As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerDisposingTransaction : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerDisposingTransaction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Disposing transaction.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerExecutedCommand">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,System.Data.CommandType,int,string,string&gt; LogRelationalLoggerExecutedCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6&lt;string, string, valuetype System.Data.CommandType, int32, string, string&gt; LogRelationalLoggerExecutedCommand" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerExecutedCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerExecutedCommand As EventDefinition(Of String, String, CommandType, Integer, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerExecutedCommand : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, System.Data.CommandType, int, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerExecutedCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Data.CommandType,System.Int32,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerExecutingCommand">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,System.Data.CommandType,int,string,string&gt; LogRelationalLoggerExecutingCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, valuetype System.Data.CommandType, int32, string, string&gt; LogRelationalLoggerExecutingCommand" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerExecutingCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerExecutingCommand As EventDefinition(Of String, CommandType, Integer, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerExecutingCommand : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, System.Data.CommandType, int, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerExecutingCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Data.CommandType,System.Int32,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Executing DbCommand [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerOpenedConnection">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRelationalLoggerOpenedConnection;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRelationalLoggerOpenedConnection" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerOpenedConnection" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerOpenedConnection As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerOpenedConnection : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerOpenedConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Opened connection to database '{database}' on server '{server}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerOpeningConnection">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRelationalLoggerOpeningConnection;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRelationalLoggerOpeningConnection" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerOpeningConnection" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerOpeningConnection As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerOpeningConnection : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerOpeningConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Opening connection to database '{database}' on server '{server}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerRollingbackTransaction">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerRollingbackTransaction;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerRollingbackTransaction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerRollingbackTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerRollingbackTransaction As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerRollingbackTransaction : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerRollingbackTransaction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Rolling back transaction.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerTransactionError">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerTransactionError;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRelationalLoggerTransactionError" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerTransactionError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerTransactionError As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerTransactionError : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerTransactionError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An error occurred using a transaction.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRelationalLoggerUsingTransaction">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogRelationalLoggerUsingTransaction;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogRelationalLoggerUsingTransaction" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerUsingTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRelationalLoggerUsingTransaction As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRelationalLoggerUsingTransaction : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRelationalLoggerUsingTransaction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Using an existing transaction with isolation level '{isolationLevel}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRevertingMigration">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogRevertingMigration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogRevertingMigration" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRevertingMigration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRevertingMigration As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRevertingMigration : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogRevertingMigration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Reverting migration '{migration}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogValueConversionSqlLiteralWarning">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;object,object&gt; LogValueConversionSqlLiteralWarning;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;object, object&gt; LogValueConversionSqlLiteralWarning" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogValueConversionSqlLiteralWarning" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogValueConversionSqlLiteralWarning As EventDefinition(Of Object, Object) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogValueConversionSqlLiteralWarning : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;obj, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.LogValueConversionSqlLiteralWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A SQL parameter or literal was generated for the type '{type}' using the ValueConverter '{valueConverter}'. Review the generated SQL for correctness and consider evaluating the target expression in-memory instead.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationNotFound">
      <MemberSignature Language="C#" Value="public static string MigrationNotFound (object migrationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MigrationNotFound(object migrationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MigrationNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MigrationNotFound (migrationName As Object) As String" />
      <MemberSignature Language="F#" Value="static member MigrationNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MigrationNotFound migrationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="migrationName">To be added.</param>
        <summary>
                The migration '{migrationName}' was not found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingParameterValue">
      <MemberSignature Language="C#" Value="public static string MissingParameterValue (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MissingParameterValue(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MissingParameterValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MissingParameterValue (parameter As Object) As String" />
      <MemberSignature Language="F#" Value="static member MissingParameterValue : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MissingParameterValue parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                No value provided for required parameter '{parameter}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommandInvalidEntityState">
      <MemberSignature Language="C#" Value="public static string ModificationCommandInvalidEntityState (object entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ModificationCommandInvalidEntityState(object entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ModificationCommandInvalidEntityState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModificationCommandInvalidEntityState (entityState As Object) As String" />
      <MemberSignature Language="F#" Value="static member ModificationCommandInvalidEntityState : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ModificationCommandInvalidEntityState entityState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityState" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityState">To be added.</param>
        <summary>
                Cannot save changes for an entity in state '{entityState}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationFunctionInvalidEntityState">
      <MemberSignature Language="C#" Value="public static string ModificationFunctionInvalidEntityState (object entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ModificationFunctionInvalidEntityState(object entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ModificationFunctionInvalidEntityState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModificationFunctionInvalidEntityState (entityState As Object) As String" />
      <MemberSignature Language="F#" Value="static member ModificationFunctionInvalidEntityState : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ModificationFunctionInvalidEntityState entityState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityState" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="entityState">To be added.</param>
        <summary>
            Cannot create a ModificationFunction for an entity in state '{entityState}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleProvidersConfigured">
      <MemberSignature Language="C#" Value="public static string MultipleProvidersConfigured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MultipleProvidersConfigured" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MultipleProvidersConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MultipleProvidersConfigured As String" />
      <MemberSignature Language="F#" Value="static member MultipleProvidersConfigured : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MultipleProvidersConfigured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Multiple relational database provider configurations found. A context can only be configured to use a single database provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedConnectionStringNotFound">
      <MemberSignature Language="C#" Value="public static string NamedConnectionStringNotFound (object name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NamedConnectionStringNotFound(object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NamedConnectionStringNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedConnectionStringNotFound (name As Object) As String" />
      <MemberSignature Language="F#" Value="static member NamedConnectionStringNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NamedConnectionStringNotFound name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
                A named connection string was used, but the name '{name}' was not found in the application's configuration. Note that named connection strings are only supported when using 'IConfiguration' and a service provider, such as in a typical ASP.NET Core application. See https://go.microsoft.com/fwlink/?linkid=850912 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoActiveTransaction">
      <MemberSignature Language="C#" Value="public static string NoActiveTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoActiveTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoActiveTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoActiveTransaction As String" />
      <MemberSignature Language="F#" Value="static member NoActiveTransaction : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoActiveTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The connection does not have any active transactions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoConnectionOrConnectionString">
      <MemberSignature Language="C#" Value="public static string NoConnectionOrConnectionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoConnectionOrConnectionString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoConnectionOrConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoConnectionOrConnectionString As String" />
      <MemberSignature Language="F#" Value="static member NoConnectionOrConnectionString : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoConnectionOrConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A relational store has been configured without specifying either the DbConnection or connection string to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDiscriminatorForValue">
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorForValue (object entityType, object rootEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDiscriminatorForValue(object entityType, object rootEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorForValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDiscriminatorForValue (entityType As Object, rootEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDiscriminatorForValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorForValue (entityType, rootEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="rootEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="rootEntityType">To be added.</param>
        <summary>
                Cannot set discriminator value for entity type '{entityType}' because the root entity type '{rootEntityType}' doesn't have a discriminator property set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDiscriminatorProperty">
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorProperty (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDiscriminatorProperty(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDiscriminatorProperty (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDiscriminatorProperty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorProperty entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is part of a hierarchy, but does not have a discriminator property configured.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDiscriminatorValue">
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorValue (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDiscriminatorValue(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDiscriminatorValue (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDiscriminatorValue : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorValue entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is part of a hierarchy, but does not have a discriminator value configured.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoElements">
      <MemberSignature Language="C#" Value="public static string NoElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoElements" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoElements As String" />
      <MemberSignature Language="F#" Value="static member NoElements : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Sequence contains no elements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProviderConfigured">
      <MemberSignature Language="C#" Value="public static string NoProviderConfigured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoProviderConfigured" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoProviderConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoProviderConfigured As String" />
      <MemberSignature Language="F#" Value="static member NoProviderConfigured : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoProviderConfigured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No relational database providers are configured. Configure a database provider using OnConfiguring or by creating an ImmutableDbContextOptions with a database provider configured and passing it to the context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterNotObjectArray">
      <MemberSignature Language="C#" Value="public static string ParameterNotObjectArray (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ParameterNotObjectArray(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ParameterNotObjectArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParameterNotObjectArray (parameter As Object) As String" />
      <MemberSignature Language="F#" Value="static member ParameterNotObjectArray : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ParameterNotObjectArray parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                Cannot use the value provided for parameter '{parameter}' because it isn't assignable to type object[].
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleIncorrectResultsUsingLikeOperator">
      <MemberSignature Language="C#" Value="public static string PossibleIncorrectResultsUsingLikeOperator (object function);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PossibleIncorrectResultsUsingLikeOperator(object function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.PossibleIncorrectResultsUsingLikeOperator(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PossibleIncorrectResultsUsingLikeOperator (function As Object) As String" />
      <MemberSignature Language="F#" Value="static member PossibleIncorrectResultsUsingLikeOperator : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.PossibleIncorrectResultsUsingLikeOperator function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>
            Linq translation for method '{function}' used by this database provider can return incorrect results when the value argument contains wildcard characters (e.g. '%' or '_').
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedUseOfEquals">
      <MemberSignature Language="C#" Value="public static string PossibleUnintendedUseOfEquals (object left, object right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PossibleUnintendedUseOfEquals(object left, object right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.PossibleUnintendedUseOfEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PossibleUnintendedUseOfEquals (left As Object, right As Object) As String" />
      <MemberSignature Language="F#" Value="static member PossibleUnintendedUseOfEquals : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.PossibleUnintendedUseOfEquals (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="right" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            Possible unintended use of method Equals(object) for arguments of different types: '{left}', '{right}'. This comparison will always return 'false'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalCloneNotImplemented">
      <MemberSignature Language="C#" Value="public static string RelationalCloneNotImplemented (object mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationalCloneNotImplemented(object mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalCloneNotImplemented(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationalCloneNotImplemented (mapping As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationalCloneNotImplemented : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalCloneNotImplemented mapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="mapping">To be added.</param>
        <summary>
                The '{mapping}' does not support 2.2 style type mapping. The database provider needs to be updated to support the full set of mapping customization.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalLoggerBeginningTransaction">
      <MemberSignature Language="C#" Value="public static string RelationalLoggerBeginningTransaction (object isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationalLoggerBeginningTransaction(object isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerBeginningTransaction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationalLoggerBeginningTransaction (isolationLevel As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationalLoggerBeginningTransaction : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerBeginningTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>
            Beginning transaction with isolation level '{isolationLevel}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalLoggerClosingConnection">
      <MemberSignature Language="C#" Value="public static string RelationalLoggerClosingConnection (object database, object server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationalLoggerClosingConnection(object database, object server) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerClosingConnection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationalLoggerClosingConnection (database As Object, server As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationalLoggerClosingConnection : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerClosingConnection (database, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="server" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="database">To be added.</param>
        <param name="server">To be added.</param>
        <summary>
            Closing connection to database '{database}' on server '{server}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalLoggerCommittingTransaction">
      <MemberSignature Language="C#" Value="public static string RelationalLoggerCommittingTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RelationalLoggerCommittingTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerCommittingTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RelationalLoggerCommittingTransaction As String" />
      <MemberSignature Language="F#" Value="static member RelationalLoggerCommittingTransaction : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerCommittingTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Committing transaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalLoggerExecutedCommand">
      <MemberSignature Language="C#" Value="public static string RelationalLoggerExecutedCommand (object elapsed, object parameters, object commandType, object commandTimeout, object newLine, object commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationalLoggerExecutedCommand(object elapsed, object parameters, object commandType, object commandTimeout, object newLine, object commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerExecutedCommand(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationalLoggerExecutedCommand (elapsed As Object, parameters As Object, commandType As Object, commandTimeout As Object, newLine As Object, commandText As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationalLoggerExecutedCommand : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerExecutedCommand (elapsed, parameters, commandType, commandTimeout, newLine, commandText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elapsed" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="parameters" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="commandType" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="commandTimeout" Type="System.Object" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="newLine" Type="System.Object" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="commandText" Type="System.Object" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="elapsed">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="commandType">To be added.</param>
        <param name="commandTimeout">To be added.</param>
        <param name="newLine">To be added.</param>
        <param name="commandText">To be added.</param>
        <summary>
            Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalLoggerOpeningConnection">
      <MemberSignature Language="C#" Value="public static string RelationalLoggerOpeningConnection (object database, object server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationalLoggerOpeningConnection(object database, object server) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerOpeningConnection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationalLoggerOpeningConnection (database As Object, server As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationalLoggerOpeningConnection : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerOpeningConnection (database, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="server" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="database">To be added.</param>
        <param name="server">To be added.</param>
        <summary>
            Opening connection to database '{database}' on server '{server}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalLoggerRollingbackTransaction">
      <MemberSignature Language="C#" Value="public static string RelationalLoggerRollingbackTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RelationalLoggerRollingbackTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerRollingbackTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RelationalLoggerRollingbackTransaction As String" />
      <MemberSignature Language="F#" Value="static member RelationalLoggerRollingbackTransaction : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerRollingbackTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Rolling back transaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalNotInUse">
      <MemberSignature Language="C#" Value="public static string RelationalNotInUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RelationalNotInUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalNotInUse" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RelationalNotInUse As String" />
      <MemberSignature Language="F#" Value="static member RelationalNotInUse : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalNotInUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational-specific methods can only be used when the context is using a relational database provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevertingMigration">
      <MemberSignature Language="C#" Value="public static string RevertingMigration (object migration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RevertingMigration(object migration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RevertingMigration(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertingMigration (migration As Object) As String" />
      <MemberSignature Language="F#" Value="static member RevertingMigration : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RevertingMigration migration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migration" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="migration">To be added.</param>
        <summary>
            Reverting migration '{migration}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedRowEntryCountMismatch">
      <MemberSignature Language="C#" Value="public static string SharedRowEntryCountMismatch (object entityType, object tableName, object missingEntityType, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SharedRowEntryCountMismatch(object entityType, object tableName, object missingEntityType, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SharedRowEntryCountMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SharedRowEntryCountMismatch (entityType As Object, tableName As Object, missingEntityType As Object, state As Object) As String" />
      <MemberSignature Language="F#" Value="static member SharedRowEntryCountMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SharedRowEntryCountMismatch (entityType, tableName, missingEntityType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="tableName" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="missingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="missingEntityType">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                The entity of type '{entityType}' is sharing the table '{tableName}' with entities of type '{missingEntityType}', but there is no entity of this type with the same key value that has been marked as '{state}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedRowEntryCountMismatchSensitive">
      <MemberSignature Language="C#" Value="public static string SharedRowEntryCountMismatchSensitive (object entityType, object tableName, object missingEntityType, object keyValue, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SharedRowEntryCountMismatchSensitive(object entityType, object tableName, object missingEntityType, object keyValue, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SharedRowEntryCountMismatchSensitive(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SharedRowEntryCountMismatchSensitive (entityType As Object, tableName As Object, missingEntityType As Object, keyValue As Object, state As Object) As String" />
      <MemberSignature Language="F#" Value="static member SharedRowEntryCountMismatchSensitive : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SharedRowEntryCountMismatchSensitive (entityType, tableName, missingEntityType, keyValue, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="tableName" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="missingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="keyValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="missingEntityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                The entity of type '{entityType}' is sharing the table '{tableName}' with entities of type '{missingEntityType}', but there is no entity of this type with the same key value '{keyValue}' that has been marked as '{state}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlFunctionArgumentsAndMappingsMismatch">
      <MemberSignature Language="C#" Value="public static string SqlFunctionArgumentsAndMappingsMismatch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SqlFunctionArgumentsAndMappingsMismatch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SqlFunctionArgumentsAndMappingsMismatch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SqlFunctionArgumentsAndMappingsMismatch As String" />
      <MemberSignature Language="F#" Value="static member SqlFunctionArgumentsAndMappingsMismatch : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SqlFunctionArgumentsAndMappingsMismatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The number of argument type mappings does not match the number of arguments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlFunctionNullArgumentMapping">
      <MemberSignature Language="C#" Value="public static string SqlFunctionNullArgumentMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SqlFunctionNullArgumentMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SqlFunctionNullArgumentMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SqlFunctionNullArgumentMapping As String" />
      <MemberSignature Language="F#" Value="static member SqlFunctionNullArgumentMapping : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SqlFunctionNullArgumentMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                One of the specified argument type mappings was null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlFunctionUnexpectedInstanceMapping">
      <MemberSignature Language="C#" Value="public static string SqlFunctionUnexpectedInstanceMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SqlFunctionUnexpectedInstanceMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SqlFunctionUnexpectedInstanceMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SqlFunctionUnexpectedInstanceMapping As String" />
      <MemberSignature Language="F#" Value="static member SqlFunctionUnexpectedInstanceMapping : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.SqlFunctionUnexpectedInstanceMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An instance type mapping was specified without an instance expression.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoredProcedureIncludeNotSupported">
      <MemberSignature Language="C#" Value="public static string StoredProcedureIncludeNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string StoredProcedureIncludeNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.StoredProcedureIncludeNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StoredProcedureIncludeNotSupported As String" />
      <MemberSignature Language="F#" Value="static member StoredProcedureIncludeNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.StoredProcedureIncludeNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The Include operation is not supported when calling a stored procedure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutTooBig">
      <MemberSignature Language="C#" Value="public static string TimeoutTooBig (object seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TimeoutTooBig(object seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TimeoutTooBig(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TimeoutTooBig (seconds As Object) As String" />
      <MemberSignature Language="F#" Value="static member TimeoutTooBig : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TimeoutTooBig seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <summary>
                Timeout must be less than or equal to Int32.MaxValue (2147483647) seconds.  Provided: {seconds} seconds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutTooSmall">
      <MemberSignature Language="C#" Value="public static string TimeoutTooSmall (object seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TimeoutTooSmall(object seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TimeoutTooSmall(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TimeoutTooSmall (seconds As Object) As String" />
      <MemberSignature Language="F#" Value="static member TimeoutTooSmall : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TimeoutTooSmall seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <summary>
                Timeout must be greater than or equal to zero.  Provided: {seconds} seconds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAlreadyStarted">
      <MemberSignature Language="C#" Value="public static string TransactionAlreadyStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TransactionAlreadyStarted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAlreadyStarted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionAlreadyStarted As String" />
      <MemberSignature Language="F#" Value="static member TransactionAlreadyStarted : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAlreadyStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The connection is already in a transaction and cannot participate in another transaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAssociatedWithDifferentConnection">
      <MemberSignature Language="C#" Value="public static string TransactionAssociatedWithDifferentConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TransactionAssociatedWithDifferentConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAssociatedWithDifferentConnection" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionAssociatedWithDifferentConnection As String" />
      <MemberSignature Language="F#" Value="static member TransactionAssociatedWithDifferentConnection : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAssociatedWithDifferentConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The specified transaction is not associated with the current connection. Only transactions associated with the current connection may be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnableToDiscriminate">
      <MemberSignature Language="C#" Value="public static string UnableToDiscriminate (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnableToDiscriminate(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnableToDiscriminate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnableToDiscriminate (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnableToDiscriminate : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnableToDiscriminate entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to materialize entity of type '{entityType}'. No discriminators were matched.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownOperation">
      <MemberSignature Language="C#" Value="public static string UnknownOperation (object sqlGeneratorType, object operationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnknownOperation(object sqlGeneratorType, object operationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnknownOperation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnknownOperation (sqlGeneratorType As Object, operationType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnknownOperation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnknownOperation (sqlGeneratorType, operationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlGeneratorType" Type="System.Object" />
        <Parameter Name="operationType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sqlGeneratorType">To be added.</param>
        <param name="operationType">To be added.</param>
        <summary>
                The current migration SQL generator '{sqlGeneratorType}' is unable to generate SQL for operations of type '{operationType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsupportedPropertyType">
      <MemberSignature Language="C#" Value="public static string UnsupportedPropertyType (object entity, object property, object clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnsupportedPropertyType(object entity, object property, object clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedPropertyType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsupportedPropertyType (entity As Object, property As Object, clrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnsupportedPropertyType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedPropertyType (entity, property, clrType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="clrType" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="property">To be added.</param>
        <param name="clrType">To be added.</param>
        <summary>
                No mapping to a relational type can be found for property '{entity}.{property}' with the CLR type '{clrType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsupportedType">
      <MemberSignature Language="C#" Value="public static string UnsupportedType (object clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnsupportedType(object clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsupportedType (clrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnsupportedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedType clrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <summary>
                No mapping to a relational type can be found for the CLR type '{clrType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateConcurrencyException">
      <MemberSignature Language="C#" Value="public static string UpdateConcurrencyException (object expectedRows, object actualRows);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UpdateConcurrencyException(object expectedRows, object actualRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateConcurrencyException(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateConcurrencyException (expectedRows As Object, actualRows As Object) As String" />
      <MemberSignature Language="F#" Value="static member UpdateConcurrencyException : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateConcurrencyException (expectedRows, actualRows)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedRows" Type="System.Object" />
        <Parameter Name="actualRows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expectedRows">To be added.</param>
        <param name="actualRows">To be added.</param>
        <summary>
                Database operation expected to affect {expectedRows} row(s) but actually affected {actualRows} row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStoreException">
      <MemberSignature Language="C#" Value="public static string UpdateStoreException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UpdateStoreException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateStoreException" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UpdateStoreException As String" />
      <MemberSignature Language="F#" Value="static member UpdateStoreException : string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateStoreException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An error occurred while updating the entries. See the inner exception for details.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingConnection">
      <MemberSignature Language="C#" Value="public static string UsingConnection (object database, object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UsingConnection(object database, object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UsingConnection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UsingConnection (database As Object, dataSource As Object) As String" />
      <MemberSignature Language="F#" Value="static member UsingConnection : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UsingConnection (database, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="database">To be added.</param>
        <param name="dataSource">To be added.</param>
        <summary>
            Using database '{database}' on server '{dataSource}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
