<Type Name="IInjectableService" FullName="Microsoft.EntityFrameworkCore.Internal.IInjectableService">
  <TypeSignature Language="C#" Value="public interface IInjectableService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInjectableService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.IInjectableService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInjectableService" />
  <TypeSignature Language="F#" Value="type IInjectableService = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
      <para>
                    Implemented by service property types to notify services instances of lifecycle changes.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Attaching">
      <MemberSignature Language="C#" Value="public void Attaching (Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attaching(class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IInjectableService.Attaching(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attaching (context As DbContext, entityType As IEntityType, entity As Object)" />
      <MemberSignature Language="F#" Value="abstract member Attaching : Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj -&gt; unit" Usage="iInjectableService.Attaching (context, entityType, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance.</param>
        <param name="entityType">The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> of the instance being attached.</param>
        <param name="entity">The entity instance that is being attached.</param>
        <summary>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
          <para>
                    Called when an entity that needs this is being attached to a DbContext.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Detaching">
      <MemberSignature Language="C#" Value="public bool Detaching (Microsoft.EntityFrameworkCore.DbContext context, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Detaching(class Microsoft.EntityFrameworkCore.DbContext context, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IInjectableService.Detaching(Microsoft.EntityFrameworkCore.DbContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Detaching (context As DbContext, entity As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Detaching : Microsoft.EntityFrameworkCore.DbContext * obj -&gt; bool" Usage="iInjectableService.Detaching (context, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance.</param>
        <param name="entity">The entity instance that is being detached.</param>
        <summary>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
          <para>
                    Called when the entity holding this service is being detached from a DbContext.
                </para>
        </summary>
        <returns>
          <see langword="true" /> if the service property should be set to <see langword="null" />. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Injected">
      <MemberSignature Language="C#" Value="public void Injected (Microsoft.EntityFrameworkCore.DbContext context, object entity, Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo bindingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Injected(class Microsoft.EntityFrameworkCore.DbContext context, object entity, valuetype Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo bindingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IInjectableService.Injected(Microsoft.EntityFrameworkCore.DbContext,System.Object,Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Injected (context As DbContext, entity As Object, bindingInfo As ParameterBindingInfo)" />
      <MemberSignature Language="F#" Value="abstract member Injected : Microsoft.EntityFrameworkCore.DbContext * obj * Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo -&gt; unit" Usage="iInjectableService.Injected (context, entity, bindingInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="bindingInfo" Type="Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="bindingInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
