<Type Name="IDbContextPool&lt;TContext&gt;" FullName="Microsoft.EntityFrameworkCore.Internal.IDbContextPool&lt;TContext&gt;">
  <TypeSignature Language="C#" Value="public interface IDbContextPool&lt;TContext&gt; : Microsoft.EntityFrameworkCore.Internal.IDbContextPool where TContext : DbContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbContextPool`1&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt; implements class Microsoft.EntityFrameworkCore.Internal.IDbContextPool" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.IDbContextPool`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbContextPool(Of TContext)&#xA;Implements IDbContextPool" />
  <TypeSignature Language="F#" Value="type IDbContextPool&lt;'Context (requires 'Context :&gt; DbContext)&gt; = interface&#xA;    interface IDbContextPool" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDbContextPool`1&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt; implements class Microsoft.EntityFrameworkCore.Internal.IDbContextPool" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TContext">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IDbContextPool</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TContext">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
