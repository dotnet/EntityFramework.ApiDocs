<Type Name="CoreLoggerExtensions" FullName="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions">
  <TypeSignature Language="C#" Value="public static class CoreLoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CoreLoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CoreLoggerExtensions" />
  <TypeSignature Language="F#" Value="type CoreLoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CascadeDelete">
      <MemberSignature Language="C#" Value="public static void CascadeDelete (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry parentEntry, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDelete(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry parentEntry, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDelete(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDelete (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), childEntry As InternalEntityEntry, parentEntry As InternalEntityEntry, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDelete : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDelete (diagnostics, childEntry, parentEntry, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="childEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="childEntry">To be added.</param>
        <param name="parentEntry">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDeleteOrphan">
      <MemberSignature Language="C#" Value="public static void CascadeDeleteOrphan (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDeleteOrphan(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, class Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDeleteOrphan(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDeleteOrphan (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), childEntry As InternalEntityEntry, parentEntityType As IEntityType, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDeleteOrphan : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDeleteOrphan (diagnostics, childEntry, parentEntityType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="childEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="childEntry">To be added.</param>
        <param name="parentEntityType">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDeleteOrphanSensitive">
      <MemberSignature Language="C#" Value="public static void CascadeDeleteOrphanSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDeleteOrphanSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, class Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDeleteOrphanSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDeleteOrphanSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), childEntry As InternalEntityEntry, parentEntityType As IEntityType, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDeleteOrphanSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDeleteOrphanSensitive (diagnostics, childEntry, parentEntityType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="childEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="childEntry">To be added.</param>
        <param name="parentEntityType">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDeleteSensitive">
      <MemberSignature Language="C#" Value="public static void CascadeDeleteSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry parentEntry, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDeleteSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry childEntry, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry parentEntry, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDeleteSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDeleteSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), childEntry As InternalEntityEntry, parentEntry As InternalEntityEntry, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDeleteSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CascadeDeleteSensitive (diagnostics, childEntry, parentEntry, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="childEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="childEntry">To be added.</param>
        <param name="parentEntry">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChangeDetected">
      <MemberSignature Language="C#" Value="public static void CollectionChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, System.Collections.Generic.ISet&lt;object&gt; added, System.Collections.Generic.ISet&lt;object&gt; removed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CollectionChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Collections.Generic.ISet`1&lt;object&gt; added, class System.Collections.Generic.ISet`1&lt;object&gt; removed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CollectionChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.ISet{System.Object},System.Collections.Generic.ISet{System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CollectionChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, added As ISet(Of Object), removed As ISet(Of Object))" />
      <MemberSignature Language="F#" Value="static member CollectionChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Collections.Generic.ISet&lt;obj&gt; * System.Collections.Generic.ISet&lt;obj&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CollectionChangeDetected (diagnostics, internalEntityEntry, navigation, added, removed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="added" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="removed" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="added">To be added.</param>
        <param name="removed">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void CollectionChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, System.Collections.Generic.ISet&lt;object&gt; added, System.Collections.Generic.ISet&lt;object&gt; removed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CollectionChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Collections.Generic.ISet`1&lt;object&gt; added, class System.Collections.Generic.ISet`1&lt;object&gt; removed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CollectionChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.ISet{System.Object},System.Collections.Generic.ISet{System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CollectionChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, added As ISet(Of Object), removed As ISet(Of Object))" />
      <MemberSignature Language="F#" Value="static member CollectionChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Collections.Generic.ISet&lt;obj&gt; * System.Collections.Generic.ISet&lt;obj&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.CollectionChangeDetectedSensitive (diagnostics, internalEntityEntry, navigation, added, removed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="added" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="removed" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="added">To be added.</param>
        <param name="removed">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, System.Reflection.MemberInfo property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Reflection.MemberInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation, property As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (diagnostics, navigation, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingShadowForeignKeysWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingShadowForeignKeysWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingShadowForeignKeysWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ConflictingShadowForeignKeysWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingShadowForeignKeysWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member ConflictingShadowForeignKeysWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ConflictingShadowForeignKeysWarning (diagnostics, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposed">
      <MemberSignature Language="C#" Value="public static void ContextDisposed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContextDisposed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ContextDisposed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ContextDisposed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member ContextDisposed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ContextDisposed (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextInitialized">
      <MemberSignature Language="C#" Value="public static void ContextInitialized (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.DbContextOptions contextOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContextInitialized(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.DbContextOptions contextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ContextInitialized(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ContextInitialized (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, contextOptions As DbContextOptions)" />
      <MemberSignature Language="F#" Value="static member ContextInitialized : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.DbContextOptions -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ContextInitialized (diagnostics, context, contextOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachedLazyLoadingWarning">
      <MemberSignature Language="C#" Value="public static void DetachedLazyLoadingWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetachedLazyLoadingWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DetachedLazyLoadingWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DetachedLazyLoadingWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, entityType As Object, navigationName As String)" />
      <MemberSignature Language="F#" Value="static member DetachedLazyLoadingWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * obj * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DetachedLazyLoadingWarning (diagnostics, context, entityType, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="navigationName" Type="System.String" Index="3" FrameworkAlternate="efcore-2.2;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="navigationName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangesCompleted">
      <MemberSignature Language="C#" Value="public static void DetectChangesCompleted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetectChangesCompleted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DetectChangesCompleted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DetectChangesCompleted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member DetectChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DetectChangesCompleted (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangesStarting">
      <MemberSignature Language="C#" Value="public static void DetectChangesStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetectChangesStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DetectChangesStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DetectChangesStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member DetectChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DetectChangesStarting (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateDependentEntityTypeInstanceWarning">
      <MemberSignature Language="C#" Value="public static void DuplicateDependentEntityTypeInstanceWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent1, Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DuplicateDependentEntityTypeInstanceWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent1, class Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DuplicateDependentEntityTypeInstanceWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DuplicateDependentEntityTypeInstanceWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), dependent1 As IEntityType, dependent2 As IEntityType)" />
      <MemberSignature Language="F#" Value="static member DuplicateDependentEntityTypeInstanceWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.DuplicateDependentEntityTypeInstanceWarning (diagnostics, dependent1, dependent2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="dependent1" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="dependent2" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="dependent1">To be added.</param>
        <param name="dependent2">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyRetrying">
      <MemberSignature Language="C#" Value="public static void ExecutionStrategyRetrying (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Exception&gt; exceptionsEncountered, TimeSpan delay, bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecutionStrategyRetrying(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Exception&gt; exceptionsEncountered, valuetype System.TimeSpan delay, bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ExecutionStrategyRetrying(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.Collections.Generic.IReadOnlyList{System.Exception},System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExecutionStrategyRetrying (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), exceptionsEncountered As IReadOnlyList(Of Exception), delay As TimeSpan, async As Boolean)" />
      <MemberSignature Language="F#" Value="static member ExecutionStrategyRetrying : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * System.Collections.Generic.IReadOnlyList&lt;Exception&gt; * TimeSpan * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ExecutionStrategyRetrying (diagnostics, exceptionsEncountered, delay, async)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="exceptionsEncountered" Type="System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="delay" Type="System.TimeSpan" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="async" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="exceptionsEncountered">To be added.</param>
        <param name="delay">To be added.</param>
        <param name="async">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstWithoutOrderByAndFilterWarning">
      <MemberSignature Language="C#" Value="public static void FirstWithoutOrderByAndFilterWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FirstWithoutOrderByAndFilterWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.FirstWithoutOrderByAndFilterWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub FirstWithoutOrderByAndFilterWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="static member FirstWithoutOrderByAndFilterWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Remotion.Linq.QueryModel -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.FirstWithoutOrderByAndFilterWarning (diagnostics, queryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyAttributesOnBothNavigationsWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyAttributesOnBothNavigationsWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyAttributesOnBothNavigationsWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyAttributesOnBothNavigationsWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyAttributesOnBothNavigationsWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As INavigation, secondNavigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyAttributesOnBothNavigationsWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyAttributesOnBothNavigationsWarning (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="firstNavigation">To be added.</param>
        <param name="secondNavigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyAttributesOnBothPropertiesWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyAttributesOnBothPropertiesWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation, System.Reflection.MemberInfo firstProperty, System.Reflection.MemberInfo secondProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyAttributesOnBothPropertiesWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation, class System.Reflection.MemberInfo firstProperty, class System.Reflection.MemberInfo secondProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyAttributesOnBothPropertiesWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyAttributesOnBothPropertiesWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As INavigation, secondNavigation As INavigation, firstProperty As MemberInfo, secondProperty As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyAttributesOnBothPropertiesWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyAttributesOnBothPropertiesWarning (diagnostics, firstNavigation, secondNavigation, firstProperty, secondProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="firstProperty" Type="System.Reflection.MemberInfo" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="secondProperty" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="firstNavigation">To be added.</param>
        <param name="secondNavigation">To be added.</param>
        <param name="firstProperty">To be added.</param>
        <param name="secondProperty">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyChangeDetected">
      <MemberSignature Language="C#" Value="public static void ForeignKeyChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyChangeDetected (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newValue" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void ForeignKeyChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ForeignKeyChangeDetectedSensitive (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newValue" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeIgnoredWarning">
      <MemberSignature Language="C#" Value="public static void IncludeIgnoredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncludeIgnoredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.IncludeIgnoredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IncludeIgnoredWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), includeResultOperator As IncludeResultOperator)" />
      <MemberSignature Language="F#" Value="static member IncludeIgnoredWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.IncludeIgnoredWarning (diagnostics, includeResultOperator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="includeResultOperator" Type="Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="includeResultOperator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleMatchingForeignKeyProperties">
      <MemberSignature Language="C#" Value="public static void IncompatibleMatchingForeignKeyProperties (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; foreignKeyProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; principalKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncompatibleMatchingForeignKeyProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; foreignKeyProperties, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; principalKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IncompatibleMatchingForeignKeyProperties (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), foreignKeyProperties As IReadOnlyList(Of IPropertyBase), principalKeyProperties As IReadOnlyList(Of IPropertyBase))" />
      <MemberSignature Language="F#" Value="static member IncompatibleMatchingForeignKeyProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties (diagnostics, foreignKeyProperties, principalKeyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="principalKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="principalKeyProperties">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LazyLoadOnDisposedContextWarning">
      <MemberSignature Language="C#" Value="public static void LazyLoadOnDisposedContextWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LazyLoadOnDisposedContextWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.LazyLoadOnDisposedContextWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LazyLoadOnDisposedContextWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, entityType As Object, navigationName As String)" />
      <MemberSignature Language="F#" Value="static member LazyLoadOnDisposedContextWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * obj * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.LazyLoadOnDisposedContextWarning (diagnostics, context, entityType, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationName" Type="System.String" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="navigationName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManyServiceProvidersCreatedWarning">
      <MemberSignature Language="C#" Value="public static void ManyServiceProvidersCreatedWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, System.Collections.Generic.ICollection&lt;IServiceProvider&gt; serviceProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ManyServiceProvidersCreatedWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.Collections.Generic.ICollection`1&lt;class System.IServiceProvider&gt; serviceProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ManyServiceProvidersCreatedWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.Collections.Generic.ICollection{System.IServiceProvider})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ManyServiceProvidersCreatedWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), serviceProviders As ICollection(Of IServiceProvider))" />
      <MemberSignature Language="F#" Value="static member ManyServiceProvidersCreatedWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * System.Collections.Generic.ICollection&lt;IServiceProvider&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ManyServiceProvidersCreatedWarning (diagnostics, serviceProviders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="serviceProviders" Type="System.Collections.Generic.ICollection&lt;System.IServiceProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="serviceProviders">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleInversePropertiesSameTargetWarning">
      <MemberSignature Language="C#" Value="public static void MultipleInversePropertiesSameTargetWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo,Type&gt;&gt; conflictingNavigations, System.Reflection.MemberInfo inverseNavigation, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultipleInversePropertiesSameTargetWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.Reflection.MemberInfo, class System.Type&gt;&gt; conflictingNavigations, class System.Reflection.MemberInfo inverseNavigation, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.MultipleInversePropertiesSameTargetWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IEnumerable{System.Tuple{System.Reflection.MemberInfo,System.Type}},System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultipleInversePropertiesSameTargetWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), conflictingNavigations As IEnumerable(Of Tuple(Of MemberInfo, Type)), inverseNavigation As MemberInfo, targetType As Type)" />
      <MemberSignature Language="F#" Value="static member MultipleInversePropertiesSameTargetWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * seq&lt;System.Reflection.MemberInfo * Type&gt; * System.Reflection.MemberInfo * Type -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.MultipleInversePropertiesSameTargetWarning (diagnostics, conflictingNavigations, inverseNavigation, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="conflictingNavigations" Type="System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.Reflection.MemberInfo,System.Type&gt;&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="inverseNavigation" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="targetType" Type="System.Type" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="conflictingNavigations">To be added.</param>
        <param name="inverseNavigation">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleNavigationProperties">
      <MemberSignature Language="C#" Value="public static void MultipleNavigationProperties (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo,Type&gt;&gt; firstPropertyCollection, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo,Type&gt;&gt; secondPropertyCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultipleNavigationProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.Reflection.MemberInfo, class System.Type&gt;&gt; firstPropertyCollection, class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.Reflection.MemberInfo, class System.Type&gt;&gt; secondPropertyCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.MultipleNavigationProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IEnumerable{System.Tuple{System.Reflection.MemberInfo,System.Type}},System.Collections.Generic.IEnumerable{System.Tuple{System.Reflection.MemberInfo,System.Type}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultipleNavigationProperties (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstPropertyCollection As IEnumerable(Of Tuple(Of MemberInfo, Type)), secondPropertyCollection As IEnumerable(Of Tuple(Of MemberInfo, Type)))" />
      <MemberSignature Language="F#" Value="static member MultipleNavigationProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * seq&lt;System.Reflection.MemberInfo * Type&gt; * seq&lt;System.Reflection.MemberInfo * Type&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.MultipleNavigationProperties (diagnostics, firstPropertyCollection, secondPropertyCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="firstPropertyCollection" Type="System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.Reflection.MemberInfo,System.Type&gt;&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="secondPropertyCollection" Type="System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.Reflection.MemberInfo,System.Type&gt;&gt;" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="firstPropertyCollection">To be added.</param>
        <param name="secondPropertyCollection">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplePrimaryKeyCandidates">
      <MemberSignature Language="C#" Value="public static void MultiplePrimaryKeyCandidates (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty firstProperty, Microsoft.EntityFrameworkCore.Metadata.IProperty secondProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiplePrimaryKeyCandidates(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty firstProperty, class Microsoft.EntityFrameworkCore.Metadata.IProperty secondProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.MultiplePrimaryKeyCandidates(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultiplePrimaryKeyCandidates (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstProperty As IProperty, secondProperty As IProperty)" />
      <MemberSignature Language="F#" Value="static member MultiplePrimaryKeyCandidates : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.MultiplePrimaryKeyCandidates (diagnostics, firstProperty, secondProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="firstProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="secondProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="firstProperty">To be added.</param>
        <param name="secondProperty">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationIncluded">
      <MemberSignature Language="C#" Value="public static void NavigationIncluded (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigationIncluded(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator includeResultOperator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NavigationIncluded(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NavigationIncluded (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), includeResultOperator As IncludeResultOperator)" />
      <MemberSignature Language="F#" Value="static member NavigationIncluded : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NavigationIncluded (diagnostics, includeResultOperator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="includeResultOperator" Type="Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="includeResultOperator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationLazyLoading">
      <MemberSignature Language="C#" Value="public static void NavigationLazyLoading (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigationLazyLoading(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NavigationLazyLoading(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NavigationLazyLoading (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, entityType As Object, navigationName As String)" />
      <MemberSignature Language="F#" Value="static member NavigationLazyLoading : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * obj * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NavigationLazyLoading (diagnostics, context, entityType, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationName" Type="System.String" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="navigationName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonDefiningInverseNavigationWarning">
      <MemberSignature Language="C#" Value="public static void NonDefiningInverseNavigationWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, System.Reflection.MemberInfo navigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, System.Reflection.MemberInfo inverseNavigation, System.Reflection.MemberInfo definingNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonDefiningInverseNavigationWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, class System.Reflection.MemberInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, class System.Reflection.MemberInfo inverseNavigation, class System.Reflection.MemberInfo definingNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NonDefiningInverseNavigationWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonDefiningInverseNavigationWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), declaringType As IEntityType, navigation As MemberInfo, targetType As IEntityType, inverseNavigation As MemberInfo, definingNavigation As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member NonDefiningInverseNavigationWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NonDefiningInverseNavigationWarning (diagnostics, declaringType, navigation, targetType, inverseNavigation, definingNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="declaringType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="targetType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="inverseNavigation" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="definingNavigation" Type="System.Reflection.MemberInfo" Index="5" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="inverseNavigation">To be added.</param>
        <param name="definingNavigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonOwnershipInverseNavigationWarning">
      <MemberSignature Language="C#" Value="public static void NonOwnershipInverseNavigationWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, System.Reflection.MemberInfo navigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, System.Reflection.MemberInfo inverseNavigation, System.Reflection.MemberInfo ownershipNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonOwnershipInverseNavigationWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, class System.Reflection.MemberInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, class System.Reflection.MemberInfo inverseNavigation, class System.Reflection.MemberInfo ownershipNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NonOwnershipInverseNavigationWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonOwnershipInverseNavigationWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), declaringType As IEntityType, navigation As MemberInfo, targetType As IEntityType, inverseNavigation As MemberInfo, ownershipNavigation As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member NonOwnershipInverseNavigationWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.NonOwnershipInverseNavigationWarning (diagnostics, declaringType, navigation, targetType, inverseNavigation, ownershipNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="declaringType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="targetType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="inverseNavigation" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="ownershipNavigation" Type="System.Reflection.MemberInfo" Index="5" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="declaringType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="inverseNavigation">To be added.</param>
        <param name="ownershipNavigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimisticConcurrencyException">
      <MemberSignature Language="C#" Value="public static void OptimisticConcurrencyException (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OptimisticConcurrencyException(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.OptimisticConcurrencyException(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub OptimisticConcurrencyException (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member OptimisticConcurrencyException : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.OptimisticConcurrencyException (diagnostics, context, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedCollectionNavigationNullComparisonWarning">
      <MemberSignature Language="C#" Value="public static void PossibleUnintendedCollectionNavigationNullComparisonWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; navigationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleUnintendedCollectionNavigationNullComparisonWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; navigationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedCollectionNavigationNullComparisonWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleUnintendedCollectionNavigationNullComparisonWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), navigationPath As IReadOnlyCollection(Of IPropertyBase))" />
      <MemberSignature Language="F#" Value="static member PossibleUnintendedCollectionNavigationNullComparisonWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedCollectionNavigationNullComparisonWarning (diagnostics, navigationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" Index="0" FrameworkAlternate="efcore-2.0" RefType="this" />
        <Parameter Name="navigationPath" Type="System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="1" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="navigationPath">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedCollectionNavigationNullComparisonWarning">
      <MemberSignature Language="C#" Value="public static void PossibleUnintendedCollectionNavigationNullComparisonWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; navigationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleUnintendedCollectionNavigationNullComparisonWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; navigationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedCollectionNavigationNullComparisonWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleUnintendedCollectionNavigationNullComparisonWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), navigationPath As IReadOnlyList(Of IPropertyBase))" />
      <MemberSignature Language="F#" Value="static member PossibleUnintendedCollectionNavigationNullComparisonWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedCollectionNavigationNullComparisonWarning (diagnostics, navigationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationPath" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="navigationPath">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedReferenceComparisonWarning">
      <MemberSignature Language="C#" Value="public static void PossibleUnintendedReferenceComparisonWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleUnintendedReferenceComparisonWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedReferenceComparisonWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleUnintendedReferenceComparisonWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), left As Expression, right As Expression)" />
      <MemberSignature Language="F#" Value="static member PossibleUnintendedReferenceComparisonWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PossibleUnintendedReferenceComparisonWarning (diagnostics, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChangeDetected">
      <MemberSignature Language="C#" Value="public static void PropertyChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PropertyChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PropertyChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PropertyChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member PropertyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PropertyChangeDetected (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newValue" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void PropertyChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PropertyChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PropertyChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PropertyChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member PropertyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.PropertyChangeDetectedSensitive (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newValue" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryExecutionPlanned">
      <MemberSignature Language="C#" Value="public static void QueryExecutionPlanned (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter expressionPrinter, System.Linq.Expressions.Expression queryExecutorExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryExecutionPlanned(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter expressionPrinter, class System.Linq.Expressions.Expression queryExecutorExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryExecutionPlanned(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryExecutionPlanned (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), expressionPrinter As IExpressionPrinter, queryExecutorExpression As Expression)" />
      <MemberSignature Language="F#" Value="static member QueryExecutionPlanned : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter * System.Linq.Expressions.Expression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryExecutionPlanned (diagnostics, expressionPrinter, queryExecutorExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" />
        <Parameter Name="queryExecutorExpression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="expressionPrinter">To be added.</param>
        <param name="queryExecutorExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryIterationFailed">
      <MemberSignature Language="C#" Value="public static void QueryIterationFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryIterationFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryIterationFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryIterationFailed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), contextType As Type, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member QueryIterationFailed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Type * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryIterationFailed (diagnostics, contextType, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="contextType">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryModelCompiling">
      <MemberSignature Language="C#" Value="public static void QueryModelCompiling (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryModelCompiling(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryModelCompiling(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryModelCompiling (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="static member QueryModelCompiling : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Remotion.Linq.QueryModel -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryModelCompiling (diagnostics, queryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryModelOptimized">
      <MemberSignature Language="C#" Value="public static void QueryModelOptimized (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryModelOptimized(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryModelOptimized(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryModelOptimized (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="static member QueryModelOptimized : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Remotion.Linq.QueryModel -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.QueryModelOptimized (diagnostics, queryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedundantForeignKeyWarning">
      <MemberSignature Language="C#" Value="public static void RedundantForeignKeyWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey redundantForeignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedundantForeignKeyWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey redundantForeignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RedundantForeignKeyWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RedundantForeignKeyWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), redundantForeignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member RedundantForeignKeyWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RedundantForeignKeyWarning (diagnostics, redundantForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="redundantForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="redundantForeignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedundantIndexRemoved">
      <MemberSignature Language="C#" Value="public static void RedundantIndexRemoved (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; redundantIndex, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; otherIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedundantIndexRemoved(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; redundantIndex, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; otherIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RedundantIndexRemoved(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RedundantIndexRemoved (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), redundantIndex As IReadOnlyList(Of IPropertyBase), otherIndex As IReadOnlyList(Of IPropertyBase))" />
      <MemberSignature Language="F#" Value="static member RedundantIndexRemoved : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RedundantIndexRemoved (diagnostics, redundantIndex, otherIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="redundantIndex" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="otherIndex" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="redundantIndex">To be added.</param>
        <param name="otherIndex">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceChangeDetected">
      <MemberSignature Language="C#" Value="public static void ReferenceChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReferenceChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ReferenceChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReferenceChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ReferenceChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ReferenceChangeDetected (diagnostics, internalEntityEntry, navigation, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newValue" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void ReferenceChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReferenceChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ReferenceChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReferenceChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ReferenceChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ReferenceChangeDetectedSensitive (diagnostics, internalEntityEntry, navigation, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newValue" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="internalEntityEntry">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnBothNavigations">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnBothNavigations (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RequiredAttributeOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnBothNavigations (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As INavigation, secondNavigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RequiredAttributeOnBothNavigations (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="firstNavigation">To be added.</param>
        <param name="secondNavigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnDependent">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnDependent (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnDependent(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RequiredAttributeOnDependent(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnDependent (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnDependent : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RequiredAttributeOnDependent (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowLimitingOperationWithoutOrderByWarning">
      <MemberSignature Language="C#" Value="public static void RowLimitingOperationWithoutOrderByWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowLimitingOperationWithoutOrderByWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RowLimitingOperationWithoutOrderByWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RowLimitingOperationWithoutOrderByWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="static member RowLimitingOperationWithoutOrderByWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Remotion.Linq.QueryModel -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.RowLimitingOperationWithoutOrderByWarning (diagnostics, queryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesCompleted">
      <MemberSignature Language="C#" Value="public static void SaveChangesCompleted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, int entitiesSavedCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesCompleted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, int32 entitiesSavedCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SaveChangesCompleted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveChangesCompleted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, entitiesSavedCount As Integer)" />
      <MemberSignature Language="F#" Value="static member SaveChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * int -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SaveChangesCompleted (diagnostics, context, entitiesSavedCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entitiesSavedCount" Type="System.Int32" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="entitiesSavedCount">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesFailed">
      <MemberSignature Language="C#" Value="public static void SaveChangesFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SaveChangesFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveChangesFailed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member SaveChangesFailed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SaveChangesFailed (diagnostics, context, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesStarting">
      <MemberSignature Language="C#" Value="public static void SaveChangesStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SaveChangesStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveChangesStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member SaveChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SaveChangesStarting (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="context">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SensitiveDataLoggingEnabledWarning&lt;TLoggerCategory&gt;">
      <MemberSignature Language="C#" Value="public static void SensitiveDataLoggingEnabledWarning&lt;TLoggerCategory&gt; (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; diagnostics) where TLoggerCategory : Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SensitiveDataLoggingEnabledWarning&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!!TLoggerCategory&gt;) TLoggerCategory&gt;(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!!TLoggerCategory&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SensitiveDataLoggingEnabledWarning``1(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SensitiveDataLoggingEnabledWarning(Of TLoggerCategory As {LoggerCategory(Of TLoggerCategory)New}) (diagnostics As IDiagnosticsLogger(Of TLoggerCategory))" />
      <MemberSignature Language="F#" Value="static member SensitiveDataLoggingEnabledWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.SensitiveDataLoggingEnabledWarning diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLoggerCategory">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TLoggerCategory">To be added.</typeparam>
        <param name="diagnostics">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderCreated">
      <MemberSignature Language="C#" Value="public static void ServiceProviderCreated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceProviderCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ServiceProviderCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ServiceProviderCreated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="F#" Value="static member ServiceProviderCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * IServiceProvider -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ServiceProviderCreated (diagnostics, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderDebugInfo">
      <MemberSignature Language="C#" Value="public static void ServiceProviderDebugInfo (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, System.Collections.Generic.IDictionary&lt;string,string&gt; newDebugInfo, System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; cachedDebugInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceProviderDebugInfo(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; newDebugInfo, class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&gt; cachedDebugInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ServiceProviderDebugInfo(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ServiceProviderDebugInfo (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), newDebugInfo As IDictionary(Of String, String), cachedDebugInfos As IList(Of IDictionary(Of String, String)))" />
      <MemberSignature Language="F#" Value="static member ServiceProviderDebugInfo : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;string, string&gt;&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ServiceProviderDebugInfo (diagnostics, newDebugInfo, cachedDebugInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="newDebugInfo" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="cachedDebugInfos" Type="System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&gt;" Index="2" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="newDebugInfo">To be added.</param>
        <param name="cachedDebugInfos">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowPropertyCreated">
      <MemberSignature Language="C#" Value="public static void ShadowPropertyCreated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShadowPropertyCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ShadowPropertyCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ShadowPropertyCreated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member ShadowPropertyCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ShadowPropertyCreated (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartedTracking">
      <MemberSignature Language="C#" Value="public static void StartedTracking (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartedTracking(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StartedTracking(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StartedTracking (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), entry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="static member StartedTracking : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StartedTracking (diagnostics, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartedTrackingSensitive">
      <MemberSignature Language="C#" Value="public static void StartedTrackingSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartedTrackingSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StartedTrackingSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StartedTrackingSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), entry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="static member StartedTrackingSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StartedTrackingSensitive (diagnostics, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public static void StateChanged (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.EntityState oldState, Microsoft.EntityFrameworkCore.EntityState newState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChanged(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, valuetype Microsoft.EntityFrameworkCore.EntityState newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StateChanged(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StateChanged (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), entry As InternalEntityEntry, oldState As EntityState, newState As EntityState)" />
      <MemberSignature Language="F#" Value="static member StateChanged : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StateChanged (diagnostics, entry, oldState, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newState" Type="Microsoft.EntityFrameworkCore.EntityState" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="entry">To be added.</param>
        <param name="oldState">To be added.</param>
        <param name="newState">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChangedSensitive">
      <MemberSignature Language="C#" Value="public static void StateChangedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.EntityState oldState, Microsoft.EntityFrameworkCore.EntityState newState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChangedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, valuetype Microsoft.EntityFrameworkCore.EntityState newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StateChangedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StateChangedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), entry As InternalEntityEntry, oldState As EntityState, newState As EntityState)" />
      <MemberSignature Language="F#" Value="static member StateChangedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.StateChangedSensitive (diagnostics, entry, oldState, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="newState" Type="Microsoft.EntityFrameworkCore.EntityState" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="entry">To be added.</param>
        <param name="oldState">To be added.</param>
        <param name="newState">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGenerated">
      <MemberSignature Language="C#" Value="public static void ValueGenerated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValueGenerated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ValueGenerated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ValueGenerated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), entry As InternalEntityEntry, property As IProperty, value As Object, temporary As Boolean)" />
      <MemberSignature Language="F#" Value="static member ValueGenerated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ValueGenerated (diagnostics, entry, property, value, temporary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="value" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="temporary" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="value">To be added.</param>
        <param name="temporary">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGeneratedSensitive">
      <MemberSignature Language="C#" Value="public static void ValueGeneratedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValueGeneratedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ValueGeneratedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ValueGeneratedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), entry As InternalEntityEntry, property As IProperty, value As Object, temporary As Boolean)" />
      <MemberSignature Language="F#" Value="static member ValueGeneratedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Internal.CoreLoggerExtensions.ValueGeneratedSensitive (diagnostics, entry, property, value, temporary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="value" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="temporary" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="value">To be added.</param>
        <param name="temporary">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
