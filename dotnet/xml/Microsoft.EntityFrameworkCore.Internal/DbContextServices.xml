<Type Name="DbContextServices" FullName="Microsoft.EntityFrameworkCore.Internal.DbContextServices">
  <TypeSignature Language="C#" Value="public class DbContextServices : Microsoft.EntityFrameworkCore.Internal.IDbContextServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbContextServices extends System.Object implements class Microsoft.EntityFrameworkCore.Internal.IDbContextServices" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.DbContextServices" />
  <TypeSignature Language="VB.NET" Value="Public Class DbContextServices&#xA;Implements IDbContextServices" />
  <TypeSignature Language="F#" Value="type DbContextServices = class&#xA;    interface IDbContextServices" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IDbContextServices</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbContextServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbContextServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextOptions">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions ContextOptions { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions ContextOptions" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.ContextOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContextOptions As IDbContextOptions" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.ContextOptions : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.ContextOptions" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.DbContextOptions ContextOptions { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbContextOptions ContextOptions" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContextOptions As DbContextOptions" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ContextOptions : Microsoft.EntityFrameworkCore.DbContextOptions" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.ContextOptions" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.ContextOptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.DbContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext CurrentContext { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext CurrentContext" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.CurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentContext As ICurrentDbContext" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.CurrentContext" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.ICurrentDbContext CurrentContext { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.ICurrentDbContext CurrentContext" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : Microsoft.EntityFrameworkCore.Infrastructure.ICurrentDbContext" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.CurrentContext" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.CurrentContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Infrastructure.ICurrentDbContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseProviderServices">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices DatabaseProviderServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices DatabaseProviderServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.DatabaseProviderServices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DatabaseProviderServices As IDatabaseProviderServices" />
      <MemberSignature Language="F#" Value="member this.DatabaseProviderServices : Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.DatabaseProviderServices" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.DatabaseProviderServices</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeModel">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel DesignTimeModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel DesignTimeModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.DesignTimeModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesignTimeModel As IModel" />
      <MemberSignature Language="F#" Value="member this.DesignTimeModel : Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.DesignTimeModel" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.DesignTimeModel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.IDbContextServices Initialize (IServiceProvider scopedProvider, Microsoft.EntityFrameworkCore.DbContextOptions contextOptions, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IDbContextServices Initialize(class System.IServiceProvider scopedProvider, class Microsoft.EntityFrameworkCore.DbContextOptions contextOptions, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions,Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Initialize (scopedProvider As IServiceProvider, contextOptions As DbContextOptions, context As DbContext) As IDbContextServices" />
      <MemberSignature Language="F#" Value="abstract member Initialize : IServiceProvider * Microsoft.EntityFrameworkCore.DbContextOptions * Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.EntityFrameworkCore.Internal.IDbContextServices&#xA;override this.Initialize : IServiceProvider * Microsoft.EntityFrameworkCore.DbContextOptions * Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.EntityFrameworkCore.Internal.IDbContextServices" Usage="dbContextServices.Initialize (scopedProvider, contextOptions, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions,Microsoft.EntityFrameworkCore.DbContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IDbContextServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopedProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.DbContextOptions" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="scopedProvider">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <param name="context">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.IDbContextServices Initialize (IServiceProvider scopedProvider, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IDbContextServices Initialize(class System.IServiceProvider scopedProvider, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Initialize (scopedProvider As IServiceProvider, contextOptions As IDbContextOptions, context As DbContext) As IDbContextServices" />
      <MemberSignature Language="F#" Value="abstract member Initialize : IServiceProvider * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions * Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.EntityFrameworkCore.Internal.IDbContextServices&#xA;override this.Initialize : IServiceProvider * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions * Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.EntityFrameworkCore.Internal.IDbContextServices" Usage="dbContextServices.Initialize (scopedProvider, contextOptions, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IDbContextServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopedProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="scopedProvider">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <param name="context">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalServiceProvider">
      <MemberSignature Language="C#" Value="public virtual IServiceProvider InternalServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider InternalServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.InternalServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InternalServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.InternalServiceProvider : IServiceProvider" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.InternalServiceProvider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.InternalServiceProvider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggerFactory">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Logging.ILoggerFactory LoggerFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILoggerFactory LoggerFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.LoggerFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LoggerFactory As ILoggerFactory" />
      <MemberSignature Language="F#" Value="member this.LoggerFactory : Microsoft.Extensions.Logging.ILoggerFactory" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.LoggerFactory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.LoggerFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryCache">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Caching.Memory.IMemoryCache MemoryCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Caching.Memory.IMemoryCache MemoryCache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.MemoryCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MemoryCache As IMemoryCache" />
      <MemberSignature Language="F#" Value="member this.MemoryCache : Microsoft.Extensions.Caching.Memory.IMemoryCache" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.MemoryCache" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.MemoryCache</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.IMemoryCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.Model" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Model As IModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Internal.DbContextServices.Model" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Model</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
