<Type Name="ReferenceEqualityComparer" FullName="Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer">
  <TypeSignature Language="C#" Value="public sealed class ReferenceEqualityComparer : System.Collections.Generic.IEqualityComparer&lt;object&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReferenceEqualityComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;object&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReferenceEqualityComparer&#xA;Implements IEqualityComparer(Of Object)" />
  <TypeSignature Language="F#" Value="type ReferenceEqualityComparer = class&#xA;    interface IEqualityComparer&lt;obj&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As ReferenceEqualityComparer" />
      <MemberSignature Language="F#" Value="static member Instance : Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer" Usage="Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer&lt;object&gt;.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer&lt;System#Object&gt;#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer(Of Object).Equals" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals : obj * obj -&gt; bool&#xA;override this.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals : obj * obj -&gt; bool" Usage="referenceEqualityComparer.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer&lt;object&gt;.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer&lt;System#Object&gt;#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer(Of Object).GetHashCode" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode : obj -&gt; int&#xA;override this.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode : obj -&gt; int" Usage="referenceEqualityComparer.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
