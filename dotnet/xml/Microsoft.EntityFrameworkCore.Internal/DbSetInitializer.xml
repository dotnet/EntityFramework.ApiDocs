<Type Name="DbSetInitializer" FullName="Microsoft.EntityFrameworkCore.Internal.DbSetInitializer">
  <TypeSignature Language="C#" Value="public class DbSetInitializer : Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbSetInitializer extends System.Object implements class Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Class DbSetInitializer&#xA;Implements IDbSetInitializer" />
  <TypeSignature Language="F#" Value="type DbSetInitializer = class&#xA;    interface IDbSetInitializer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbSetInitializer (Microsoft.EntityFrameworkCore.Infrastructure.IDbSetFinder setFinder, Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Infrastructure.IDbSetFinder setFinder, class Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (setFinder As IDbSetFinder, setSource As IDbSetSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.DbSetInitializer : Microsoft.EntityFrameworkCore.Infrastructure.IDbSetFinder * Microsoft.EntityFrameworkCore.Internal.IDbSetSource -&gt; Microsoft.EntityFrameworkCore.Internal.DbSetInitializer" Usage="new Microsoft.EntityFrameworkCore.Internal.DbSetInitializer (setFinder, setSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="setFinder" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbSetFinder" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="setSource" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetSource" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="setFinder">To be added.</param>
        <param name="setSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbSetInitializer (Microsoft.EntityFrameworkCore.Internal.IDbSetFinder setFinder, Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Internal.IDbSetFinder setFinder, class Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (setFinder As IDbSetFinder, setSource As IDbSetSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.DbSetInitializer : Microsoft.EntityFrameworkCore.Internal.IDbSetFinder * Microsoft.EntityFrameworkCore.Internal.IDbSetSource -&gt; Microsoft.EntityFrameworkCore.Internal.DbSetInitializer" Usage="new Microsoft.EntityFrameworkCore.Internal.DbSetInitializer (setFinder, setSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="setFinder" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetFinder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1" />
        <Parameter Name="setSource" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetSource" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="setFinder">To be added.</param>
        <param name="setSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbSetInitializer (Microsoft.EntityFrameworkCore.Internal.IDbSetFinder setFinder, Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, Microsoft.EntityFrameworkCore.Internal.IDbQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Internal.IDbSetFinder setFinder, class Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, class Microsoft.EntityFrameworkCore.Internal.IDbQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource,Microsoft.EntityFrameworkCore.Internal.IDbQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (setFinder As IDbSetFinder, setSource As IDbSetSource, querySource As IDbQuerySource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.DbSetInitializer : Microsoft.EntityFrameworkCore.Internal.IDbSetFinder * Microsoft.EntityFrameworkCore.Internal.IDbSetSource * Microsoft.EntityFrameworkCore.Internal.IDbQuerySource -&gt; Microsoft.EntityFrameworkCore.Internal.DbSetInitializer" Usage="new Microsoft.EntityFrameworkCore.Internal.DbSetInitializer (setFinder, setSource, querySource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="setFinder" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetFinder" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="setSource" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetSource" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="querySource" Type="Microsoft.EntityFrameworkCore.Internal.IDbQuerySource" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="setFinder">To be added.</param>
        <param name="setSource">To be added.</param>
        <param name="querySource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSet&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.DbSet&lt;TEntity&gt; CreateSet&lt;TEntity&gt; (Microsoft.EntityFrameworkCore.DbContext context) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.DbSet`1&lt;!!TEntity&gt; CreateSet&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSet(Of TEntity As Class) (context As DbContext) As DbSet(Of TEntity)" />
      <MemberSignature Language="F#" Value="abstract member CreateSet : Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.EntityFrameworkCore.DbSet&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)&#xA;override this.CreateSet : Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.EntityFrameworkCore.DbSet&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="dbSetInitializer.CreateSet context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbSet&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="context">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeSets">
      <MemberSignature Language="C#" Value="public virtual void InitializeSets (Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeSets(class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeSets (context As DbContext)" />
      <MemberSignature Language="F#" Value="abstract member InitializeSets : Microsoft.EntityFrameworkCore.DbContext -&gt; unit&#xA;override this.InitializeSets : Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="dbSetInitializer.InitializeSets context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
