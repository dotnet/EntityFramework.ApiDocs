<Type Name="TypeBaseExtensions" FullName="Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions">
  <TypeSignature Language="C#" Value="public static class TypeBaseExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TypeBaseExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TypeBaseExtensions" />
  <TypeSignature Language="F#" Value="type TypeBaseExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public static string DisplayName (this Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DisplayName(class Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.DisplayName(Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayName (entityType As TypeBase) As String" />
      <MemberSignature Language="F#" Value="static member DisplayName : Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.DisplayName entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComplexProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IComplexProperty GetComplexProperty (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty GetComplexProperty(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetComplexProperty(Microsoft.EntityFrameworkCore.Metadata.ITypeBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComplexProperty (type As ITypeBase, name As String) As IComplexProperty" />
      <MemberSignature Language="F#" Value="static member GetComplexProperty : Microsoft.EntityFrameworkCore.Metadata.ITypeBase * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" Usage="Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetComplexProperty (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IComplexProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOwnedName">
      <MemberSignature Language="C#" Value="public static string GetOwnedName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type, string simpleName, string ownershipNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetOwnedName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type, string simpleName, string ownershipNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetOwnedName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOwnedName (type As IReadOnlyTypeBase, simpleName As String, ownershipNavigation As String) As String" />
      <MemberSignature Language="F#" Value="static member GetOwnedName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase * string * string -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetOwnedName (type, simpleName, ownershipNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" RefType="this" />
        <Parameter Name="simpleName" Type="System.String" />
        <Parameter Name="ownershipNavigation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="simpleName">To be added.</param>
        <param name="ownershipNavigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFields">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;string,System.Reflection.FieldInfo&gt; GetRuntimeFields (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.Reflection.FieldInfo&gt; GetRuntimeFields(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetRuntimeFields(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeFields (type As IReadOnlyTypeBase) As IReadOnlyDictionary(Of String, FieldInfo)" />
      <MemberSignature Language="F#" Value="static member GetRuntimeFields : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, System.Reflection.FieldInfo&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetRuntimeFields type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Reflection.FieldInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;string,System.Reflection.PropertyInfo&gt; GetRuntimeProperties (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.Reflection.PropertyInfo&gt; GetRuntimeProperties(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetRuntimeProperties(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeProperties (type As IReadOnlyTypeBase) As IReadOnlyDictionary(Of String, PropertyInfo)" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperties : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, System.Reflection.PropertyInfo&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.GetRuntimeProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortName">
      <MemberSignature Language="C#" Value="public static string ShortName (this Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ShortName(class Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.ShortName(Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ShortName (entityType As TypeBase) As String" />
      <MemberSignature Language="F#" Value="static member ShortName : Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.TypeBaseExtensions.ShortName entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
