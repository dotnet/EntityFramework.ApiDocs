<Type Name="TemporalQueryRootExpression" FullName="Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression">
  <TypeSignature Language="C#" Value="public abstract class TemporalQueryRootExpression : Microsoft.EntityFrameworkCore.Query.QueryRootExpression" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TemporalQueryRootExpression extends Microsoft.EntityFrameworkCore.Query.QueryRootExpression" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TemporalQueryRootExpression&#xA;Inherits QueryRootExpression" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="F#" Value="type TemporalQueryRootExpression = class&#xA;    inherit QueryRootExpression" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="C#" Value="public abstract class TemporalQueryRootExpression : Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TemporalQueryRootExpression extends Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TemporalQueryRootExpression&#xA;Inherits EntityQueryRootExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type TemporalQueryRootExpression = class&#xA;    inherit EntityQueryRootExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.QueryRootExpression</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TemporalQueryRootExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression entityType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TemporalQueryRootExpression (Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider asyncQueryProvider, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider asyncQueryProvider, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression.#ctor(Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (asyncQueryProvider As IAsyncQueryProvider, entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression : Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression (asyncQueryProvider, entityType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="asyncQueryProvider" Type="Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="asyncQueryProvider">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalQueryRootExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="temporalQueryRootExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
