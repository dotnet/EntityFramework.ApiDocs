<Type Name="SqlServerTypeMappingPostprocessor" FullName="Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor">
  <TypeSignature Language="C#" Value="public class SqlServerTypeMappingPostprocessor : Microsoft.EntityFrameworkCore.Query.RelationalTypeMappingPostprocessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerTypeMappingPostprocessor extends Microsoft.EntityFrameworkCore.Query.RelationalTypeMappingPostprocessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerTypeMappingPostprocessor&#xA;Inherits RelationalTypeMappingPostprocessor" />
  <TypeSignature Language="F#" Value="type SqlServerTypeMappingPostprocessor = class&#xA;    inherit RelationalTypeMappingPostprocessor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.RelationalTypeMappingPostprocessor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerTypeMappingPostprocessor (Microsoft.EntityFrameworkCore.Query.QueryTranslationPostprocessorDependencies dependencies, Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPostprocessorDependencies relationalDependencies, Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext queryCompilationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryTranslationPostprocessorDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPostprocessorDependencies relationalDependencies, class Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext queryCompilationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor.#ctor(Microsoft.EntityFrameworkCore.Query.QueryTranslationPostprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPostprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryTranslationPostprocessorDependencies, relationalDependencies As RelationalQueryTranslationPostprocessorDependencies, queryCompilationContext As RelationalQueryCompilationContext)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor : Microsoft.EntityFrameworkCore.Query.QueryTranslationPostprocessorDependencies * Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPostprocessorDependencies * Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor (dependencies, relationalDependencies, queryCompilationContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QueryTranslationPostprocessorDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPostprocessorDependencies" />
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="relationalDependencies">To be added.</param>
        <param name="queryCompilationContext">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTypeMappingsOnOpenJsonExpression">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression ApplyTypeMappingsOnOpenJsonExpression (Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression openJsonExpression, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&gt; typeMappings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression ApplyTypeMappingsOnOpenJsonExpression(class Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression openJsonExpression, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&gt; typeMappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor.ApplyTypeMappingsOnOpenJsonExpression(Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTypeMappingsOnOpenJsonExpression (openJsonExpression As SqlServerOpenJsonExpression, typeMappings As IReadOnlyList(Of RelationalTypeMapping)) As SqlServerOpenJsonExpression" />
      <MemberSignature Language="F#" Value="abstract member ApplyTypeMappingsOnOpenJsonExpression : Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression&#xA;override this.ApplyTypeMappingsOnOpenJsonExpression : Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression" Usage="sqlServerTypeMappingPostprocessor.ApplyTypeMappingsOnOpenJsonExpression (openJsonExpression, typeMappings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openJsonExpression" Type="Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerOpenJsonExpression" />
        <Parameter Name="typeMappings" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&gt;" />
      </Parameters>
      <Docs>
        <param name="openJsonExpression">To be added.</param>
        <param name="typeMappings">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerTypeMappingPostprocessor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="sqlServerTypeMappingPostprocessor.VisitExtension expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
