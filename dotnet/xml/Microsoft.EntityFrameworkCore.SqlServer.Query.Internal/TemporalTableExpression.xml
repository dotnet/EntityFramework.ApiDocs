<Type Name="TemporalTableExpression" FullName="Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression">
  <TypeSignature Language="C#" Value="public abstract class TemporalTableExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase, Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TemporalTableExpression extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase implements class Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TemporalTableExpression&#xA;Inherits TableExpressionBase&#xA;Implements IClonableTableExpressionBase" />
  <TypeSignature Language="F#" Value="type TemporalTableExpression = class&#xA;    inherit TableExpressionBase&#xA;    interface IClonableTableExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TemporalTableExpression (Microsoft.EntityFrameworkCore.Metadata.ITableBase table);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.ITableBase table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.#ctor(Microsoft.EntityFrameworkCore.Metadata.ITableBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (table As ITableBase)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression : Microsoft.EntityFrameworkCore.Metadata.ITableBase -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression table" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.ITableBase" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TemporalTableExpression (string name, string? schema, string? alias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, string schema, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, schema As String, alias As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression : string * string * string -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression (name, schema, alias)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="alias">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As TableExpressionBase" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="temporalTableExpression.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="temporalTableExpression.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="temporalTableExpression.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public virtual string? Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Schema As String" />
      <MemberSignature Language="F#" Value="member this.Schema : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.TemporalTableExpression.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
