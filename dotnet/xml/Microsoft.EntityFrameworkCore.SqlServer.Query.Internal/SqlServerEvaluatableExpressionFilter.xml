<Type Name="SqlServerEvaluatableExpressionFilter" FullName="Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerEvaluatableExpressionFilter">
  <TypeSignature Language="C#" Value="public class SqlServerEvaluatableExpressionFilter : Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerEvaluatableExpressionFilter extends Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerEvaluatableExpressionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerEvaluatableExpressionFilter&#xA;Inherits RelationalEvaluatableExpressionFilter" />
  <TypeSignature Language="F#" Value="type SqlServerEvaluatableExpressionFilter = class&#xA;    inherit RelationalEvaluatableExpressionFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerEvaluatableExpressionFilter (Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies dependencies, Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies relationalDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies relationalDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerEvaluatableExpressionFilter.#ctor(Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies,Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As EvaluatableExpressionFilterDependencies, relationalDependencies As RelationalEvaluatableExpressionFilterDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerEvaluatableExpressionFilter : Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies * Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies -&gt; Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerEvaluatableExpressionFilter" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerEvaluatableExpressionFilter (dependencies, relationalDependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="relationalDependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvaluatableExpression">
      <MemberSignature Language="C#" Value="public override bool IsEvaluatableExpression (System.Linq.Expressions.Expression expression, Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEvaluatableExpression(class System.Linq.Expressions.Expression expression, class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerEvaluatableExpressionFilter.IsEvaluatableExpression(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEvaluatableExpression (expression As Expression, model As IModel) As Boolean" />
      <MemberSignature Language="F#" Value="override this.IsEvaluatableExpression : System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; bool" Usage="sqlServerEvaluatableExpressionFilter.IsEvaluatableExpression (expression, model)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
