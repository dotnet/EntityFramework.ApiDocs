<Type Name="ProviderCodeGeneratorDependencies" FullName="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies">
  <TypeSignature Language="C#" Value="public sealed class ProviderCodeGeneratorDependencies" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProviderCodeGeneratorDependencies extends System.Object" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProviderCodeGeneratorDependencies" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type ProviderCodeGeneratorDependencies = class" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="C#" Value="public sealed class ProviderCodeGeneratorDependencies : IEquatable&lt;Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProviderCodeGeneratorDependencies extends System.Object implements class System.IEquatable`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProviderCodeGeneratorDependencies&#xA;Implements IEquatable(Of ProviderCodeGeneratorDependencies)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type ProviderCodeGeneratorDependencies = class&#xA;    interface IEquatable&lt;ProviderCodeGeneratorDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>System.IEquatable&lt;Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGenerator" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the C# 'with' operator. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderCodeGeneratorDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGenerator" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderCodeGeneratorDependencies (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; plugins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; plugins) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.#ctor(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (plugins As IEnumerable(Of IProviderCodeGeneratorPlugin))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies : seq&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies plugins" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="plugins" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt;" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="plugins"> The plugins. </param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Function &lt;Clone&gt;$ () As ProviderCodeGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.&lt;Clone&gt;$ : unit -&gt; Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Usage="providerCodeGeneratorDependencies.&lt;Clone&gt;$ " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.Equals(Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ProviderCodeGeneratorDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies -&gt; bool" Usage="providerCodeGeneratorDependencies.Equals other" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="providerCodeGeneratorDependencies.Equals obj" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="providerCodeGeneratorDependencies.GetHashCode " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies? left, Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies left, class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.op_Equality(Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies,Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ProviderCodeGeneratorDependencies, right As ProviderCodeGeneratorDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies * Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies -&gt; bool" Usage="left = right" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies? left, Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies left, class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.op_Inequality(Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies,Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ProviderCodeGeneratorDependencies, right As ProviderCodeGeneratorDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies * Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.op_Inequality (left, right)" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plugins">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; Plugins { get; }" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; Plugins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.Plugins" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Plugins As IEnumerable(Of IProviderCodeGeneratorPlugin)" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.Plugins : seq&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt;" Usage="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.Plugins" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; Plugins { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Plugins As IEnumerable(Of IProviderCodeGeneratorPlugin)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Plugins : seq&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.Plugins" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the plugins.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="providerCodeGeneratorDependencies.ToString " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies With (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; plugins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies With(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; plugins) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies.With(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (plugins As IEnumerable(Of IProviderCodeGeneratorPlugin)) As ProviderCodeGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : seq&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies" Usage="providerCodeGeneratorDependencies.With plugins" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plugins" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Scaffolding.IProviderCodeGeneratorPlugin&gt;" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="plugins"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
