<Type Name="DatabaseModelFactory" FullName="Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory">
  <TypeSignature Language="C#" Value="public abstract class DatabaseModelFactory : Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DatabaseModelFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DatabaseModelFactory&#xA;Implements IDatabaseModelFactory" />
  <TypeSignature Language="F#" Value="type DatabaseModelFactory = class&#xA;    interface IDatabaseModelFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Base class used by database providers to reverse engineer a database into a <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" />.
            </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-scaffolding">Reverse engineering (scaffolding) an existing database</see>, and
                    <see href="https://aka.ms/efcore-docs-design-time-services">EF Core design-time services</see> for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DatabaseModelFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (System.Data.Common.DbConnection connection, Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(class System.Data.Common.DbConnection connection, class Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory.Create(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (connection As DbConnection, options As DatabaseModelFactoryOptions) As DatabaseModel" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Data.Common.DbConnection * Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="databaseModelFactory.Create (connection, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory.Create(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to the database to reverse engineer.</param>
        <param name="options">The options specifying which metadata to read.</param>
        <summary>
                Connects to the database using the given connection and creates a <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" />
                for the database.
            </summary>
        <returns>The database model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (string connectionString, Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(string connectionString, class Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (connectionString As String, options As DatabaseModelFactoryOptions) As DatabaseModel" />
      <MemberSignature Language="F#" Value="abstract member Create : string * Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="databaseModelFactory.Create (connectionString, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the database to reverse engineer.</param>
        <param name="options">The options specifying which metadata to read.</param>
        <summary>
                Connects to the database using the given connection string and creates a <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" />
                for the database.
            </summary>
        <returns>The database model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
