<Type Name="NavigationAttributeEntityTypeConvention&lt;TAttribute&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;TAttribute&gt;">
  <TypeSignature Language="C#" Value="public abstract class NavigationAttributeEntityTypeConvention&lt;TAttribute&gt; : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention where TAttribute : Attribute" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NavigationAttributeEntityTypeConvention`1&lt;(class System.Attribute) TAttribute&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NavigationAttributeEntityTypeConvention(Of TAttribute)&#xA;Implements IEntityTypeConvention" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="F#" Value="type NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt; = class&#xA;    interface IEntityTypeConvention" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="C#" Value="public abstract class NavigationAttributeEntityTypeConvention&lt;TAttribute&gt; : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention where TAttribute : Attribute" FrameworkAlternate="efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NavigationAttributeEntityTypeConvention`1&lt;(class System.Attribute) TAttribute&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention" FrameworkAlternate="efcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NavigationAttributeEntityTypeConvention(Of TAttribute)&#xA;Implements IBaseTypeConvention, IEntityTypeConvention, IEntityTypeIgnoredConvention, IEntityTypeMemberIgnoredConvention, INavigationConvention" FrameworkAlternate="efcore-1.1" />
  <TypeSignature Language="F#" Value="type NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt; = class&#xA;    interface IEntityTypeConvention&#xA;    interface IEntityTypeIgnoredConvention&#xA;    interface INavigationConvention&#xA;    interface IBaseTypeConvention&#xA;    interface IEntityTypeMemberIgnoredConvention" FrameworkAlternate="efcore-1.1" />
  <TypeSignature Language="C#" Value="public abstract class NavigationAttributeEntityTypeConvention&lt;TAttribute&gt; : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention where TAttribute : Attribute" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NavigationAttributeEntityTypeConvention`1&lt;(class System.Attribute) TAttribute&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NavigationAttributeEntityTypeConvention(Of TAttribute)&#xA;Implements IBaseTypeChangedConvention, IEntityTypeAddedConvention, IEntityTypeIgnoredConvention, IEntityTypeMemberIgnoredConvention, INavigationAddedConvention" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt; = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IEntityTypeIgnoredConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IBaseTypeChangedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TAttribute">
      <Constraints>
        <BaseTypeName>System.Attribute</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TAttribute">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NavigationAttributeEntityTypeConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NavigationAttributeEntityTypeConvention (Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (memberClassifier As IMemberClassifier)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt; : Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; System.Attribute)&gt; memberClassifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberClassifier" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" Index="0" FrameworkAlternate="efcore-2.2;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="memberClassifier">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NavigationAttributeEntityTypeConvention (Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeMapper As ITypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt; : Microsoft.EntityFrameworkCore.Storage.ITypeMapper -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention&lt;'Attribute (requires 'Attribute :&gt; System.Attribute)&gt; typeMapper" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMapper" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="typeMapper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="navigationAttributeEntityTypeConvention.Apply entityTypeBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool" Usage="navigationAttributeEntityTypeConvention.Apply (entityTypeBuilder, oldBaseType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.1">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="oldBaseType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, ignoredMemberName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; bool" Usage="navigationAttributeEntityTypeConvention.Apply (entityTypeBuilder, ignoredMemberName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="ignoredMemberName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="ignoredMemberName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (relationshipBuilder As InternalRelationshipBuilder, navigation As Navigation) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="navigationAttributeEntityTypeConvention.Apply (relationshipBuilder, navigation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.1">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, System.Reflection.PropertyInfo navigationPropertyInfo, TAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class System.Reflection.PropertyInfo navigationPropertyInfo, !TAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, attribute As TAttribute) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * System.Reflection.PropertyInfo * 'Attribute -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="navigationAttributeEntityTypeConvention.Apply (entityTypeBuilder, navigationPropertyInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="attribute" Type="TAttribute" Index="2" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (modelBuilder As InternalModelBuilder, name As String, type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Type -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Type -&gt; bool" Usage="navigationAttributeEntityTypeConvention.Apply (modelBuilder, name, type)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation, TAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation, !TAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (relationshipBuilder As InternalRelationshipBuilder, navigation As Navigation, attribute As TAttribute) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation * 'Attribute -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation * 'Attribute -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="navigationAttributeEntityTypeConvention.Apply (relationshipBuilder, navigation, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="attribute" Type="TAttribute" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, !TAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="navigationAttributeEntityTypeConvention.Apply (entityTypeBuilder, navigationPropertyInfo, targetClrType, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="targetClrType" Type="System.Type" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="attribute" Type="TAttribute" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, !TAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; bool" Usage="navigationAttributeEntityTypeConvention.Apply (entityTypeBuilder, oldBaseType, navigationPropertyInfo, targetClrType, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="targetClrType" Type="System.Type" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="attribute" Type="TAttribute" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="oldBaseType">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, Type type, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, class System.Type type, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, !TAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (modelBuilder As InternalModelBuilder, type As Type, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * Type * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * Type * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; bool" Usage="navigationAttributeEntityTypeConvention.Apply (modelBuilder, type, navigationPropertyInfo, targetClrType, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="targetClrType" Type="System.Type" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="attribute" Type="TAttribute" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="type">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyIgnored">
      <MemberSignature Language="C#" Value="public virtual bool ApplyIgnored (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, System.Reflection.PropertyInfo navigationPropertyInfo, Type targetClrType, TAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ApplyIgnored(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class System.Reflection.PropertyInfo navigationPropertyInfo, class System.Type targetClrType, !TAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ApplyIgnored (entityTypeBuilder As InternalEntityTypeBuilder, navigationPropertyInfo As PropertyInfo, targetClrType As Type, attribute As TAttribute) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ApplyIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; bool&#xA;override this.ApplyIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * System.Reflection.PropertyInfo * Type * 'Attribute -&gt; bool" Usage="navigationAttributeEntityTypeConvention.ApplyIgnored (entityTypeBuilder, navigationPropertyInfo, targetClrType, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationPropertyInfo" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="targetClrType" Type="System.Type" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="attribute" Type="TAttribute" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="navigationPropertyInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCandidateNavigationPropertyType">
      <MemberSignature Language="C#" Value="public virtual Type FindCandidateNavigationPropertyType (System.Reflection.PropertyInfo propertyInfo);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type FindCandidateNavigationPropertyType(class System.Reflection.PropertyInfo propertyInfo) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindCandidateNavigationPropertyType (propertyInfo As PropertyInfo) As Type" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="abstract member FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type&#xA;override this.FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type" Usage="navigationAttributeEntityTypeConvention.FindCandidateNavigationPropertyType propertyInfo" />
      <MemberSignature Language="C#" Value="protected virtual Type FindCandidateNavigationPropertyType (System.Reflection.PropertyInfo propertyInfo);" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type FindCandidateNavigationPropertyType(class System.Reflection.PropertyInfo propertyInfo) cil managed" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindCandidateNavigationPropertyType (propertyInfo As PropertyInfo) As Type" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
