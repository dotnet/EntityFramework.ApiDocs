<Type Name="PropertyMappingValidationConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention">
  <TypeSignature Language="C#" Value="public class PropertyMappingValidationConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyMappingValidationConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyMappingValidationConvention&#xA;Implements IModelConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="F#" Value="type PropertyMappingValidationConvention = class&#xA;    interface IModelConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="C#" Value="public class PropertyMappingValidationConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelBuiltConvention" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyMappingValidationConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelBuiltConvention" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyMappingValidationConvention&#xA;Implements IModelBuiltConvention" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type PropertyMappingValidationConvention = class&#xA;    interface IModelBuiltConvention" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelBuiltConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMappingValidationConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMappingValidationConvention (Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMapper As ITypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention : Microsoft.EntityFrameworkCore.Storage.ITypeMapper -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention typeMapper" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMapper" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="typeMapper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMappingValidationConvention (Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource, Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource, class Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource,Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMappingSource As ITypeMappingSource, memberClassifier As IMemberClassifier)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention : Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource * Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention (typeMappingSource, memberClassifier)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" Index="0" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="memberClassifier" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" Index="1" FrameworkAlternate="efcore-2.2;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource">To be added.</param>
        <param name="memberClassifier">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (modelBuilder As InternalModelBuilder) As InternalModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Usage="propertyMappingValidationConvention.Apply modelBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelBuiltConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCandidateNavigationPropertyType">
      <MemberSignature Language="C#" Value="public virtual Type FindCandidateNavigationPropertyType (System.Reflection.PropertyInfo propertyInfo);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type FindCandidateNavigationPropertyType(class System.Reflection.PropertyInfo propertyInfo) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindCandidateNavigationPropertyType (propertyInfo As PropertyInfo) As Type" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="abstract member FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type&#xA;override this.FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type" Usage="propertyMappingValidationConvention.FindCandidateNavigationPropertyType propertyInfo" />
      <MemberSignature Language="C#" Value="protected virtual Type FindCandidateNavigationPropertyType (System.Reflection.PropertyInfo propertyInfo);" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type FindCandidateNavigationPropertyType(class System.Reflection.PropertyInfo propertyInfo) cil managed" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindCandidateNavigationPropertyType (propertyInfo As PropertyInfo) As Type" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMappedPrimitiveProperty">
      <MemberSignature Language="C#" Value="protected virtual bool IsMappedPrimitiveProperty (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsMappedPrimitiveProperty(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.IsMappedPrimitiveProperty(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsMappedPrimitiveProperty (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsMappedPrimitiveProperty : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool&#xA;override this.IsMappedPrimitiveProperty : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="propertyMappingValidationConvention.IsMappedPrimitiveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMappedPrimitiveProperty">
      <MemberSignature Language="C#" Value="public virtual bool IsMappedPrimitiveProperty (Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsMappedPrimitiveProperty(class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.IsMappedPrimitiveProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsMappedPrimitiveProperty (clrType As Type) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsMappedPrimitiveProperty : Type -&gt; bool&#xA;override this.IsMappedPrimitiveProperty : Type -&gt; bool" Usage="propertyMappingValidationConvention.IsMappedPrimitiveProperty clrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
