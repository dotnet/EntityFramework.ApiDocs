<Type Name="KeyConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention">
  <TypeSignature Language="C#" Value="public class KeyConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyConvention&#xA;Implements IForeignKeyConvention, IForeignKeyRemovedConvention, IKeyConvention, IModelConvention, IPrimaryKeyConvention" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="F#" Value="type KeyConvention = class&#xA;    interface IKeyConvention&#xA;    interface IPrimaryKeyConvention&#xA;    interface IForeignKeyConvention&#xA;    interface IForeignKeyRemovedConvention&#xA;    interface IModelConvention" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="C#" Value="public class KeyConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention" FrameworkAlternate="efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention" FrameworkAlternate="efcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyConvention&#xA;Implements IForeignKeyConvention, IForeignKeyRemovedConvention, IPrimaryKeyConvention" FrameworkAlternate="efcore-1.1" />
  <TypeSignature Language="F#" Value="type KeyConvention = class&#xA;    interface IPrimaryKeyConvention&#xA;    interface IForeignKeyConvention&#xA;    interface IForeignKeyRemovedConvention" FrameworkAlternate="efcore-1.1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (keyBuilder As InternalKeyBuilder) As InternalKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Usage="keyConvention.Apply keyBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (modelBuilder As InternalModelBuilder) As InternalModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Usage="keyConvention.Apply modelBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-1.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in the 1.1.0 release.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in the 1.1.0 release.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="keyConvention.Apply relationshipBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual void Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Apply (entityTypeBuilder As InternalEntityTypeBuilder, foreignKey As ForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit" Usage="keyConvention.Apply (entityTypeBuilder, foreignKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (keyBuilder As InternalKeyBuilder, previousPrimaryKey As Key) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; bool" Usage="keyConvention.Apply (keyBuilder, previousPrimaryKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" />
        <Parameter Name="previousPrimaryKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <param name="previousPrimaryKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindValueGeneratedOnAddProperty">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.Property FindValueGeneratedOnAddProperty (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.Property FindValueGeneratedOnAddProperty(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.FindValueGeneratedOnAddProperty(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindValueGeneratedOnAddProperty (properties As IReadOnlyList(Of Property), entityType As EntityType) As Property" />
      <MemberSignature Language="F#" Value="abstract member FindValueGeneratedOnAddProperty : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Property&#xA;override this.FindValueGeneratedOnAddProperty : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Property" Usage="keyConvention.FindValueGeneratedOnAddProperty (properties, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.Property</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShadowKeyExceptionMessage">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;string&gt; GetShadowKeyExceptionMessage (Microsoft.EntityFrameworkCore.Metadata.IModel model, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IKey,bool&gt; keyPredicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;string&gt; GetShadowKeyExceptionMessage(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IKey, bool&gt; keyPredicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.GetShadowKeyExceptionMessage(Microsoft.EntityFrameworkCore.Metadata.IModel,System.Func{Microsoft.EntityFrameworkCore.Metadata.IKey,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetShadowKeyExceptionMessage (model As IModel, keyPredicate As Func(Of IKey, Boolean)) As List(Of String)" />
      <MemberSignature Language="F#" Value="static member GetShadowKeyExceptionMessage : Microsoft.EntityFrameworkCore.Metadata.IModel * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IKey, bool&gt; -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.GetShadowKeyExceptionMessage (model, keyPredicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-1.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in the 1.1.0 release.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in the 1.1.0 release.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="keyPredicate" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IKey,System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="keyPredicate">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
