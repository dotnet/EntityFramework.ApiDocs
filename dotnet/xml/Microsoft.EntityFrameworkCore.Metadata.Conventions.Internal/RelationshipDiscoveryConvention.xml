<Type Name="RelationshipDiscoveryConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention">
  <TypeSignature Language="C#" Value="public class RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipDiscoveryConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipDiscoveryConvention&#xA;Implements IBaseTypeConvention, IEntityTypeConvention, IEntityTypeMemberIgnoredConvention, INavigationConvention, INavigationRemovedConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface IEntityTypeConvention&#xA;    interface IBaseTypeConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationConvention" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="C#" Value="public class RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention" FrameworkAlternate="efcore-2.0;efcore-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipDiscoveryConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention" FrameworkAlternate="efcore-2.0;efcore-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipDiscoveryConvention&#xA;Implements IBaseTypeChangedConvention, IEntityTypeAddedConvention, IEntityTypeMemberIgnoredConvention, INavigationAddedConvention, INavigationRemovedConvention" FrameworkAlternate="efcore-2.0;efcore-2.1" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IBaseTypeChangedConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationAddedConvention" FrameworkAlternate="efcore-2.0;efcore-2.1" />
  <TypeSignature Language="C#" Value="public class RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention" FrameworkAlternate="efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipDiscoveryConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention" FrameworkAlternate="efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipDiscoveryConvention&#xA;Implements IBaseTypeChangedConvention, IEntityTypeAddedConvention, IEntityTypeMemberIgnoredConvention, IForeignKeyOwnershipChangedConvention, INavigationAddedConvention, INavigationRemovedConvention" FrameworkAlternate="efcore-2.2" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IBaseTypeChangedConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IForeignKeyOwnershipChangedConvention" FrameworkAlternate="efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipDiscoveryConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipDiscoveryConvention (Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMapper typeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMapper As ITypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Storage.ITypeMapper -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention typeMapper" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMapper" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="typeMapper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipDiscoveryConvention (Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier memberClassifier, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberClassifier As IMemberClassifier, logger As IDiagnosticsLogger(Of DbLoggerCategory.Model))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention (memberClassifier, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberClassifier" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IMemberClassifier" Index="0" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" Index="1" FrameworkAlternate="efcore-2.2;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="memberClassifier">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousNavigationsAnnotationName">
      <MemberSignature Language="C#" Value="public const string AmbiguousNavigationsAnnotationName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AmbiguousNavigationsAnnotationName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.AmbiguousNavigationsAnnotationName" />
      <MemberSignature Language="VB.NET" Value="Public Const AmbiguousNavigationsAnnotationName As String " />
      <MemberSignature Language="F#" Value="val mutable AmbiguousNavigationsAnnotationName : string" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.AmbiguousNavigationsAnnotationName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="relationshipDiscoveryConvention.Apply entityTypeBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAddedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool" Usage="relationshipDiscoveryConvention.Apply (entityTypeBuilder, oldBaseType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="oldBaseType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, ignoredMemberName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; bool" Usage="relationshipDiscoveryConvention.Apply (entityTypeBuilder, ignoredMemberName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="ignoredMemberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="ignoredMemberName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (relationshipBuilder As InternalRelationshipBuilder, navigation As Navigation) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="relationshipDiscoveryConvention.Apply (relationshipBuilder, navigation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationAddedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.MemberInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.MemberInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (sourceEntityTypeBuilder As InternalEntityTypeBuilder, targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationName As String, propertyInfo As MemberInfo) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; bool" Usage="relationshipDiscoveryConvention.Apply (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, propertyInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.MemberInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationName" Type="System.String" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="propertyInfo" Type="System.Reflection.MemberInfo" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder">To be added.</param>
        <param name="targetEntityTypeBuilder">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (sourceEntityTypeBuilder As InternalEntityTypeBuilder, targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationName As String, propertyInfo As PropertyInfo) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.PropertyInfo -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.PropertyInfo -&gt; bool" Usage="relationshipDiscoveryConvention.Apply (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, propertyInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.PropertyInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="navigationName" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder">To be added.</param>
        <param name="targetEntityTypeBuilder">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCandidateNavigationPropertyType">
      <MemberSignature Language="C#" Value="public virtual Type FindCandidateNavigationPropertyType (System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type FindCandidateNavigationPropertyType(class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindCandidateNavigationPropertyType (propertyInfo As PropertyInfo) As Type" />
      <MemberSignature Language="F#" Value="abstract member FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type&#xA;override this.FindCandidateNavigationPropertyType : System.Reflection.PropertyInfo -&gt; Type" Usage="relationshipDiscoveryConvention.FindCandidateNavigationPropertyType propertyInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetEntityTypeBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder GetTargetEntityTypeBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Type targetClrType, System.Reflection.MemberInfo navigationInfo, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder GetTargetEntityTypeBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class System.Type targetClrType, class System.Reflection.MemberInfo navigationInfo, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.GetTargetEntityTypeBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Type,System.Reflection.MemberInfo,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetEntityTypeBuilder (entityTypeBuilder As InternalEntityTypeBuilder, targetClrType As Type, navigationInfo As MemberInfo, configurationSource As Nullable(Of ConfigurationSource)) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member GetTargetEntityTypeBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Type * System.Reflection.MemberInfo * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.GetTargetEntityTypeBuilder (entityTypeBuilder, targetClrType, navigationInfo, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="targetClrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="navigationInfo" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt;" Index="3" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="navigationInfo">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention.Apply">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder IForeignKeyOwnershipChangedConvention.Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention.Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IForeignKeyOwnershipChangedConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Function Apply (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder Implements IForeignKeyOwnershipChangedConvention.Apply" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="relationshipDiscoveryConvention.Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention.Apply relationshipBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyOwnershipChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCandidatesAnnotationName">
      <MemberSignature Language="C#" Value="public const string NavigationCandidatesAnnotationName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NavigationCandidatesAnnotationName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.NavigationCandidatesAnnotationName" />
      <MemberSignature Language="VB.NET" Value="Public Const NavigationCandidatesAnnotationName As String " />
      <MemberSignature Language="F#" Value="val mutable NavigationCandidatesAnnotationName : string" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.NavigationCandidatesAnnotationName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
