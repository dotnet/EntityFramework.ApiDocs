<Type Name="MetadataTracker" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker">
  <TypeSignature Language="C#" Value="public class MetadataTracker : Microsoft.EntityFrameworkCore.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetadataTracker extends System.Object implements class Microsoft.EntityFrameworkCore.Internal.IReferenceRoot`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataTracker&#xA;Implements IReferenceRoot(Of ForeignKey)" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
  <TypeSignature Language="F#" Value="type MetadataTracker = class&#xA;    interface IReferenceRoot&lt;ForeignKey&gt;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
  <TypeSignature Language="C#" Value="public class MetadataTracker : Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetadataTracker extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="C#" Value="public class MetadataTracker : Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetadataTracker extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataTracker&#xA;Implements IReferenceRoot(Of IConventionForeignKey)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type MetadataTracker = class&#xA;    interface IReferenceRoot&lt;IConventionForeignKey&gt;" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataTracker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release">
      <MemberSignature Language="C#" Value="void IReferenceRoot&lt;ForeignKey&gt;.Release (Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; foreignKeyReference);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.EntityFrameworkCore.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release(class Microsoft.EntityFrameworkCore.Internal.Reference`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; foreignKeyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.Microsoft#EntityFrameworkCore#Internal#IReferenceRoot&lt;Microsoft#EntityFrameworkCore#Metadata#Internal#ForeignKey&gt;#Release(Microsoft.EntityFrameworkCore.Internal.Reference{Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Sub Release (foreignKeyReference As Reference(Of ForeignKey)) Implements IReferenceRoot(Of ForeignKey).Release" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release : Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; -&gt; unit&#xA;override this.Microsoft.EntityFrameworkCore.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release : Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; -&gt; unit" Usage="metadataTracker.Microsoft.EntityFrameworkCore.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release foreignKeyReference" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Internal.IReferenceRoot`1.Release(Microsoft.EntityFrameworkCore.Internal.Reference{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyReference" Type="Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="foreignKeyReference">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;.Release">
      <MemberSignature Language="C#" Value="void IReferenceRoot&lt;IConventionForeignKey&gt;.Release (Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; foreignKeyReference);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;.Release(class Microsoft.EntityFrameworkCore.Metadata.Internal.Reference`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; foreignKeyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.Microsoft#EntityFrameworkCore#Metadata#Internal#IReferenceRoot&lt;Microsoft#EntityFrameworkCore#Metadata#IConventionForeignKey&gt;#Release(Microsoft.EntityFrameworkCore.Metadata.Internal.Reference{Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Sub Release (foreignKeyReference As Reference(Of IConventionForeignKey)) Implements IReferenceRoot(Of IConventionForeignKey).Release" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;.Release : Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; -&gt; unit&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;.Release : Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; -&gt; unit" Usage="metadataTracker.Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;.Release foreignKeyReference" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1.Release(Microsoft.EntityFrameworkCore.Metadata.Internal.Reference{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyReference" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKeyReference">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release">
      <MemberSignature Language="C#" Value="void IReferenceRoot&lt;ForeignKey&gt;.Release (Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; foreignKeyReference);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release(class Microsoft.EntityFrameworkCore.Metadata.Internal.Reference`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; foreignKeyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.Microsoft#EntityFrameworkCore#Metadata#Internal#IReferenceRoot&lt;Microsoft#EntityFrameworkCore#Metadata#Internal#ForeignKey&gt;#Release(Microsoft.EntityFrameworkCore.Metadata.Internal.Reference{Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Sub Release (foreignKeyReference As Reference(Of ForeignKey)) Implements IReferenceRoot(Of ForeignKey).Release" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release : Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; -&gt; unit&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release : Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; -&gt; unit" Usage="metadataTracker.Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;.Release foreignKeyReference" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1.Release(Microsoft.EntityFrameworkCore.Metadata.Internal.Reference{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyReference" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="foreignKeyReference">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; Track (Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.Reference`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; Track(class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.Track(Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Track (foreignKey As IConventionForeignKey) As Reference(Of IConventionForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member Track : Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;&#xA;override this.Track : Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" Usage="metadataTracker.Track foreignKey" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1.Track(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; Track (Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.Reference`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; Track(class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.Track(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Track (foreignKey As ForeignKey) As Reference(Of ForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member Track : Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;&#xA;override this.Track : Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" Usage="metadataTracker.Track foreignKey" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; Track (Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.Reference`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt; Track(class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member Track : Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;&#xA;override this.Track : Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;" Usage="metadataTracker.Track foreignKey" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Internal.IReferenceRoot`1.Track(`0)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1">M:Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1.Track(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">Microsoft.EntityFrameworkCore.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey oldForeignKey, Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey newForeignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey oldForeignKey, class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey newForeignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.Update(Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (oldForeignKey As IConventionForeignKey, newForeignKey As IConventionForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member Update : Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; unit&#xA;override this.Update : Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; unit" Usage="metadataTracker.Update (oldForeignKey, newForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="newForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="oldForeignKey">To be added.</param>
        <param name="newForeignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey oldForeignKey, Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey newForeignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey oldForeignKey, class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey newForeignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker.Update(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (oldForeignKey As ForeignKey, newForeignKey As ForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member Update : Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit&#xA;override this.Update : Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit" Usage="metadataTracker.Update (oldForeignKey, newForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="newForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="oldForeignKey">To be added.</param>
        <param name="newForeignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
