<Type Name="IRelationalTypeMapper" FullName="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper">
  <TypeSignature Language="C#" Value="public interface IRelationalTypeMapper" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalTypeMapper" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalTypeMapper" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="F#" Value="type IRelationalTypeMapper = interface" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="C#" Value="public interface IRelationalTypeMapper : Microsoft.EntityFrameworkCore.Storage.ITypeMapper" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalTypeMapper implements class Microsoft.EntityFrameworkCore.Storage.ITypeMapper" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalTypeMapper&#xA;Implements ITypeMapper" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type IRelationalTypeMapper = interface&#xA;    interface ITypeMapper" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.ITypeMapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
      <AttributeName Language="C#">[System.Obsolete("Use IRelationalTypeMappingSource.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use IRelationalTypeMappingSource.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
                    Maps .NET types to their corresponding relational database types.
                </para>
      <para>
                    Note: Use <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" /> going forward.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ByteArrayMapper">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper ByteArrayMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper ByteArrayMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ByteArrayMapper As IByteArrayRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.ByteArrayMapper : Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the mapper to be used for byte array properties.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMapping (property As IProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member FindMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="iRelationalTypeMapper.FindMapping property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get the mapping for. </param>
        <summary>
                Gets the relational database type for the given property.
                Returns null if no mapping is found.
            </summary>
        <returns> The type mapping to be used. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (string storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping(string storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMapping (storeType As String) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member FindMapping : string -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="iRelationalTypeMapper.FindMapping storeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeType"> The type to get the mapping for. </param>
        <summary>
                Gets the mapping that represents the given database type.
                Returns null if no mapping is found.
            </summary>
        <returns> The type mapping to be used. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping(class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMapping (clrType As Type) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member FindMapping : Type -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="iRelationalTypeMapper.FindMapping clrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clrType"> The type to get the mapping for. </param>
        <summary>
                Gets the relational database type for a given .NET type.
                Returns null if no mapping is found.
            </summary>
        <returns> The type mapping to be used. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringMapper">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper StringMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper StringMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StringMapper As IStringRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.StringMapper : Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the mapper to be used for string properties.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTypeName">
      <MemberSignature Language="C#" Value="public void ValidateTypeName (string storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateTypeName(string storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateTypeName (storeType As String)" />
      <MemberSignature Language="F#" Value="abstract member ValidateTypeName : string -&gt; unit" Usage="iRelationalTypeMapper.ValidateTypeName storeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeType"> The type to be validated. </param>
        <summary>
                Ensures that the given type name is a valid type for the relational database.
                An exception is thrown if it is not a valid type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
