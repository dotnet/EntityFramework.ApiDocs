<Type Name="CoreTypeMapper" FullName="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper">
  <TypeSignature Language="C#" Value="public class CoreTypeMapper : Microsoft.EntityFrameworkCore.Storage.ITypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CoreTypeMapper extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.ITypeMapper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreTypeMapper&#xA;Implements ITypeMapper" />
  <TypeSignature Language="F#" Value="type CoreTypeMapper = class&#xA;    interface ITypeMapper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.ITypeMapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
      <AttributeName Language="C#">[System.Obsolete("Use TypeMappingSource")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use TypeMappingSource")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                A simple default implementation of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ITypeMapper" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoreTypeMapper (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper.#ctor(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As CoreTypeMapperDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper" Usage="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As CoreTypeMapperDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapperDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies used to create a <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeMapped">
      <MemberSignature Language="C#" Value="public virtual bool IsTypeMapped (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTypeMapped(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapper.IsTypeMapped(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsTypeMapped (type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsTypeMapped : Type -&gt; bool&#xA;override this.IsTypeMapped : Type -&gt; bool" Usage="coreTypeMapper.IsTypeMapped type" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ITypeMapper.IsTypeMapped(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"> The .NET type. </param>
        <summary>
                Gets a value indicating whether the given .NET type is mapped.
            </summary>
        <returns> True if the type can be mapped; otherwise false. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
