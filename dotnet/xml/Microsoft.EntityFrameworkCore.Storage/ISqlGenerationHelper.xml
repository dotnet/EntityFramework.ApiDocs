<Type Name="ISqlGenerationHelper" FullName="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper">
  <TypeSignature Language="C#" Value="public interface ISqlGenerationHelper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISqlGenerationHelper" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISqlGenerationHelper" />
  <TypeSignature Language="F#" Value="type ISqlGenerationHelper = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISqlGenerationHelper" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Provides services to help with generation of SQL commands.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                    for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BatchTerminator">
      <MemberSignature Language="C#" Value="public string BatchTerminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BatchTerminator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.BatchTerminator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BatchTerminator As String" />
      <MemberSignature Language="F#" Value="member this.BatchTerminator : string" Usage="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.BatchTerminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The terminator to be used for batches of SQL statements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitTransactionStatement">
      <MemberSignature Language="C#" Value="public string CommitTransactionStatement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommitTransactionStatement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.CommitTransactionStatement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommitTransactionStatement As String" />
      <MemberSignature Language="F#" Value="member this.CommitTransactionStatement : string" Usage="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.CommitTransactionStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the SQL for a COMMIT statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public string DelimitIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DelimitIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DelimitIdentifier (identifier As String) As String" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : string -&gt; string" Usage="iSqlGenerationHelper.DelimitIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The identifier to delimit.</param>
        <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns>The generated string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public string DelimitIdentifier (string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DelimitIdentifier(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DelimitIdentifier (name As String, schema As String) As String" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : string * string -&gt; string" Usage="iSqlGenerationHelper.DelimitIdentifier (name, schema)" />
      <MemberSignature Language="C#" Value="public string DelimitIdentifier (string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The identifier to delimit.</param>
        <param name="schema">The schema of the identifier.</param>
        <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns>The generated string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public void DelimitIdentifier (System.Text.StringBuilder builder, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DelimitIdentifier(class System.Text.StringBuilder builder, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DelimitIdentifier (builder As StringBuilder, identifier As String)" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : System.Text.StringBuilder * string -&gt; unit" Usage="iSqlGenerationHelper.DelimitIdentifier (builder, identifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="identifier">The identifier to delimit.</param>
        <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelimitIdentifier">
      <MemberSignature Language="C#" Value="public void DelimitIdentifier (System.Text.StringBuilder builder, string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DelimitIdentifier(class System.Text.StringBuilder builder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DelimitIdentifier (builder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member DelimitIdentifier : System.Text.StringBuilder * string * string -&gt; unit" Usage="iSqlGenerationHelper.DelimitIdentifier (builder, name, schema)" />
      <MemberSignature Language="C#" Value="public void DelimitIdentifier (System.Text.StringBuilder builder, string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="name">The identifier to delimit.</param>
        <param name="schema">The schema of the identifier.</param>
        <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeIdentifier">
      <MemberSignature Language="C#" Value="public string EscapeIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EscapeIdentifier (identifier As String) As String" />
      <MemberSignature Language="F#" Value="abstract member EscapeIdentifier : string -&gt; string" Usage="iSqlGenerationHelper.EscapeIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use DelimitIdentifier() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use DelimitIdentifier() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="identifier"> The identifier to be escaped. </param>
        <summary>
                Generates the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeIdentifier">
      <MemberSignature Language="C#" Value="public void EscapeIdentifier (System.Text.StringBuilder builder, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EscapeIdentifier(class System.Text.StringBuilder builder, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EscapeIdentifier (builder As StringBuilder, identifier As String)" />
      <MemberSignature Language="F#" Value="abstract member EscapeIdentifier : System.Text.StringBuilder * string -&gt; unit" Usage="iSqlGenerationHelper.EscapeIdentifier (builder, identifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use DelimitIdentifier() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use DelimitIdentifier() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="identifier" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="identifier"> The identifier to be escaped. </param>
        <summary>
                Writes the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeLiteral">
      <MemberSignature Language="C#" Value="public string EscapeLiteral (string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeLiteral(string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EscapeLiteral (literal As String) As String" />
      <MemberSignature Language="F#" Value="abstract member EscapeLiteral : string -&gt; string" Usage="iSqlGenerationHelper.EscapeLiteral literal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use IRelationalTypeMappingSource.GetMapping(typeof(string)).GenerateSqlLiteral() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IRelationalTypeMappingSource.GetMapping(typeof(string)).GenerateSqlLiteral() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="literal" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="literal"> The value to be escaped. </param>
        <summary>
                Generates the escaped SQL representation of a literal value.
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeLiteral">
      <MemberSignature Language="C#" Value="public void EscapeLiteral (System.Text.StringBuilder builder, string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EscapeLiteral(class System.Text.StringBuilder builder, string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EscapeLiteral (builder As StringBuilder, literal As String)" />
      <MemberSignature Language="F#" Value="abstract member EscapeLiteral : System.Text.StringBuilder * string -&gt; unit" Usage="iSqlGenerationHelper.EscapeLiteral (builder, literal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use IRelationalTypeMappingSource.GetMapping(typeof(string)).GenerateSqlLiteral() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IRelationalTypeMappingSource.GetMapping(typeof(string)).GenerateSqlLiteral() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="literal" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="literal"> The value to be escaped. </param>
        <summary>
                Writes the escaped SQL representation of a literal value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateComment">
      <MemberSignature Language="C#" Value="public string GenerateComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateComment (text As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateComment : string -&gt; string" Usage="iSqlGenerationHelper.GenerateComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="text">The comment text.</param>
        <summary>
                Generates a SQL comment.
            </summary>
        <returns>The generated SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCreateSavepointStatement">
      <MemberSignature Language="C#" Value="public string GenerateCreateSavepointStatement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateCreateSavepointStatement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateCreateSavepointStatement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCreateSavepointStatement (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateCreateSavepointStatement : string -&gt; string" Usage="iSqlGenerationHelper.GenerateCreateSavepointStatement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the savepoint to be created.</param>
        <summary>
                Generates an SQL statement which creates a savepoint with the given name.
            </summary>
        <returns>An SQL string to create the savepoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLiteral">
      <MemberSignature Language="C#" Value="public string GenerateLiteral (object value, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateLiteral(object value, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateLiteral(System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateLiteral (value As Object, Optional typeMapping As RelationalTypeMapping = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateLiteral : obj * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping -&gt; string" Usage="iSqlGenerationHelper.GenerateLiteral (value, typeMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="value"> The literal value. </param>
        <param name="typeMapping"> An optional type mapping that is used for this value. </param>
        <summary>
                Generates the SQL representation of a literal value.
            </summary>
        <returns> The generated string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLiteral">
      <MemberSignature Language="C#" Value="public void GenerateLiteral (System.Text.StringBuilder builder, object value, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateLiteral(class System.Text.StringBuilder builder, object value, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateLiteral(System.Text.StringBuilder,System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateLiteral (builder As StringBuilder, value As Object, Optional typeMapping As RelationalTypeMapping = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member GenerateLiteral : System.Text.StringBuilder * obj * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping -&gt; unit" Usage="iSqlGenerationHelper.GenerateLiteral (builder, value, typeMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
        <param name="value"> The literal value. </param>
        <param name="typeMapping"> An optional type mapping that is used for this value. </param>
        <summary>
                Writes the SQL representation of a literal value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterName">
      <MemberSignature Language="C#" Value="public string GenerateParameterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateParameterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateParameterName (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterName : string -&gt; string" Usage="iSqlGenerationHelper.GenerateParameterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
                The candidate name for the parameter.
            </param>
        <summary>
                Generates a valid parameter name for the given candidate name.
            </summary>
        <returns>A valid name based on the candidate name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterName">
      <MemberSignature Language="C#" Value="public void GenerateParameterName (System.Text.StringBuilder builder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateParameterName(class System.Text.StringBuilder builder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateParameterName (builder As StringBuilder, name As String)" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterName : System.Text.StringBuilder * string -&gt; unit" Usage="iSqlGenerationHelper.GenerateParameterName (builder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="name">
                The candidate name for the parameter.
            </param>
        <summary>
                Writes a valid parameter name for the given candidate name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterNamePlaceholder">
      <MemberSignature Language="C#" Value="public string GenerateParameterNamePlaceholder (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateParameterNamePlaceholder(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterNamePlaceholder(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateParameterNamePlaceholder (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterNamePlaceholder : string -&gt; string" Usage="iSqlGenerationHelper.GenerateParameterNamePlaceholder name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">
                The candidate name for the parameter placeholder.
            </param>
        <summary>
                Generates a valid parameter placeholder name for the given candidate name.
            </summary>
        <returns>A valid placeholder name based on the candidate name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterNamePlaceholder">
      <MemberSignature Language="C#" Value="public void GenerateParameterNamePlaceholder (System.Text.StringBuilder builder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateParameterNamePlaceholder(class System.Text.StringBuilder builder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterNamePlaceholder(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateParameterNamePlaceholder (builder As StringBuilder, name As String)" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterNamePlaceholder : System.Text.StringBuilder * string -&gt; unit" Usage="iSqlGenerationHelper.GenerateParameterNamePlaceholder (builder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
        <param name="name">
                The candidate name for the parameter placeholder.
            </param>
        <summary>
                Writes a valid parameter placeholder name for the given candidate name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateReleaseSavepointStatement">
      <MemberSignature Language="C#" Value="public string GenerateReleaseSavepointStatement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateReleaseSavepointStatement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateReleaseSavepointStatement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateReleaseSavepointStatement (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateReleaseSavepointStatement : string -&gt; string" Usage="iSqlGenerationHelper.GenerateReleaseSavepointStatement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the savepoint to be released.</param>
        <summary>
                Generates an SQL statement which releases a savepoint with the given name.
            </summary>
        <returns>An SQL string to release the savepoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateRollbackToSavepointStatement">
      <MemberSignature Language="C#" Value="public string GenerateRollbackToSavepointStatement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateRollbackToSavepointStatement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateRollbackToSavepointStatement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateRollbackToSavepointStatement (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateRollbackToSavepointStatement : string -&gt; string" Usage="iSqlGenerationHelper.GenerateRollbackToSavepointStatement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the savepoint to be rolled back to.</param>
        <summary>
                Generates an SQL statement which rolls back to a savepoint with the given name.
            </summary>
        <returns>An SQL string to roll back the savepoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleLineCommentToken">
      <MemberSignature Language="C#" Value="public string SingleLineCommentToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SingleLineCommentToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.SingleLineCommentToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingleLineCommentToken As String" />
      <MemberSignature Language="F#" Value="member this.SingleLineCommentToken : string" Usage="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.SingleLineCommentToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The default single-line comment prefix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTransactionStatement">
      <MemberSignature Language="C#" Value="public string StartTransactionStatement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartTransactionStatement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StartTransactionStatement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTransactionStatement As String" />
      <MemberSignature Language="F#" Value="member this.StartTransactionStatement : string" Usage="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StartTransactionStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the SQL for a START TRANSACTION statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatementTerminator">
      <MemberSignature Language="C#" Value="public string StatementTerminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatementTerminator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StatementTerminator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StatementTerminator As String" />
      <MemberSignature Language="F#" Value="member this.StatementTerminator : string" Usage="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StatementTerminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The terminator to be used for SQL statements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
