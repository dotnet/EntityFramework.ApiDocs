<Type Name="RelationalCommand" FullName="Microsoft.EntityFrameworkCore.Storage.RelationalCommand">
  <TypeSignature Language="C#" Value="public class RelationalCommand : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalCommand extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.RelationalCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalCommand&#xA;Implements IRelationalCommand" />
  <TypeSignature Language="F#" Value="type RelationalCommand = class&#xA;    interface IRelationalCommand" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalCommand extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand, class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type RelationalCommand = class&#xA;    interface IRelationalCommand&#xA;    interface IRelationalCommandTemplate" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalCommand</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    A command to be executed against a relational database.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalCommand (Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies dependencies, string commandText, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies dependencies, string commandText, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As RelationalCommandBuilderDependencies, commandText As String, parameters As IReadOnlyList(Of IRelationalParameter))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalCommand : Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalCommand" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalCommand (dependencies, commandText, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies" />
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencies">Service dependencies.</param>
        <param name="commandText">The text of the command to be executed.</param>
        <param name="parameters">Parameters for the command.</param>
        <summary>
          <para>
                    Constructs a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalCommand" />.
                </para>
          <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public virtual string CommandText { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommandText As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CommandText" />
      <MemberSignature Language="C#" Value="public string CommandText { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the command text to be executed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand CreateCommand (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, Guid commandId, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand CreateCommand(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, valuetype System.Guid commandId, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateCommand(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCommand (parameterObject As RelationalCommandParameterObject, commandId As Guid, commandMethod As DbCommandMethod) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CreateCommand : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * Guid * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod -&gt; System.Data.Common.DbCommand&#xA;override this.CreateCommand : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * Guid * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod -&gt; System.Data.Common.DbCommand" Usage="relationalCommand.CreateCommand (parameterObject, commandId, commandMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="commandId" Type="System.Guid" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="parameterObject"> Parameters for this method. </param>
        <param name="commandId"> The command correlation ID. </param>
        <param name="commandMethod"> The method that will be called on the created command. </param>
        <summary>
          <para>
                    Template method called by the execute methods to
                    create a <see cref="T:System.Data.Common.DbCommand" /> for the given <see cref="T:System.Data.Common.DbConnection" /> and configure
                    timeouts and transactions.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns> The created command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbCommand CreateDbCommand (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, Guid commandId, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommand CreateDbCommand(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, valuetype System.Guid commandId, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDbCommand (parameterObject As RelationalCommandParameterObject, commandId As Guid, commandMethod As DbCommandMethod) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CreateDbCommand : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * Guid * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod -&gt; System.Data.Common.DbCommand&#xA;override this.CreateDbCommand : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * Guid * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod -&gt; System.Data.Common.DbCommand" Usage="relationalCommand.CreateDbCommand (parameterObject, commandId, commandMethod)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-5.0">M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CreateDbCommand(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate.CreateDbCommand(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <param name="commandId">The command correlation ID.</param>
        <param name="commandMethod">The method that will be called on the created command.</param>
        <summary>
          <para>
                    Called by the execute methods to
                    create a <see cref="T:System.Data.Common.DbCommand" /> for the given <see cref="T:System.Data.Common.DbConnection" /> and configure
                    timeouts and transactions.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The created command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRelationalDataReader">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RelationalDataReader CreateRelationalDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader CreateRelationalDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateRelationalDataReader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRelationalDataReader () As RelationalDataReader" />
      <MemberSignature Language="F#" Value="abstract member CreateRelationalDataReader : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&#xA;override this.CreateRelationalDataReader : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Usage="relationalCommand.CreateRelationalDataReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> to be used by <see cref="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)" /> and
                    <see cref="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)" />. The returned <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> may get used more for multiple
                    queries, and will be re-initialized each time via <see cref="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Initialize(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger)" />.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The created <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRelationalDataReader">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RelationalDataReader CreateRelationalDataReader (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader reader, Guid commandId, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader CreateRelationalDataReader(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader reader, valuetype System.Guid commandId, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateRelationalDataReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRelationalDataReader (connection As IRelationalConnection, command As DbCommand, reader As DbDataReader, commandId As Guid, logger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command)) As RelationalDataReader" />
      <MemberSignature Language="F#" Value="abstract member CreateRelationalDataReader : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&#xA;override this.CreateRelationalDataReader : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Usage="relationalCommand.CreateRelationalDataReader (connection, command, reader, commandId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" Index="4" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="connection">The connection, to pass to the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> constructor.</param>
        <param name="command">The command that was executed, to pass to the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> constructor.</param>
        <param name="reader">The underlying reader for the result set, to pass to the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> constructor.</param>
        <param name="commandId">
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used, to pass to the
                <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> constructor.
            </param>
        <param name="logger">The diagnostic source, to pass to the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> constructor.</param>
        <summary>
          <para>
                    Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> to be used by <see cref="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)" /> and <see cref="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)" />.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The created <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As RelationalCommandBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommand.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public virtual int ExecuteNonQuery (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteNonQuery (parameterObject As RelationalCommandParameterObject) As Integer" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQuery : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject -&gt; int&#xA;override this.ExecuteNonQuery : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject -&gt; int" Usage="relationalCommand.ExecuteNonQuery parameterObject" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <summary>
                Executes the command with no results.
            </summary>
        <returns>The number of rows affected.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteNonQueryAsync (parameterObject As RelationalCommandParameterObject, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQueryAsync : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ExecuteNonQueryAsync : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="relationalCommand.ExecuteNonQueryAsync (parameterObject, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with no results.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteReader (parameterObject As RelationalCommandParameterObject) As RelationalDataReader" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReader : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&#xA;override this.ExecuteReader : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Usage="relationalCommand.ExecuteReader parameterObject" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns>The result of the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteReaderAsync (parameterObject As RelationalCommandParameterObject, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RelationalDataReader)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReaderAsync : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;&#xA;override this.ExecuteReaderAsync : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;" Usage="relationalCommand.ExecuteReaderAsync (parameterObject, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public virtual object ExecuteScalar (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteScalar (parameterObject As RelationalCommandParameterObject) As Object" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalar : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject -&gt; obj&#xA;override this.ExecuteScalar : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject -&gt; obj" Usage="relationalCommand.ExecuteScalar parameterObject" />
      <MemberSignature Language="C#" Value="public virtual object? ExecuteScalar (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <summary>
                Executes the command with a single scalar result.
            </summary>
        <returns>The result of the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteScalarAsync (parameterObject As RelationalCommandParameterObject, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalarAsync : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ExecuteScalarAsync : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="relationalCommand.ExecuteScalarAsync (parameterObject, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object?&gt; ExecuteScalarAsync (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommand.Parameters" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the parameters for the command.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateFrom">
      <MemberSignature Language="C#" Value="public virtual void PopulateFrom (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate commandTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopulateFrom(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate commandTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommand.PopulateFrom(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PopulateFrom (commandTemplate As IRelationalCommandTemplate)" />
      <MemberSignature Language="F#" Value="abstract member PopulateFrom : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate -&gt; unit&#xA;override this.PopulateFrom : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate -&gt; unit" Usage="relationalCommand.PopulateFrom commandTemplate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.PopulateFrom(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandTemplate" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandTemplate">A template command from which the command text and parameters will be copied.</param>
        <summary>
                Populates this command from the provided <paramref name="commandTemplate" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
