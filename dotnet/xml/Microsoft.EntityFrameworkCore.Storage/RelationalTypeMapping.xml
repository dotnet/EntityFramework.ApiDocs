<Type Name="RelationalTypeMapping" FullName="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping">
  <TypeSignature Language="C#" Value="public class RelationalTypeMapping" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalTypeMapping extends System.Object" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalTypeMapping" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="F#" Value="type RelationalTypeMapping = class" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
  <TypeSignature Language="C#" Value="public abstract class RelationalTypeMapping" FrameworkAlternate="efcore-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RelationalTypeMapping extends System.Object" FrameworkAlternate="efcore-2.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelationalTypeMapping" FrameworkAlternate="efcore-2.0" />
  <TypeSignature Language="C#" Value="public abstract class RelationalTypeMapping : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RelationalTypeMapping extends Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelationalTypeMapping&#xA;Inherits CoreTypeMapping" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type RelationalTypeMapping = class&#xA;    inherit CoreTypeMapping" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Represents the mapping between a .NET type and a database type.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">The parameters for this mapping.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalTypeMapping (string storeType, Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeType, class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeType As String, clrType As Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping : string * Type -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping (storeType, clrType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="storeType"> The name of the database type. </param>
        <param name="clrType"> The .NET type. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalTypeMapping (string storeType, Type clrType, System.Data.DbType? dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeType, class System.Type clrType, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeType As String, clrType As Type, dbType As Nullable(Of DbType))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping : string * Type * Nullable&lt;System.Data.DbType&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping (storeType, clrType, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="storeType"> The name of the database type. </param>
        <param name="clrType"> The .NET type. </param>
        <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalTypeMapping (string storeType, Type clrType, System.Data.DbType? dbType = default, bool unicode = false, int? size = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string storeType, class System.Type clrType, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType, bool unicode, valuetype System.Nullable`1&lt;int32&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (storeType As String, clrType As Type, Optional dbType As Nullable(Of DbType) = Nothing, Optional unicode As Boolean = false, Optional size As Nullable(Of Integer) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping : string * Type * Nullable&lt;System.Data.DbType&gt; * bool * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping (storeType, clrType, dbType, unicode, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="unicode" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="storeType"> The name of the database type. </param>
        <param name="clrType"> The .NET type. </param>
        <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        <param name="unicode"> A value indicating whether the type should handle Unicode data or not. </param>
        <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalTypeMapping (string storeType, Type clrType, System.Data.DbType? dbType, bool unicode, int? size, bool hasNonDefaultUnicode = false, bool hasNonDefaultSize = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeType, class System.Type clrType, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType, bool unicode, valuetype System.Nullable`1&lt;int32&gt; size, bool hasNonDefaultUnicode, bool hasNonDefaultSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeType As String, clrType As Type, dbType As Nullable(Of DbType), unicode As Boolean, size As Nullable(Of Integer), Optional hasNonDefaultUnicode As Boolean = false, Optional hasNonDefaultSize As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping : string * Type * Nullable&lt;System.Data.DbType&gt; * bool * Nullable&lt;int&gt; * bool * bool -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping (storeType, clrType, dbType, unicode, size, hasNonDefaultUnicode, hasNonDefaultSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="unicode" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="hasNonDefaultUnicode" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="hasNonDefaultSize" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="storeType"> The name of the database type. </param>
        <param name="clrType"> The .NET type. </param>
        <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        <param name="unicode"> A value indicating whether the type should handle Unicode data or not. </param>
        <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
        <param name="hasNonDefaultUnicode"> A value indicating whether the Unicode setting has been manually configured to a non-default value. </param>
        <param name="hasNonDefaultSize"> A value indicating whether the size setting has been manually configured to a non-default value. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalTypeMapping (string storeType, Type clrType, System.Data.DbType? dbType = default, bool unicode = false, int? size = default, bool fixedLength = false, int? precision = default, int? scale = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string storeType, class System.Type clrType, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType, bool unicode, valuetype System.Nullable`1&lt;int32&gt; size, bool fixedLength, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (storeType As String, clrType As Type, Optional dbType As Nullable(Of DbType) = Nothing, Optional unicode As Boolean = false, Optional size As Nullable(Of Integer) = Nothing, Optional fixedLength As Boolean = false, Optional precision As Nullable(Of Integer) = Nothing, Optional scale As Nullable(Of Integer) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping : string * Type * Nullable&lt;System.Data.DbType&gt; * bool * Nullable&lt;int&gt; * bool * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping (storeType, clrType, dbType, unicode, size, fixedLength, precision, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="unicode" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="fixedLength" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="storeType">The name of the database type.</param>
        <param name="clrType">The .NET type.</param>
        <param name="dbType">The <see cref="T:System.Data.DbType" /> to be used.</param>
        <param name="unicode">A value indicating whether the type should handle Unicode data or not.</param>
        <param name="size">The size of data the property is configured to store, or null if no size is configured.</param>
        <param name="fixedLength">A value indicating whether the type has fixed length data or not.</param>
        <param name="precision">The precision of data the property is configured to store, or null if no precision is configured.</param>
        <param name="scale">The scale of data the property is configured to store, or null if no scale is configured.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalTypeMapping (string storeType, Type clrType, System.Data.DbType? dbType = default, bool unicode = false, int? size = default, bool fixedLength = false, int? precision = default, int? scale = default, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string storeType, class System.Type clrType, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType, bool unicode, valuetype System.Nullable`1&lt;int32&gt; size, bool fixedLength, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (storeType As String, clrType As Type, Optional dbType As Nullable(Of DbType) = Nothing, Optional unicode As Boolean = false, Optional size As Nullable(Of Integer) = Nothing, Optional fixedLength As Boolean = false, Optional precision As Nullable(Of Integer) = Nothing, Optional scale As Nullable(Of Integer) = Nothing, Optional jsonValueReaderWriter As JsonValueReaderWriter = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping : string * Type * Nullable&lt;System.Data.DbType&gt; * bool * Nullable&lt;int&gt; * bool * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping (storeType, clrType, dbType, unicode, size, fixedLength, precision, scale, jsonValueReaderWriter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="unicode" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fixedLength" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="6" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="7" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Index="8" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="storeType">The name of the database type.</param>
        <param name="clrType">The .NET type.</param>
        <param name="dbType">The <see cref="T:System.Data.DbType" /> to be used.</param>
        <param name="unicode">A value indicating whether the type should handle Unicode data or not.</param>
        <param name="size">The size of data the property is configured to store, or null if no size is configured.</param>
        <param name="fixedLength">A value indicating whether the type has fixed length data or not.</param>
        <param name="precision">The precision of data the property is configured to store, or null if no precision is configured.</param>
        <param name="scale">The scale of data the property is configured to store, or null if no scale is configured.</param>
        <param name="jsonValueReaderWriter">Handles reading and writing JSON values for instances of the mapped type.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone(valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone (parameters As CoreTypeMapping.CoreTypeMappingParameters) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="relationalTypeMapping.Clone parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" FrameworkAlternate="efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone (parameters As RelationalTypeMapping.RelationalTypeMappingParameters) As RelationalTypeMapping" FrameworkAlternate="efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.Clone parameters" />
      <MemberSignature Language="C#" Value="protected abstract Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Clone (parameters As RelationalTypeMapping.RelationalTypeMappingParameters) As RelationalTypeMapping" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">The parameters for this mapping.</param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns>The newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (in Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone([in]valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (mappingInfo As RelationalTypeMappingInfo) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : RelationalTypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.Clone mappingInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingInfo" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-3.0;efcore-5.0;efcore-6.0;efcore-7.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mappingInfo">The mapping info containing the facets to use.</param>
        <summary>
                Clones the type mapping to update facets from the mapping info, if needed.
            </summary>
        <returns>The cloned mapping, or the original mapping if no clone was needed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (converter As ValueConverter) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="relationalTypeMapping.Clone converter" />
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="converter">The converter to use.</param>
        <summary>
                Returns a new copy of this type mapping with the given <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
                added.
            </summary>
        <returns>A new type mapping</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (int? precision, int? scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (precision As Nullable(Of Integer), scale As Nullable(Of Integer)) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.Clone (precision, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="precision">The precision of data the property is configured to store, or null if no size is configured.</param>
        <param name="scale">The scale of data the property is configured to store, or null if no size is configured.</param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns>The newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (string storeType, int? size);" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(string storeType, valuetype System.Nullable`1&lt;int32&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone (storeType As String, size As Nullable(Of Integer)) As RelationalTypeMapping" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      <MemberSignature Language="F#" Value="abstract member Clone : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.Clone (storeType, size)" FrameworkAlternate="efcore-2.0" />
      <MemberSignature Language="F#" Value="override this.Clone : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.Clone (storeType, size)" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (string storeType, int? size);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (storeType As String, size As Nullable(Of Integer)) As RelationalTypeMapping" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="storeType">The name of the database type.</param>
        <param name="size">The size of data the property is configured to store, or null if no size is configured.</param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns>The newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (in Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo?? mappingInfo = default, Type? clrType = default, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? providerValueComparer = default, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? elementMapping = default, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter = default, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix? storeTypePostfix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone([in]valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo&gt; mappingInfo, class System.Type clrType, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer providerValueComparer, class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping elementMapping, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; storeTypePostfix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Clone(System.Nullable{Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo}@|System.Runtime.InteropServices.InAttribute,System.Type,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter,System.Nullable{Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (Optional mappingInfo As Nullable(Of RelationalTypeMappingInfo) = Nothing, Optional clrType As Type = Nothing, Optional converter As ValueConverter = Nothing, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional providerValueComparer As ValueComparer = Nothing, Optional elementMapping As CoreTypeMapping = Nothing, Optional jsonValueReaderWriter As JsonValueReaderWriter = Nothing, Optional storeTypePostfix As Nullable(Of StoreTypePostfix) = Nothing) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Nullable * Type * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter * Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.Clone (mappingInfo, clrType, converter, comparer, keyComparer, providerValueComparer, elementMapping, jsonValueReaderWriter, storeTypePostfix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingInfo" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo&gt;" Index="0" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="4" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="providerValueComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="5" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="elementMapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Index="6" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Index="7" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="storeTypePostfix" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt;" Index="8" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="mappingInfo">The mapping info containing the facets to use.</param>
        <param name="storeTypePostfix">The new postfix, or <see langword="null" /> to leave unchanged.</param>
        <param name="clrType">The .NET type used in the EF model, or <see langword="null" /> to leave unchanged.</param>
        <param name="converter">The value converter, or <see langword="null" /> to leave unchanged.</param>
        <param name="comparer">The value comparer, or <see langword="null" /> to leave unchanged.</param>
        <param name="keyComparer">The key value comparer, or <see langword="null" /> to leave unchanged.</param>
        <param name="providerValueComparer">The provider value comparer, or <see langword="null" /> to leave unchanged.</param>
        <param name="elementMapping">The element mapping, or <see langword="null" /> to leave unchanged.</param>
        <param name="jsonValueReaderWriter">The JSON reader/writer, or <see langword="null" /> to leave unchanged.</param>
        <summary>
                Clones the type mapping to update any parameter if needed.
            </summary>
        <returns>The cloned mapping, or the original mapping if no clone was needed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public virtual Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ClrType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the .NET type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureParameter">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureParameter (System.Data.Common.DbParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureParameter(class System.Data.Common.DbParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureParameter (parameter As DbParameter)" />
      <MemberSignature Language="F#" Value="abstract member ConfigureParameter : System.Data.Common.DbParameter -&gt; unit&#xA;override this.ConfigureParameter : System.Data.Common.DbParameter -&gt; unit" Usage="relationalTypeMapping.ConfigureParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">The parameter to be configured.</param>
        <summary>
                Configures type information of a <see cref="T:System.Data.Common.DbParameter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping CreateCopy (string storeType, int? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping CreateCopy(string storeType, valuetype System.Nullable`1&lt;int32&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.CreateCopy(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCopy (storeType As String, size As Nullable(Of Integer)) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.CreateCopy : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.CreateCopy (storeType, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="storeType"> The name of the database type. </param>
        <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns> The newly created mapping. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbParameter CreateParameter (System.Data.Common.DbCommand command, string name, object value, bool? nullable = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbParameter CreateParameter(class System.Data.Common.DbCommand command, string name, object value, valuetype System.Nullable`1&lt;bool&gt; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParameter (command As DbCommand, name As String, value As Object, Optional nullable As Nullable(Of Boolean) = Nothing) As DbParameter" />
      <MemberSignature Language="F#" Value="abstract member CreateParameter : System.Data.Common.DbCommand * string * obj * Nullable&lt;bool&gt; -&gt; System.Data.Common.DbParameter&#xA;override this.CreateParameter : System.Data.Common.DbCommand * string * obj * Nullable&lt;bool&gt; -&gt; System.Data.Common.DbParameter" Usage="relationalTypeMapping.CreateParameter (command, name, value, nullable)" />
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbParameter CreateParameter (System.Data.Common.DbCommand command, string name, object? value, bool? nullable = default);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="nullable" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="command">The command the parameter should be created on.</param>
        <param name="name">The name of the parameter.</param>
        <param name="value">The value to be assigned to the parameter.</param>
        <param name="nullable">A value indicating whether the parameter should be a nullable type.</param>
        <summary>
                Creates a <see cref="T:System.Data.Common.DbParameter" /> with the appropriate type information configured.
            </summary>
        <returns>The newly created parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbParameter CreateParameter (System.Data.Common.DbCommand command, string name, object? value, bool? nullable = default, System.Data.ParameterDirection direction = System.Data.ParameterDirection.Input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbParameter CreateParameter(class System.Data.Common.DbCommand command, string name, object value, valuetype System.Nullable`1&lt;bool&gt; nullable, valuetype System.Data.ParameterDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Nullable{System.Boolean},System.Data.ParameterDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParameter (command As DbCommand, name As String, value As Object, Optional nullable As Nullable(Of Boolean) = Nothing, Optional direction As ParameterDirection = System.Data.ParameterDirection.Input) As DbParameter" />
      <MemberSignature Language="F#" Value="abstract member CreateParameter : System.Data.Common.DbCommand * string * obj * Nullable&lt;bool&gt; * System.Data.ParameterDirection -&gt; System.Data.Common.DbParameter&#xA;override this.CreateParameter : System.Data.Common.DbCommand * string * obj * Nullable&lt;bool&gt; * System.Data.ParameterDirection -&gt; System.Data.Common.DbParameter" Usage="relationalTypeMapping.CreateParameter (command, name, value, nullable, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="nullable" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="command">The command the parameter should be created on.</param>
        <param name="name">The name of the parameter.</param>
        <param name="value">The value to be assigned to the parameter.</param>
        <param name="nullable">A value indicating whether the parameter should be a nullable type.</param>
        <param name="direction">The direction of the parameter.</param>
        <summary>
                Creates a <see cref="T:System.Data.Common.DbParameter" /> with the appropriate type information configured.
            </summary>
        <returns>The newly created parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeDataReaderExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression CustomizeDataReaderExpression (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CustomizeDataReaderExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.CustomizeDataReaderExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CustomizeDataReaderExpression (expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member CustomizeDataReaderExpression : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression&#xA;override this.CustomizeDataReaderExpression : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="relationalTypeMapping.CustomizeDataReaderExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">The input expression, containing the database value.</param>
        <summary>
                Gets a custom expression tree for reading the value from the input data reader
                expression that contains the database value.
            </summary>
        <returns>The expression with customization added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public virtual System.Data.DbType? DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; DbType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DbType As Nullable(Of DbType)" />
      <MemberSignature Language="F#" Value="member this.DbType : Nullable&lt;System.Data.DbType&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Data.DbType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the <see cref="T:System.Data.DbType" /> to be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNonNullSqlLiteral">
      <MemberSignature Language="C#" Value="protected virtual string GenerateNonNullSqlLiteral (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateNonNullSqlLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GenerateNonNullSqlLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateNonNullSqlLiteral (value As Object) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateNonNullSqlLiteral : obj -&gt; string&#xA;override this.GenerateNonNullSqlLiteral : obj -&gt; string" Usage="relationalTypeMapping.GenerateNonNullSqlLiteral value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The literal value.</param>
        <summary>
                Generates the SQL representation of a non-null literal value.
            </summary>
        <returns>
                The generated string.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateProviderValueSqlLiteral">
      <MemberSignature Language="C#" Value="public virtual string GenerateProviderValueSqlLiteral (object value);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateProviderValueSqlLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GenerateProviderValueSqlLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateProviderValueSqlLiteral (value As Object) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateProviderValueSqlLiteral : obj -&gt; string&#xA;override this.GenerateProviderValueSqlLiteral : obj -&gt; string" Usage="relationalTypeMapping.GenerateProviderValueSqlLiteral value" />
      <MemberSignature Language="C#" Value="public virtual string GenerateProviderValueSqlLiteral (object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-2.1;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The literal value.</param>
        <summary>
                Generates the SQL representation of a literal value without conversion.
            </summary>
        <returns>
                The generated string.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSqlLiteral">
      <MemberSignature Language="C#" Value="public virtual string GenerateSqlLiteral (object value);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateSqlLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GenerateSqlLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateSqlLiteral (value As Object) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateSqlLiteral : obj -&gt; string&#xA;override this.GenerateSqlLiteral : obj -&gt; string" Usage="relationalTypeMapping.GenerateSqlLiteral value" />
      <MemberSignature Language="C#" Value="public virtual string GenerateSqlLiteral (object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The literal value.</param>
        <summary>
                Generates the SQL representation of a literal value.
            </summary>
        <returns>
                The generated string.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataReaderMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetDataReaderMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetDataReaderMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GetDataReaderMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataReaderMethod () As MethodInfo" />
      <MemberSignature Language="F#" Value="abstract member GetDataReaderMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetDataReaderMethod : unit -&gt; System.Reflection.MethodInfo" Usage="relationalTypeMapping.GetDataReaderMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                The method to use when reading values of the given type. The method must be defined
                on <see cref="T:System.Data.Common.DbDataReader" /> or one of its subclasses.
            </summary>
        <returns>The method to use to read the value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataReaderMethod">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetDataReaderMethod (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetDataReaderMethod(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GetDataReaderMethod(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataReaderMethod (type As Type) As MethodInfo" />
      <MemberSignature Language="F#" Value="static member GetDataReaderMethod : Type -&gt; System.Reflection.MethodInfo" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GetDataReaderMethod type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                The method to use when reading values of the given type. The method must be defined
                on <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
        <returns>The method to use to read the value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNonDefaultSize">
      <MemberSignature Language="C#" Value="public virtual bool HasNonDefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNonDefaultSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.HasNonDefaultSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasNonDefaultSize As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasNonDefaultSize : bool" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.HasNonDefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the size setting has been manually configured to a non-default value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNonDefaultUnicode">
      <MemberSignature Language="C#" Value="public virtual bool HasNonDefaultUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNonDefaultUnicode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.HasNonDefaultUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasNonDefaultUnicode As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasNonDefaultUnicode : bool" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.HasNonDefaultUnicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the Unicode setting has been manually configured to a non-default value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedLength As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the type is constrained to fixed-length data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public virtual bool IsUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnicode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.IsUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsUnicode As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUnicode : bool" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.IsUnicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the type should handle Unicode data or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullMapping">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping NullMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping NullMapping" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.NullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NullMapping As RelationalTypeMapping " />
      <MemberSignature Language="F#" Value=" staticval mutable NullMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.NullMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the mapping to be used when the only piece of information is that there is a null value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Parameters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Parameters As RelationalTypeMapping.RelationalTypeMappingParameters" />
      <MemberSignature Language="F#" Value="member this.Parameters : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Returns the parameters used to create this type mapping.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public virtual int? Precision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Precision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Precision As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Precision : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the precision of data the property is configured to store, or null if no precision is configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessStoreType">
      <MemberSignature Language="C#" Value="protected virtual string ProcessStoreType (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters, string storeType, string storeTypeNameBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ProcessStoreType(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters, string storeType, string storeTypeNameBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ProcessStoreType(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessStoreType (parameters As RelationalTypeMapping.RelationalTypeMappingParameters, storeType As String, storeTypeNameBase As String) As String" />
      <MemberSignature Language="F#" Value="abstract member ProcessStoreType : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters * string * string -&gt; string&#xA;override this.ProcessStoreType : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters * string * string -&gt; string" Usage="relationalTypeMapping.ProcessStoreType (parameters, storeType, storeTypeNameBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeType" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeTypeNameBase" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">The parameters for this mapping.</param>
        <param name="storeType">The specified store type name.</param>
        <param name="storeTypeNameBase">The calculated based name</param>
        <summary>
                Processes the store type name to add appropriate postfix/prefix text as needed.
            </summary>
        <returns>The store type name to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public virtual int? Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Scale" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scale As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Scale : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the scale of data the property is configured to store, or null if no scale is configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual int? Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Size" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Size As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Size : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the size of data the property is configured to store, or null if no size is configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlLiteralFormatString">
      <MemberSignature Language="C#" Value="protected virtual string SqlLiteralFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlLiteralFormatString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.SqlLiteralFormatString" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SqlLiteralFormatString As String" />
      <MemberSignature Language="F#" Value="member this.SqlLiteralFormatString : string" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.SqlLiteralFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the string format to be used to generate SQL literals of this type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreType">
      <MemberSignature Language="C#" Value="public virtual string StoreType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoreType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoreType As String" />
      <MemberSignature Language="F#" Value="member this.StoreType : string" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the name of the database type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypeNameBase">
      <MemberSignature Language="C#" Value="public virtual string StoreTypeNameBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoreTypeNameBase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreTypeNameBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoreTypeNameBase As String" />
      <MemberSignature Language="F#" Value="member this.StoreTypeNameBase : string" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreTypeNameBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the base name of the database type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypePostfix">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix StoreTypePostfix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix StoreTypePostfix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreTypePostfix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoreTypePostfix As StoreTypePostfix" />
      <MemberSignature Language="F#" Value="member this.StoreTypePostfix : Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreTypePostfix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the name of the database type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithComposedConverter">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping WithComposedConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? elementMapping = default, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping WithComposedConverter(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping elementMapping, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.WithComposedConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WithComposedConverter (converter As ValueConverter, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional elementMapping As CoreTypeMapping = Nothing, Optional jsonValueReaderWriter As JsonValueReaderWriter = Nothing) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.WithComposedConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="relationalTypeMapping.WithComposedConverter (converter, comparer, keyComparer, elementMapping, jsonValueReaderWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="elementMapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="keyComparer">To be added.</param>
        <param name="elementMapping">To be added.</param>
        <param name="jsonValueReaderWriter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithPrecisionAndScale">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping WithPrecisionAndScale (int? precision, int? scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping WithPrecisionAndScale(valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.WithPrecisionAndScale(System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithPrecisionAndScale (precision As Nullable(Of Integer), scale As Nullable(Of Integer)) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member WithPrecisionAndScale : Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.WithPrecisionAndScale : Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.WithPrecisionAndScale (precision, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="precision">The precision of data the property is configured to store, or null if no size is configured.</param>
        <param name="scale">The scale of data the property is configured to store, or null if no size is configured.</param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns>The newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithStoreTypeAndSize">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping WithStoreTypeAndSize (string storeType, int? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping WithStoreTypeAndSize(string storeType, valuetype System.Nullable`1&lt;int32&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.WithStoreTypeAndSize(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithStoreTypeAndSize (storeType As String, size As Nullable(Of Integer)) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member WithStoreTypeAndSize : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.WithStoreTypeAndSize : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.WithStoreTypeAndSize (storeType, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="storeType">The name of the database type.</param>
        <param name="size">The size of data the property is configured to store, or null if no size is configured.</param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns>The newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTypeMappingInfo">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping WithTypeMappingInfo (in Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping WithTypeMappingInfo([in]valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.WithTypeMappingInfo(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithTypeMappingInfo (mappingInfo As RelationalTypeMappingInfo) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member WithTypeMappingInfo : RelationalTypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.WithTypeMappingInfo : RelationalTypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="relationalTypeMapping.WithTypeMappingInfo mappingInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingInfo" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo" Index="0" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mappingInfo">The mapping info containing the facets to use.</param>
        <summary>
                Clones the type mapping to update facets from the mapping info, if needed.
            </summary>
        <returns>The cloned mapping, or the original mapping if no clone was needed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
