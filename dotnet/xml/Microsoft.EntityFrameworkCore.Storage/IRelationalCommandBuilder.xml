<Type Name="IRelationalCommandBuilder" FullName="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder">
  <TypeSignature Language="C#" Value="public interface IRelationalCommandBuilder : Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalCommandBuilder implements class Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1&lt;class Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalCommandBuilder&#xA;Implements IInfrastructure(Of IndentedStringBuilder)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type IRelationalCommandBuilder = interface&#xA;    interface IInfrastructure&lt;IndentedStringBuilder&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="C#" Value="public interface IRelationalCommandBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalCommandBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalCommandBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type IRelationalCommandBuilder = interface" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRelationalCommandBuilder" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Builds a command to be executed against a relational database.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter (Microsoft.EntityFrameworkCore.Storage.IRelationalParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParameter (parameter As IRelationalParameter) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalParameter -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilder.AddParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameter">The parameter.</param>
        <summary>
                Adds the given parameter to this command.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Append (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Append(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Object) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member Append : obj -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"> The object to be written. </param>
        <summary>
                Appends an object to the command text.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Append (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Append(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As String) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member Append : string -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The object to be written.</param>
        <summary>
                Appends an object to the command text.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.AppendLine" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendLine () As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member AppendLine : unit -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilder.AppendLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Appends a blank line to the command text.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommand Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As IRelationalCommand" />
      <MemberSignature Language="F#" Value="abstract member Build : unit -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" Usage="iRelationalCommandBuilder.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Creates the command.
            </summary>
        <returns>The newly created command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTextLength">
      <MemberSignature Language="C#" Value="public int CommandTextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTextLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.CommandTextLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTextLength As Integer" />
      <MemberSignature Language="F#" Value="member this.CommandTextLength : int" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.CommandTextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the length of the command text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecrementIndent">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder DecrementIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder DecrementIndent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.DecrementIndent" />
      <MemberSignature Language="VB.NET" Value="Public Function DecrementIndent () As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member DecrementIndent : unit -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilder.DecrementIndent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Decrements the indent of subsequent lines.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementIndent">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder IncrementIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder IncrementIndent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.IncrementIndent" />
      <MemberSignature Language="VB.NET" Value="Public Function IncrementIndent () As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member IncrementIndent : unit -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilder.IncrementIndent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Increments the indent of subsequent lines.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBuilder">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder ParameterBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder ParameterBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.ParameterBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBuilder As IRelationalParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.ParameterBuilder : Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.ParameterBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Builds the parameters associated with this command.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The collection of parameters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParameterAt">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder RemoveParameterAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder RemoveParameterAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.RemoveParameterAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveParameterAt (index As Integer) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="abstract member RemoveParameterAt : int -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="iRelationalCommandBuilder.RemoveParameterAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index of the parameter to be removed.</param>
        <summary>
                Removes the parameter with the given index from this command.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMappingSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.TypeMappingSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeMappingSource As IRelationalTypeMappingSource" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.TypeMappingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Code trying to add parameter should add type mapped parameter using TypeMappingSource directly.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Code trying to add parameter should add type mapped parameter using TypeMappingSource directly.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The source for <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />s to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
