<Type Name="RelationalGeometryTypeMapping&lt;TGeometry,TProvider&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;TGeometry,TProvider&gt;">
  <TypeSignature Language="C#" Value="public abstract class RelationalGeometryTypeMapping&lt;TGeometry,TProvider&gt; : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RelationalGeometryTypeMapping`2&lt;TGeometry, TProvider&gt; extends Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelationalGeometryTypeMapping(Of TGeometry, TProvider)&#xA;Inherits RelationalTypeMapping" />
  <TypeSignature Language="F#" Value="type RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt; = class&#xA;    inherit RelationalTypeMapping" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TGeometry" />
    <TypeParameter Name="TProvider" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TGeometry">The geometry type.</typeparam>
    <typeparam name="TProvider">The native type of the database provider.</typeparam>
    <summary>
                Base class for relation type mappings to NTS Geometry and derived types.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalGeometryTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt; converter);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TGeometry, !TProvider&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As RelationalTypeMapping.RelationalTypeMappingParameters, converter As ValueConverter(Of TGeometry, TProvider))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt; : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Geometry, 'Provider&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt; (parameters, converter)" />
      <MemberSignature Language="C#" Value="protected RelationalGeometryTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;? converter);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="parameters">The parameters for this mapping.</param>
        <param name="converter">The converter to use when converting to and from database types.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalGeometryTypeMapping (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt; converter, string storeType);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TGeometry, !TProvider&gt; converter, string storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter{`0,`1},System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (converter As ValueConverter(Of TGeometry, TProvider), storeType As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Geometry, 'Provider&gt; * string -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt; (converter, storeType)" />
      <MemberSignature Language="C#" Value="protected RelationalGeometryTypeMapping (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;? converter, string storeType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="storeType" Type="System.String" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="converter">The converter to use when converting to and from database types.</param>
        <param name="storeType">The store type name.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalGeometryTypeMapping (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;? converter, string storeType, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TGeometry, !TProvider&gt; converter, string storeType, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter{`0,`1},System.String,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (converter As ValueConverter(Of TGeometry, TProvider), storeType As String, Optional jsonValueReaderWriter As JsonValueReaderWriter = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Geometry, 'Provider&gt; * string * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt; (converter, storeType, jsonValueReaderWriter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="storeType" Type="System.String" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="converter">The converter to use when converting to and from database types.</param>
        <param name="storeType">The store type name.</param>
        <param name="jsonValueReaderWriter">Handles reading and writing JSON values for instances of the mapped type.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsText">
      <MemberSignature Language="C#" Value="protected abstract string AsText (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string AsText(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.AsText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function AsText (value As Object) As String" />
      <MemberSignature Language="F#" Value="abstract member AsText : obj -&gt; string" Usage="relationalGeometryTypeMapping.AsText value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The 'Geometry' value.</param>
        <summary>
                Returns the Well-Known-Text (WKT) representation of the given object.
            </summary>
        <returns>The WKT.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbParameter CreateParameter (System.Data.Common.DbCommand command, string name, object value, bool? nullable = default);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbParameter CreateParameter(class System.Data.Common.DbCommand command, string name, object value, valuetype System.Nullable`1&lt;bool&gt; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateParameter (command As DbCommand, name As String, value As Object, Optional nullable As Nullable(Of Boolean) = Nothing) As DbParameter" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : System.Data.Common.DbCommand * string * obj * Nullable&lt;bool&gt; -&gt; System.Data.Common.DbParameter" Usage="relationalGeometryTypeMapping.CreateParameter (command, name, value, nullable)" />
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbParameter CreateParameter (System.Data.Common.DbCommand command, string name, object? value, bool? nullable = default);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="nullable" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="command">The command the parameter should be created on.</param>
        <param name="name">The name of the parameter.</param>
        <param name="value">The value to be assigned to the parameter.</param>
        <param name="nullable">A value indicating whether the parameter should be a nullable type.</param>
        <summary>
                Creates a <see cref="T:System.Data.Common.DbParameter" /> with the appropriate type information configured.
            </summary>
        <returns>The newly created parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public override System.Data.Common.DbParameter CreateParameter (System.Data.Common.DbCommand command, string name, object? value, bool? nullable = default, System.Data.ParameterDirection direction = System.Data.ParameterDirection.Input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.DbParameter CreateParameter(class System.Data.Common.DbCommand command, string name, object value, valuetype System.Nullable`1&lt;bool&gt; nullable, valuetype System.Data.ParameterDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Nullable{System.Boolean},System.Data.ParameterDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateParameter (command As DbCommand, name As String, value As Object, Optional nullable As Nullable(Of Boolean) = Nothing, Optional direction As ParameterDirection = System.Data.ParameterDirection.Input) As DbParameter" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : System.Data.Common.DbCommand * string * obj * Nullable&lt;bool&gt; * System.Data.ParameterDirection -&gt; System.Data.Common.DbParameter" Usage="relationalGeometryTypeMapping.CreateParameter (command, name, value, nullable, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="nullable" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <param name="nullable">To be added.</param>
        <param name="direction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CustomizeDataReaderExpression">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression CustomizeDataReaderExpression (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression CustomizeDataReaderExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.CustomizeDataReaderExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CustomizeDataReaderExpression (expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.CustomizeDataReaderExpression : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="relationalGeometryTypeMapping.CustomizeDataReaderExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">The input expression, containing the database value.</param>
        <summary>
                Gets a custom expression tree for the code to convert from the database value
                to the model value.
            </summary>
        <returns>The expression with conversion added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeLiteral">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression GenerateCodeLiteral (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression GenerateCodeLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.GenerateCodeLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateCodeLiteral (value As Object) As Expression" />
      <MemberSignature Language="F#" Value="override this.GenerateCodeLiteral : obj -&gt; System.Linq.Expressions.Expression" Usage="relationalGeometryTypeMapping.GenerateCodeLiteral value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The value for which a literal is needed.</param>
        <summary>
                Creates a an expression tree that can be used to generate code for the literal value.
                Currently, only very basic expressions such as constructor calls and factory methods taking
                simple constants are supported.
            </summary>
        <returns>An expression tree that can be used to generate code for the literal value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSrid">
      <MemberSignature Language="C#" Value="protected abstract int GetSrid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetSrid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.GetSrid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetSrid (value As Object) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetSrid : obj -&gt; int" Usage="relationalGeometryTypeMapping.GetSrid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The 'Geometry' value.</param>
        <summary>
                Returns the SRID representation of the given object.
            </summary>
        <returns>The SRID.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialConverter">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt; SpatialConverter { get; }" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TGeometry, !TProvider&gt; SpatialConverter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.SpatialConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SpatialConverter As ValueConverter(Of TGeometry, TProvider)" />
      <MemberSignature Language="F#" Value="member this.SpatialConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Geometry, 'Provider&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt;.SpatialConverter" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;? SpatialConverter { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TGeometry,TProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The underlying Geometry converter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WktReaderType">
      <MemberSignature Language="C#" Value="protected abstract Type WktReaderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type WktReaderType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.WktReaderType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property WktReaderType As Type" />
      <MemberSignature Language="F#" Value="member this.WktReaderType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt;.WktReaderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type of the NTS 'WKTReader'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WKTReaderType">
      <MemberSignature Language="C#" Value="protected abstract Type WKTReaderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type WKTReaderType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping`2.WKTReaderType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property WKTReaderType As Type" />
      <MemberSignature Language="F#" Value="member this.WKTReaderType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalGeometryTypeMapping&lt;'Geometry, 'Provider&gt;.WKTReaderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type of the NTS 'WKTReader'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
