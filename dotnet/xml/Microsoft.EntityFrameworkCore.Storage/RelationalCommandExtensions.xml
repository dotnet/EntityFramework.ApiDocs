<Type Name="RelationalCommandExtensions" FullName="Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalCommandExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalCommandExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalCommandExtensions" />
  <TypeSignature Language="F#" Value="type RelationalCommandExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods typically used by internal code and database providers to execute
                commands on the low-level <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" /> abstraction.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public static int ExecuteNonQuery (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecuteNonQuery(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteNonQuery (command As IRelationalCommand, connection As IRelationalConnection) As Integer" />
      <MemberSignature Language="F#" Value="static member ExecuteNonQuery : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; int" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery (command, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed. </param>
        <param name="connection"> The connection to execute against. </param>
        <summary>
                Executes the command with no results.
            </summary>
        <returns> The number of rows affected. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteNonQueryAsync (command As IRelationalCommand, connection As IRelationalConnection, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="static member ExecuteNonQueryAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync (command, connection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed. </param>
        <param name="connection"> The connection to execute against. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with no results.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteReader (command As IRelationalCommand, connection As IRelationalConnection) As RelationalDataReader" />
      <MemberSignature Language="F#" Value="static member ExecuteReader : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader (command, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed. </param>
        <param name="connection"> The connection to execute against. </param>
        <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns> The result of the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteReaderAsync (command As IRelationalCommand, connection As IRelationalConnection, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RelationalDataReader)" />
      <MemberSignature Language="F#" Value="static member ExecuteReaderAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync (command, connection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed. </param>
        <param name="connection"> The connection to execute against. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public static object ExecuteScalar (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ExecuteScalar(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteScalar (command As IRelationalCommand, connection As IRelationalConnection) As Object" />
      <MemberSignature Language="F#" Value="static member ExecuteScalar : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar (command, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed. </param>
        <param name="connection"> The connection to execute against. </param>
        <summary>
                Executes the command with a single scalar result.
            </summary>
        <returns> The result of the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand command, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExecuteScalarAsync (command As IRelationalCommand, connection As IRelationalConnection, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Object)" />
      <MemberSignature Language="F#" Value="static member ExecuteScalarAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync (command, connection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="command"> The command to be executed. </param>
        <param name="connection"> The connection to execute against. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
