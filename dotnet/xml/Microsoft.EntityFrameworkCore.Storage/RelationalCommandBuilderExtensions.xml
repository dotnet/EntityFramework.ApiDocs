<Type Name="RelationalCommandBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalCommandBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalCommandBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalCommandBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalCommandBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" /> class.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCompositeParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddCompositeParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, Action&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddCompositeParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCompositeParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, buildAction As Action(Of IRelationalParameterBuilder)) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddCompositeParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * Action&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter (commandBuilder, invariantName, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt;" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="buildAction">
                The action to add the multiple parameters that this placeholder represents.
            </param>
        <summary>
                Adds a parameter that is ultimately represented as multiple <see cref="T:System.Data.Common.DbParameter" />s in the
                final command.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompositeParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddCompositeParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; subParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddCompositeParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; subParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCompositeParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, subParameters As IReadOnlyList(Of IRelationalParameter)) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddCompositeParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter (commandBuilder, invariantName, subParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="subParameters" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="subParameters">The parameters to include in the composite.</param>
        <summary>
                Adds a parameter that is ultimately represented as multiple <see cref="T:System.Data.Common.DbParameter" />s in the
                final command.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter (commandBuilder, invariantName, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use overload which takes TypeMapping argument.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use overload which takes TypeMapping argument.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" />
        <Parameter Name="invariantName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        <summary>
                Adds a parameter.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, property As IProperty) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * string * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter (commandBuilder, invariantName, name, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use overload with relationalTypeMapping")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use overload with relationalTypeMapping")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        <param name="property">The property that the type for this parameter will come from.</param>
        <summary>
                Adds a parameter.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, typeMapping As RelationalTypeMapping, nullable As Boolean) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * string * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter (commandBuilder, invariantName, name, typeMapping, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        <param name="typeMapping">
                The type mapping for the property that values for this parameter will come from.
            </param>
        <param name="nullable">
                A value indicating whether the parameter can contain null values.
            </param>
        <summary>
                Adds a parameter.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping relationalTypeMapping, bool? nullable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping relationalTypeMapping, valuetype System.Nullable`1&lt;bool&gt; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, relationalTypeMapping As RelationalTypeMapping, nullable As Nullable(Of Boolean)) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * string * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter (commandBuilder, invariantName, name, relationalTypeMapping, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="relationalTypeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="nullable" Type="System.Nullable&lt;System.Boolean&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        <param name="relationalTypeMapping">The relational type mapping for this parameter.</param>
        <param name="nullable">A value indicating whether the parameter could contain a null value.</param>
        <summary>
                Adds a parameter.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping relationalTypeMapping, bool? nullable, System.Data.ParameterDirection direction = System.Data.ParameterDirection.Input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping relationalTypeMapping, valuetype System.Nullable`1&lt;bool&gt; nullable, valuetype System.Data.ParameterDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Nullable{System.Boolean},System.Data.ParameterDirection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, relationalTypeMapping As RelationalTypeMapping, nullable As Nullable(Of Boolean), Optional direction As ParameterDirection = System.Data.ParameterDirection.Input) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * string * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * Nullable&lt;bool&gt; * System.Data.ParameterDirection -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter (commandBuilder, invariantName, name, relationalTypeMapping, nullable, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="relationalTypeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="nullable" Type="System.Nullable&lt;System.Boolean&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        <param name="relationalTypeMapping">The relational type mapping for this parameter.</param>
        <param name="nullable">A value indicating whether the parameter could contain a null value.</param>
        <param name="direction">The parameter direction.</param>
        <summary>
                Adds a parameter.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddPropertyParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddPropertyParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, string name, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPropertyParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, name As String, property As IProperty) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddPropertyParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * string * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter (commandBuilder, invariantName, name, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use overload with relationalTypeMapping")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use overload with relationalTypeMapping")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        <param name="property">
                The property that values for this parameter will come from.
            </param>
        <summary>
                Adds a parameter.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRawParameter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddRawParameter (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, System.Data.Common.DbParameter dbParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AddRawParameter(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string invariantName, class System.Data.Common.DbParameter dbParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddRawParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Data.Common.DbParameter)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRawParameter (commandBuilder As IRelationalCommandBuilder, invariantName As String, dbParameter As DbParameter) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AddRawParameter : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * System.Data.Common.DbParameter -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddRawParameter (commandBuilder, invariantName, dbParameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="invariantName" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dbParameter" Type="System.Data.Common.DbParameter" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
        <param name="dbParameter">The DbParameter being added.</param>
        <summary>
                Adds a parameter.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Append (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Append(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Append (commandBuilder As IRelationalCommandBuilder, o As Object) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member Append : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * obj -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append (commandBuilder, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <param name="o"> The object to be written. </param>
        <summary>
                Appends an object to the command text.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AppendLine (commandBuilder As IRelationalCommandBuilder) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AppendLine : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine commandBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <summary>
                Appends a blank line to the command text.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AppendLine (commandBuilder As IRelationalCommandBuilder, value As String) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AppendLine : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine (commandBuilder, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="value">The object to be written.</param>
        <summary>
                Appends an object to the command text on a new line.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object o);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object o) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AppendLine (commandBuilder As IRelationalCommandBuilder, o As Object) As IRelationalCommandBuilder" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member AppendLine : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * obj -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine (commandBuilder, o)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object value);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLine(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object value) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AppendLine (commandBuilder As IRelationalCommandBuilder, value As Object) As IRelationalCommandBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member AppendLine : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * obj -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine (commandBuilder, value)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="o"> The object to be written. </param>
        <param name="commandBuilder"> The command builder. </param>
        <param name="value"> The object to be written. </param>
        <summary>
                Appends an object to the command text on a new line.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLines">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLines (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLines(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AppendLines (commandBuilder As IRelationalCommandBuilder, o As Object) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AppendLines : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * obj -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines (commandBuilder, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <param name="o"> The object to be written. </param>
        <summary>
                Appends an object, that contains multiple lines of text, to the command text.
                Each line read from the object is appended on a new line.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLines">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLines (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object value, bool skipFinalNewline = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLines(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, object value, bool skipFinalNewline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AppendLines (commandBuilder As IRelationalCommandBuilder, value As Object, Optional skipFinalNewline As Boolean = false) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AppendLines : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * obj * bool -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines (commandBuilder, value, skipFinalNewline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="skipFinalNewline" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <param name="value"> The object to be written. </param>
        <param name="skipFinalNewline"> If <code>true</code>, then the final newline character is skipped. </param>
        <summary>
                Appends an object, that contains multiple lines of text, to the command text.
                Each line read from the object is appended on a new line.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLines">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLines (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string value, bool skipFinalNewline = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder AppendLines(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder, string value, bool skipFinalNewline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AppendLines (commandBuilder As IRelationalCommandBuilder, value As String, Optional skipFinalNewline As Boolean = false) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member AppendLines : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines (commandBuilder, value, skipFinalNewline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="skipFinalNewline" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <param name="value">The object to be written.</param>
        <param name="skipFinalNewline">If <see langword="true" />, then the final newline character is skipped.</param>
        <summary>
                Appends an object, that contains multiple lines of text, to the command text.
                Each line read from the object is appended on a new line.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecrementIndent">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder DecrementIndent (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder DecrementIndent(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DecrementIndent (commandBuilder As IRelationalCommandBuilder) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member DecrementIndent : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent commandBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <summary>
                Decrements the indent of subsequent lines.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public static int GetLength (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLength(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLength (commandBuilder As IRelationalCommandBuilder) As Integer" />
      <MemberSignature Language="F#" Value="static member GetLength : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder -&gt; int" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength commandBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <summary>
                Gets the length of the command text.
            </summary>
        <returns> The length of the command text. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementIndent">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder IncrementIndent (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder IncrementIndent(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IncrementIndent (commandBuilder As IRelationalCommandBuilder) As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="static member IncrementIndent : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent commandBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilder"> The command builder. </param>
        <summary>
                Increments the indent of subsequent lines.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static IDisposable Indent (this Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Indent(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder commandBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Indent (commandBuilder As IRelationalCommandBuilder) As IDisposable" />
      <MemberSignature Language="F#" Value="static member Indent : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder -&gt; IDisposable" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent commandBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="commandBuilder">The command builder.</param>
        <summary>
                Increases the indent of the command text.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
