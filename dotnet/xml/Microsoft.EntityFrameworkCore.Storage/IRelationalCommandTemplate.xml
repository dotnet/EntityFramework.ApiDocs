<Type Name="IRelationalCommandTemplate" FullName="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate">
  <TypeSignature Language="C#" Value="public interface IRelationalCommandTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalCommandTemplate" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalCommandTemplate" />
  <TypeSignature Language="F#" Value="type IRelationalCommandTemplate = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRelationalCommandTemplate" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A command template to populate an <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" /> or create a <see cref="T:System.Data.Common.DbCommand" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the command text to be copied to the destination command.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand CreateDbCommand (Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, Guid commandId, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommand CreateDbCommand(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject parameterObject, valuetype System.Guid commandId, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate.CreateDbCommand(Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDbCommand (parameterObject As RelationalCommandParameterObject, commandId As Guid, commandMethod As DbCommandMethod) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CreateDbCommand : Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * Guid * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod -&gt; System.Data.Common.DbCommand" Usage="iRelationalCommandTemplate.CreateDbCommand (parameterObject, commandId, commandMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterObject" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
      </Parameters>
      <Docs>
        <param name="parameterObject">Parameters for this method.</param>
        <param name="commandId">The command correlation ID.</param>
        <param name="commandMethod">The method that will be called on the created command.</param>
        <summary>
          <para>
                    Called by the execute methods to create a <see cref="T:System.Data.Common.DbCommand" /> for the given <see cref="T:System.Data.Common.DbConnection" />
                    and configure timeouts and transactions.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The created command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the parameters to be copied to the destination command.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
