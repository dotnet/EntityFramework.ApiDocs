<Type Name="CoreTypeMapping+CoreTypeMappingParameters" FullName="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters">
  <TypeSignature Language="C#" Value="protected readonly struct CoreTypeMapping.CoreTypeMappingParameters" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class nested protected sequential ansi sealed beforefieldinit CoreTypeMapping/CoreTypeMappingParameters extends System.ValueType" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" />
  <TypeSignature Language="VB.NET" Value="Protected Structure CoreTypeMapping.CoreTypeMappingParameters" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="C#" Value="protected readonly struct CoreTypeMapping.CoreTypeMappingParameters : IEquatable&lt;Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters&gt;" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class nested protected sequential ansi sealed beforefieldinit CoreTypeMapping/CoreTypeMappingParameters extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters&gt;" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Protected Structure CoreTypeMapping.CoreTypeMappingParameters&#xA;Implements IEquatable(Of CoreTypeMapping.CoreTypeMappingParameters)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-7.0;efcore-8.0">
      <InterfaceName>System.IEquatable&lt;Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="efcore-3.0;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Parameter object for use in the <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" /> hierarchy.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoreTypeMappingParameters (Type clrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer = default, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory = default);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.#ctor(System.Type,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, Optional converter As ValueConverter = Nothing, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional valueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters : Type * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" Usage="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters (clrType, converter, comparer, keyComparer, valueGeneratorFactory)" />
      <MemberSignature Language="C#" Value="public CoreTypeMappingParameters (Type clrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? valueGeneratorFactory = default);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-5.0;efcore-6.0" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-5.0;efcore-6.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-5.0;efcore-6.0" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-5.0;efcore-6.0" />
        <Parameter Name="valueGeneratorFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="clrType">The .NET type used in the EF model.</param>
        <param name="converter">Converts types to and from the store whenever this mapping is used.</param>
        <param name="comparer">Supports custom value snapshotting and comparisons.</param>
        <param name="keyComparer">Supports custom comparisons between keys--e.g. PK to FK comparison.</param>
        <param name="valueGeneratorFactory">An optional factory for creating a specific <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" />.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" /> parameter object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoreTypeMappingParameters (Type clrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer structuralComparer, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory);" FrameworkAlternate="efcore-2.2;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer structuralComparer, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory) cil managed" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.#ctor(System.Type,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, converter As ValueConverter, comparer As ValueComparer, keyComparer As ValueComparer, structuralComparer As ValueComparer, valueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator))" FrameworkAlternate="efcore-2.2;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters : Type * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" Usage="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters (clrType, converter, comparer, keyComparer, structuralComparer, valueGeneratorFactory)" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public CoreTypeMappingParameters (Type clrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer structuralComparer = default, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, Optional converter As ValueConverter = Nothing, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional structuralComparer As ValueComparer = Nothing, Optional valueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator) = Nothing)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public CoreTypeMappingParameters (Type clrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? structuralComparer, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? valueGeneratorFactory);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public CoreTypeMappingParameters (Type clrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? providerValueComparer = default, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? valueGeneratorFactory = default);" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer providerValueComparer, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory) cil managed" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, Optional converter As ValueConverter = Nothing, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional providerValueComparer As ValueComparer = Nothing, Optional valueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator) = Nothing)" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters : Type * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" Usage="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters (clrType, converter, comparer, keyComparer, providerValueComparer, valueGeneratorFactory)" FrameworkAlternate="efcore-7.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use overload without 'structuralComparer'. Starting with EF Core 5.0, key comparers must implement structural comparisons and deep copies.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use overload without 'structuralComparer'. Starting with EF Core 5.0, key comparers must implement structural comparisons and deep copies.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-7.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="2" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="3" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="structuralComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="4" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="providerValueComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="4" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="valueGeneratorFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" Index="5" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="structuralComparer">Supports structural snapshotting needed for mutable reference types.</param>
        <param name="clrType">The .NET type used in the EF model.</param>
        <param name="converter">Converts types to and from the store whenever this mapping is used.</param>
        <param name="comparer">Supports custom value snapshotting and comparisons.</param>
        <param name="keyComparer">Supports custom comparisons between keys--e.g. PK to FK comparison.</param>
        <param name="providerValueComparer">Supports custom comparisons between converted provider values.</param>
        <param name="valueGeneratorFactory">An optional factory for creating a specific <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" />.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" /> parameter object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoreTypeMappingParameters (Type clrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? providerValueComparer = default, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.ITypeBase,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? valueGeneratorFactory = default, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? elementMapping = default, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer providerValueComparer, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.ITypeBase, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory, class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping elementMapping, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.#ctor(System.Type,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.ITypeBase,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator},Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, Optional converter As ValueConverter = Nothing, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional providerValueComparer As ValueComparer = Nothing, Optional valueGeneratorFactory As Func(Of IProperty, ITypeBase, ValueGenerator) = Nothing, Optional elementMapping As CoreTypeMapping = Nothing, Optional jsonValueReaderWriter As JsonValueReaderWriter = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters : Type * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.ITypeBase, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; * Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" Usage="new Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters (clrType, converter, comparer, keyComparer, providerValueComparer, valueGeneratorFactory, elementMapping, jsonValueReaderWriter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" Index="0" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="providerValueComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="4" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="valueGeneratorFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.ITypeBase,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" Index="5" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="elementMapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Index="6" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Index="7" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="clrType">The .NET type used in the EF model.</param>
        <param name="converter">Converts types to and from the store whenever this mapping is used.</param>
        <param name="comparer">Supports custom value snapshotting and comparisons.</param>
        <param name="keyComparer">Supports custom comparisons between keys--e.g. PK to FK comparison.</param>
        <param name="providerValueComparer">Supports custom comparisons between converted provider values.</param>
        <param name="valueGeneratorFactory">An optional factory for creating a specific <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" />.</param>
        <param name="elementMapping">
                If this type mapping represents a primitive collection, this holds the element's type mapping.
            </param>
        <param name="jsonValueReaderWriter">Handles reading and writing JSON values for instances of the mapped type.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" /> parameter object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public Type ClrType { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrType As Type" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ClrType" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public Type ClrType { get; init; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property ClrType As Type" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ClrType" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The mapping CLR type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer Comparer { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer Comparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As ValueComparer" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.Comparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Comparer" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? Comparer { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? Comparer { get; init; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Comparer As ValueComparer" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Comparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Comparer" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The mapping comparer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter Converter { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Converter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Converter As ValueConverter" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.Converter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Converter" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? Converter { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? Converter { get; init; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As ValueConverter" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Converter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Converter" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The mapping converter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementTypeMapping">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? ElementTypeMapping { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping ElementTypeMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ElementTypeMapping" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementTypeMapping As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="member this.ElementTypeMapping : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ElementTypeMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                If this type mapping represents a primitive collection, this holds the element's type mapping.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Equals(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CoreTypeMapping.CoreTypeMappingParameters) As Boolean" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonValueReaderWriter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? JsonValueReaderWriter { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter JsonValueReaderWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.JsonValueReaderWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property JsonValueReaderWriter As JsonValueReaderWriter" />
      <MemberSignature Language="F#" Value="member this.JsonValueReaderWriter : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.JsonValueReaderWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Handles reading and writing JSON values for instances of the mapped type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyComparer">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer KeyComparer { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer KeyComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.KeyComparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyComparer As ValueComparer" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.KeyComparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.KeyComparer" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? KeyComparer { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? KeyComparer { get; init; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyComparer As ValueComparer" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.KeyComparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.KeyComparer" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The mapping key comparer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters left, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters left, valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.op_Equality(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CoreTypeMapping.CoreTypeMappingParameters, right As CoreTypeMapping.CoreTypeMappingParameters) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters left, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters left, valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.op_Inequality(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CoreTypeMapping.CoreTypeMappingParameters, right As CoreTypeMapping.CoreTypeMappingParameters) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderValueComparer">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? ProviderValueComparer { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer ProviderValueComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ProviderValueComparer" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderValueComparer As ValueComparer" />
      <MemberSignature Language="F#" Value="member this.ProviderValueComparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ProviderValueComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The provider comparer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StructuralComparer">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer StructuralComparer { get; }" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer StructuralComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.StructuralComparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StructuralComparer As ValueComparer" />
      <MemberSignature Language="F#" Value="member this.StructuralComparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.StructuralComparer" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? StructuralComparer { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use KeyComparer. Starting with EF Core 5.0, key comparers must implement structural comparisons and deep copies.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use KeyComparer. Starting with EF Core 5.0, key comparers must implement structural comparisons and deep copies.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The mapping structural comparer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGeneratorFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; ValueGeneratorFactory { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; ValueGeneratorFactory" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ValueGeneratorFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator)" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.ValueGeneratorFactory : Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ValueGeneratorFactory" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? ValueGeneratorFactory { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.ITypeBase,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? ValueGeneratorFactory { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.ITypeBase, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; ValueGeneratorFactory" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueGeneratorFactory As Func(Of IProperty, ITypeBase, ValueGenerator)" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ValueGeneratorFactory : Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.ITypeBase, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.ValueGeneratorFactory" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0">System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-8.0">System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.ITypeBase,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An optional factory for creating a specific <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> to use with
                this mapping.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithComposedConverter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters WithComposedConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters WithComposedConverter(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.WithComposedConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithComposedConverter (converter As ValueConverter) As CoreTypeMapping.CoreTypeMappingParameters" />
      <MemberSignature Language="F#" Value="member this.WithComposedConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" Usage="coreTypeMappingParameters.WithComposedConverter converter" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters WithComposedConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="converter">The converter.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" /> parameter object with the given
                converter composed with any existing converter and set on the new parameter object.
            </summary>
        <returns>The new parameter object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithComposedConverter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters WithComposedConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? elementMapping, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters WithComposedConverter(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping elementMapping, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters.WithComposedConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithComposedConverter (converter As ValueConverter, comparer As ValueComparer, keyComparer As ValueComparer, elementMapping As CoreTypeMapping, jsonValueReaderWriter As JsonValueReaderWriter) As CoreTypeMapping.CoreTypeMappingParameters" />
      <MemberSignature Language="F#" Value="member this.WithComposedConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" Usage="coreTypeMappingParameters.WithComposedConverter (converter, comparer, keyComparer, elementMapping, jsonValueReaderWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="elementMapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="converter">The converter.</param>
        <param name="comparer">The comparer.</param>
        <param name="keyComparer">The key comparer.</param>
        <param name="elementMapping">The element mapping, or <see langword="null" /> for non-collection mappings.</param>
        <param name="jsonValueReaderWriter">The JSON reader/writer, or <see langword="null" /> to leave unchanged.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters" /> parameter object with the given
                converter composed with any existing converter and set on the new parameter object.
            </summary>
        <returns>The new parameter object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
