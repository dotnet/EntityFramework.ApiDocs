<Type Name="SimpleRowKeyValueFactory&lt;TKey&gt;" FullName="Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public class SimpleRowKeyValueFactory&lt;TKey&gt; : Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleRowKeyValueFactory`1&lt;TKey&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory, class Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1&lt;!TKey&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SimpleRowKeyValueFactory(Of TKey)&#xA;Implements IRowKeyValueFactory(Of TKey)" />
  <TypeSignature Language="F#" Value="type SimpleRowKeyValueFactory&lt;'Key&gt; = class&#xA;    interface IRowKeyValueFactory&lt;'Key&gt;&#xA;    interface IRowKeyValueFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory&lt;TKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleRowKeyValueFactory (Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (constraint As IUniqueConstraint)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory&lt;'Key&gt; : Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint -&gt; Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory&lt;'Key&gt;" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory&lt;'Key&gt; constraint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constraint" Type="Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEquatableKeyValue">
      <MemberSignature Language="C#" Value="public virtual object CreateEquatableKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateEquatableKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1.CreateEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEquatableKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj&#xA;override this.CreateEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj" Usage="simpleRowKeyValueFactory.CreateEquatableKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public virtual TKey CreateKeyValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TKey CreateKeyValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1.CreateKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyValue (keyValues As IDictionary(Of String, Object)) As TKey" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; 'Key&#xA;override this.CreateKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; 'Key" Usage="simpleRowKeyValueFactory.CreateKeyValue keyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public virtual TKey CreateKeyValue (object?[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TKey CreateKeyValue(object[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1.CreateKeyValue(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyValue (keyValues As Object()) As TKey" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : obj[] -&gt; 'Key&#xA;override this.CreateKeyValue : obj[] -&gt; 'Key" Usage="simpleRowKeyValueFactory.CreateKeyValue keyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public virtual TKey CreateKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TKey CreateKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1.CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As TKey" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; 'Key&#xA;override this.CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; 'Key" Usage="simpleRowKeyValueFactory.CreateKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEqualityComparer&lt;TKey&gt; EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EqualityComparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory&lt;'Key&gt;.EqualityComparer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.EqualityComparer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue">
      <MemberSignature Language="C#" Value="object[] IRowKeyValueFactory.CreateKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleRowKeyValueFactory`1.Microsoft#EntityFrameworkCore#Update#Internal#IRowKeyValueFactory#CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CreateKeyValue (command As IReadOnlyModificationCommand, fromOriginalValues As Boolean) As Object() Implements IRowKeyValueFactory.CreateKeyValue" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]&#xA;override this.Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]" Usage="simpleRowKeyValueFactory.Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
