<Type Name="ModificationCommandIdentityMap" FullName="Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap">
  <TypeSignature Language="C#" Value="public class ModificationCommandIdentityMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModificationCommandIdentityMap extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap" />
  <TypeSignature Language="VB.NET" Value="Public Class ModificationCommandIdentityMap" />
  <TypeSignature Language="F#" Value="type ModificationCommandIdentityMap = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModificationCommandIdentityMap (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; principals, System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; dependents, string name, string schema, Func&lt;string&gt; generateParameterName, bool sensitiveLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; principals, class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; dependents, string name, string schema, class System.Func`1&lt;string&gt; generateParameterName, bool sensitiveLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.Collections.Generic.IReadOnlyDictionary{Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType}},System.Collections.Generic.IReadOnlyDictionary{Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType}},System.String,System.String,System.Func{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, principals As IReadOnlyDictionary(Of IEntityType, IReadOnlyList(Of IEntityType)), dependents As IReadOnlyDictionary(Of IEntityType, IReadOnlyList(Of IEntityType)), name As String, schema As String, generateParameterName As Func(Of String), sensitiveLoggingEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; * string * string * Func&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap (stateManager, principals, dependents, name, schema, generateParameterName, sensitiveLoggingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="principals" Type="System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt;" />
        <Parameter Name="dependents" Type="System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="generateParameterName" Type="System.Func&lt;System.String&gt;" />
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="principals">To be added.</param>
        <param name="dependents">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="generateParameterName">To be added.</param>
        <param name="sensitiveLoggingEnabled">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddCommand">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ModificationCommand GetOrAddCommand (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.ModificationCommand GetOrAddCommand(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap.GetOrAddCommand(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrAddCommand (entry As IUpdateEntry) As ModificationCommand" />
      <MemberSignature Language="F#" Value="abstract member GetOrAddCommand : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Microsoft.EntityFrameworkCore.Update.ModificationCommand&#xA;override this.GetOrAddCommand : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Microsoft.EntityFrameworkCore.Update.ModificationCommand" Usage="modificationCommandIdentityMap.GetOrAddCommand entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ModificationCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (bool sensitiveLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(bool sensitiveLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandIdentityMap.Validate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (sensitiveLoggingEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Validate : bool -&gt; unit&#xA;override this.Validate : bool -&gt; unit" Usage="modificationCommandIdentityMap.Validate sensitiveLoggingEnabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sensitiveLoggingEnabled">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
