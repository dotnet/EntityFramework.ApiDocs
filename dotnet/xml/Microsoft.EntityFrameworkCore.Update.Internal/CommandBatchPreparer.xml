<Type Name="CommandBatchPreparer" FullName="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer">
  <TypeSignature Language="C#" Value="public class CommandBatchPreparer : Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandBatchPreparer extends System.Object implements class Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandBatchPreparer&#xA;Implements ICommandBatchPreparer" />
  <TypeSignature Language="F#" Value="type CommandBatchPreparer = class&#xA;    interface ICommandBatchPreparer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparer (Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As CommandBatchPreparerDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer : Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparer (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider annotations, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactoryFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider annotations, class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactoryFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of ModificationCommand), annotations As IRelationalAnnotationProvider, keyValueIndexFactoryFactory As IKeyValueIndexFactorySource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer (modificationCommandBatchFactory, parameterNameGeneratorFactory, modificationCommandComparer, annotations, keyValueIndexFactoryFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="annotations" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="keyValueIndexFactoryFactory" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="modificationCommandComparer">To be added.</param>
        <param name="annotations">To be added.</param>
        <param name="keyValueIndexFactoryFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparer (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of ModificationCommand), keyValueIndexFactorySource As IKeyValueIndexFactorySource, currentContext As ICurrentDbContext, loggingOptions As ILoggingOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; * Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource * Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer (modificationCommandBatchFactory, parameterNameGeneratorFactory, modificationCommandComparer, keyValueIndexFactorySource, currentContext, loggingOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="keyValueIndexFactorySource" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Index="3" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="currentContext" Type="Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" Index="4" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="5" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="modificationCommandComparer">To be added.</param>
        <param name="keyValueIndexFactorySource">To be added.</param>
        <param name="currentContext">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommands">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function BatchCommands (entries As IReadOnlyList(Of IUpdateEntry)) As IEnumerable(Of ModificationCommandBatch)" />
      <MemberSignature Language="F#" Value="abstract member BatchCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;&#xA;override this.BatchCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;" Usage="commandBatchPreparer.BatchCommands entries" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-1.0;efcore-1.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__6))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__6))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-2.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__8))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__8))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__14))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__14))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommands">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands (System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands(class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.Update.IUpdateAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function BatchCommands (entries As IList(Of IUpdateEntry), updateAdapter As IUpdateAdapter) As IEnumerable(Of ModificationCommandBatch)" />
      <MemberSignature Language="F#" Value="abstract member BatchCommands : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateAdapter -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;&#xA;override this.BatchCommands : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateAdapter -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;" Usage="commandBatchPreparer.BatchCommands (entries, updateAdapter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.Update.IUpdateAdapter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__11))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__11))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__10))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__10))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__7))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__7))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__8))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;BatchCommands&gt;d__8))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="updateAdapter" Type="Microsoft.EntityFrameworkCore.Update.IUpdateAdapter" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <param name="updateAdapter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandBatches">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; CreateCommandBatches (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commandSet, bool moreCommandSets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; CreateCommandBatches(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commandSet, bool moreCommandSets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateCommandBatches(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCommandBatches (commandSet As IEnumerable(Of IReadOnlyModificationCommand), moreCommandSets As Boolean) As IEnumerable(Of ModificationCommandBatch)" />
      <MemberSignature Language="F#" Value="abstract member CreateCommandBatches : seq&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;&#xA;override this.CreateCommandBatches : seq&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;" Usage="commandBatchPreparer.CreateCommandBatches (commandSet, moreCommandSets)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.CreateCommandBatches(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandSet" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="moreCommandSets" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandSet">To be added.</param>
        <param name="moreCommandSets">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModificationCommands">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; CreateModificationCommands (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Func&lt;string&gt; generateParameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; CreateModificationCommands(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class System.Func`1&lt;string&gt; generateParameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function CreateModificationCommands (entries As IReadOnlyList(Of IUpdateEntry), generateParameterName As Func(Of String)) As IEnumerable(Of ModificationCommand)" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&#xA;override this.CreateModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="commandBatchPreparer.CreateModificationCommands (entries, generateParameterName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateModificationCommands (entries As IReadOnlyList(Of IUpdateEntry), generateParameterName As Func(Of String)) As IEnumerable(Of ModificationCommand)" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-1.0;efcore-1.1">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;CreateModificationCommands&gt;d__7))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer+&lt;CreateModificationCommands&gt;d__7))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="generateParameterName" Type="System.Func&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <param name="generateParameterName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModificationCommands">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; CreateModificationCommands (System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter, Func&lt;string&gt; generateParameterName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; CreateModificationCommands(class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter, class System.Func`1&lt;string&gt; generateParameterName) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.Update.IUpdateAdapter,System.Func{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateModificationCommands (entries As IList(Of IUpdateEntry), updateAdapter As IUpdateAdapter, generateParameterName As Func(Of String)) As IEnumerable(Of ModificationCommand)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member CreateModificationCommands : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateAdapter * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&#xA;override this.CreateModificationCommands : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateAdapter * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="commandBatchPreparer.CreateModificationCommands (entries, updateAdapter, generateParameterName)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; CreateModificationCommands (System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter, Func&lt;string&gt; generateParameterName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; CreateModificationCommands(class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter, class System.Func`1&lt;string&gt; generateParameterName) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateModificationCommands (entries As IList(Of IUpdateEntry), updateAdapter As IUpdateAdapter, generateParameterName As Func(Of String)) As IEnumerable(Of IReadOnlyModificationCommand)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member CreateModificationCommands : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateAdapter * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&#xA;override this.CreateModificationCommands : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateAdapter * Func&lt;string&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Usage="commandBatchPreparer.CreateModificationCommands (entries, updateAdapter, generateParameterName)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="updateAdapter" Type="Microsoft.EntityFrameworkCore.Update.IUpdateAdapter" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="generateParameterName" Type="System.Func&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <param name="updateAdapter">To be added.</param>
        <param name="generateParameterName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopologicalSort">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&gt; TopologicalSort (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commands);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&gt; TopologicalSort(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commands) cil managed" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TopologicalSort (commands As IEnumerable(Of IReadOnlyModificationCommand)) As IReadOnlyList(Of List(Of IReadOnlyModificationCommand))" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member TopologicalSort : seq&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&gt;&#xA;override this.TopologicalSort : seq&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&gt;" Usage="commandBatchPreparer.TopologicalSort commands" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&gt; TopologicalSort (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commands);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&gt; TopologicalSort(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commands) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TopologicalSort (commands As IEnumerable(Of IReadOnlyModificationCommand)) As IReadOnlyList(Of List(Of IReadOnlyModificationCommand))" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commands" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commands">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopologicalSort">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt; TopologicalSort (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; commands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt; TopologicalSort(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; commands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TopologicalSort (commands As IEnumerable(Of ModificationCommand)) As IReadOnlyList(Of List(Of ModificationCommand))" />
      <MemberSignature Language="F#" Value="abstract member TopologicalSort : seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt;&#xA;override this.TopologicalSort : seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt;" Usage="commandBatchPreparer.TopologicalSort commands" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commands" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commands">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
