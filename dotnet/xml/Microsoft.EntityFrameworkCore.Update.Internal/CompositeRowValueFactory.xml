<Type Name="CompositeRowValueFactory" FullName="Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory">
  <TypeSignature Language="C#" Value="public abstract class CompositeRowValueFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositeRowValueFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositeRowValueFactory" />
  <TypeSignature Language="F#" Value="type CompositeRowValueFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CompositeRowValueFactory (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; columns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IColumn})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (columns As IReadOnlyList(Of IColumn))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory columns" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columns" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt;" />
      </Parameters>
      <Docs>
        <param name="columns">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.Columns" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Columns As IReadOnlyList(Of IColumn)" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEqualityComparer">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IEqualityComparer&lt;object?[]&gt; CreateEqualityComparer (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; columns, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter?&gt;? valueConverters);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.IEqualityComparer`1&lt;object[]&gt; CreateEqualityComparer(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; columns, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&gt; valueConverters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.CreateEqualityComparer(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IColumn},System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter})" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateEqualityComparer (columns As IReadOnlyList(Of IColumn), valueConverters As List(Of ValueConverter)) As IEqualityComparer(Of Object())" />
      <MemberSignature Language="F#" Value="static member CreateEqualityComparer : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&gt; -&gt; System.Collections.Generic.IEqualityComparer&lt;obj[]&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.CreateEqualityComparer (columns, valueConverters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt;" />
        <Parameter Name="valueConverters" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="columns">To be added.</param>
        <param name="valueConverters">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEqualityComparer&lt;object?[]&gt; EqualityComparer { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;object[]&gt; EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EqualityComparer As IEqualityComparer(Of Object())" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.Generic.IEqualityComparer&lt;obj[]&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateDependentKeyValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyValues, out object?[]? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateDependentKeyValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyValues, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.TryCreateDependentKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateDependentKeyValue (keyValues As IDictionary(Of String, Object), ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Object[] -&gt; bool&#xA;override this.TryCreateDependentKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Object[] -&gt; bool" Usage="compositeRowValueFactory.TryCreateDependentKeyValue (keyValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="key" Type="System.Object[]" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateDependentKeyValue (object?[] keyValues, out object?[]? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateDependentKeyValue(object[] keyValues, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.TryCreateDependentKeyValue(System.Object[],System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateDependentKeyValue (keyValues As Object(), ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : obj[] * Object[] -&gt; bool&#xA;override this.TryCreateDependentKeyValue : obj[] * Object[] -&gt; bool" Usage="compositeRowValueFactory.TryCreateDependentKeyValue (keyValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
        <Parameter Name="key" Type="System.Object[]" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateDependentKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, out object?[]? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateDependentKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.TryCreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean,System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateDependentKeyValue (command As IReadOnlyModificationCommand, fromOriginalValues As Boolean, ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool * Object[] -&gt; bool&#xA;override this.TryCreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool * Object[] -&gt; bool" Usage="compositeRowValueFactory.TryCreateDependentKeyValue (command, fromOriginalValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
        <Parameter Name="key" Type="System.Object[]" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="protected virtual bool TryCreateDependentKeyValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyValues, out object?[]? key, out bool hasNullValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryCreateDependentKeyValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyValues, [out] object[]&amp; key, [out] bool&amp; hasNullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.TryCreateDependentKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object[]@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryCreateDependentKeyValue (keyValues As IDictionary(Of String, Object), ByRef key As Object(), ByRef hasNullValue As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Object[] * bool -&gt; bool&#xA;override this.TryCreateDependentKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Object[] * bool -&gt; bool" Usage="compositeRowValueFactory.TryCreateDependentKeyValue (keyValues, key, hasNullValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="key" Type="System.Object[]" RefType="out" Index="1" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="hasNullValue" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <param name="hasNullValue">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="protected virtual bool TryCreateDependentKeyValue (object?[] keyValues, out object?[]? key, out bool hasNullValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryCreateDependentKeyValue(object[] keyValues, [out] object[]&amp; key, [out] bool&amp; hasNullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.TryCreateDependentKeyValue(System.Object[],System.Object[]@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryCreateDependentKeyValue (keyValues As Object(), ByRef key As Object(), ByRef hasNullValue As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : obj[] * Object[] * bool -&gt; bool&#xA;override this.TryCreateDependentKeyValue : obj[] * Object[] * bool -&gt; bool" Usage="compositeRowValueFactory.TryCreateDependentKeyValue (keyValues, key, hasNullValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="key" Type="System.Object[]" RefType="out" Index="1" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="hasNullValue" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <param name="hasNullValue">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="protected virtual bool TryCreateDependentKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, out object?[]? key, out bool hasNullValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryCreateDependentKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, [out] object[]&amp; key, [out] bool&amp; hasNullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.TryCreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean,System.Object[]@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryCreateDependentKeyValue (command As IReadOnlyModificationCommand, fromOriginalValues As Boolean, ByRef key As Object(), ByRef hasNullValue As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool * Object[] * bool -&gt; bool&#xA;override this.TryCreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool * Object[] * bool -&gt; bool" Usage="compositeRowValueFactory.TryCreateDependentKeyValue (command, fromOriginalValues, key, hasNullValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="key" Type="System.Object[]" RefType="out" Index="2" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="hasNullValue" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <param name="key">To be added.</param>
        <param name="hasNullValue">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueConverters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter?&gt;? ValueConverters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&gt; ValueConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.ValueConverters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property ValueConverters As List(Of ValueConverter)" />
      <MemberSignature Language="F#" Value="member this.ValueConverters : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory.ValueConverters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
