<Type Name="SimpleNullablePrincipalRowForeignKeyValueFactory&lt;TKey,TForeignKey&gt;" FullName="Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory&lt;TKey,TForeignKey&gt;">
  <TypeSignature Language="C#" Value="public class SimpleNullablePrincipalRowForeignKeyValueFactory&lt;TKey,TForeignKey&gt; : Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;TKey,TForeignKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleNullablePrincipalRowForeignKeyValueFactory`2&lt;TKey, TForeignKey&gt; extends Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2&lt;!TKey, !TForeignKey&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SimpleNullablePrincipalRowForeignKeyValueFactory(Of TKey, TForeignKey)&#xA;Inherits RowForeignKeyValueFactory(Of TKey, TForeignKey)" />
  <TypeSignature Language="F#" Value="type SimpleNullablePrincipalRowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt; = class&#xA;    inherit RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TForeignKey" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;TKey,TForeignKey&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TKey">TKey</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TForeignKey">TForeignKey</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <typeparam name="TForeignKey">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleNullablePrincipalRowForeignKeyValueFactory (Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey, Microsoft.EntityFrameworkCore.Metadata.IColumn column, Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors columnAccessors, Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector valueConverterSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IColumn column, class Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors columnAccessors, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector valueConverterSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint,Microsoft.EntityFrameworkCore.Metadata.IColumn,Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors,Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (foreignKey As IForeignKeyConstraint, column As IColumn, columnAccessors As ColumnAccessors, valueConverterSelector As IValueConverterSelector)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt; : Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint * Microsoft.EntityFrameworkCore.Metadata.IColumn * Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors * Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector -&gt; Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt;" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt; (foreignKey, column, columnAccessors, valueConverterSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint" />
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" />
        <Parameter Name="columnAccessors" Type="Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors" />
        <Parameter Name="valueConverterSelector" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="column">To be added.</param>
        <param name="columnAccessors">To be added.</param>
        <param name="valueConverterSelector">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEqualityComparer&lt;TKey&gt; EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory`2.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EqualityComparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt;.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public override bool TryCreateDependentKeyValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyPropertyValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryCreateDependentKeyValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyPropertyValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory`2.TryCreateDependentKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object},`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryCreateDependentKeyValue (keyPropertyValues As IDictionary(Of String, Object), ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TryCreateDependentKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; * 'Key -&gt; bool" Usage="simpleNullablePrincipalRowForeignKeyValueFactory.TryCreateDependentKeyValue (keyPropertyValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyPropertyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyPropertyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public override bool TryCreateDependentKeyValue (object?[] keyValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryCreateDependentKeyValue(object[] keyValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory`2.TryCreateDependentKeyValue(System.Object[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryCreateDependentKeyValue (keyValues As Object(), ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TryCreateDependentKeyValue : obj[] * 'Key -&gt; bool" Usage="simpleNullablePrincipalRowForeignKeyValueFactory.TryCreateDependentKeyValue (keyValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public override bool TryCreateDependentKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryCreateDependentKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SimpleNullablePrincipalRowForeignKeyValueFactory`2.TryCreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryCreateDependentKeyValue (command As IReadOnlyModificationCommand, fromOriginalValues As Boolean, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TryCreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool * 'Key -&gt; bool" Usage="simpleNullablePrincipalRowForeignKeyValueFactory.TryCreateDependentKeyValue (command, fromOriginalValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
