<Type Name="IRowIndexValueFactoryFactory" FullName="Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactoryFactory">
  <TypeSignature Language="C#" Value="public interface IRowIndexValueFactoryFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRowIndexValueFactoryFactory" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactoryFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRowIndexValueFactoryFactory" />
  <TypeSignature Language="F#" Value="type IRowIndexValueFactoryFactory = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRowIndexValueFactoryFactory" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory Create (Microsoft.EntityFrameworkCore.Metadata.ITableIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory Create(class Microsoft.EntityFrameworkCore.Metadata.ITableIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.ITableIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (index As ITableIndex) As IRowIndexValueFactory" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.ITableIndex -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory" Usage="iRowIndexValueFactoryFactory.Create index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.ITableIndex" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
