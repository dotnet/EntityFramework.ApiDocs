<Type Name="IKeyValueIndexFactory" FullName="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory">
  <TypeSignature Language="C#" Value="public interface IKeyValueIndexFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyValueIndexFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyValueIndexFactory" />
  <TypeSignature Language="F#" Value="type IKeyValueIndexFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValue (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValue(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDependentKeyValue (entry As InternalEntityEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreateDependentKeyValue : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreateDependentKeyValue (entry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDependentKeyValue (entry As IUpdateEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreateDependentKeyValue (entry, foreignKey)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex? CreateDependentKeyValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDependentKeyValueFromOriginalValues">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValueFromOriginalValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValueFromOriginalValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDependentKeyValueFromOriginalValues (entry As InternalEntityEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreateDependentKeyValueFromOriginalValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreateDependentKeyValueFromOriginalValues (entry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDependentKeyValueFromOriginalValues">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValueFromOriginalValues (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreateDependentKeyValueFromOriginalValues(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDependentKeyValueFromOriginalValues (entry As IUpdateEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreateDependentKeyValueFromOriginalValues : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreateDependentKeyValueFromOriginalValues (entry, foreignKey)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex? CreateDependentKeyValueFromOriginalValues (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrincipalKeyValue">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValue (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValue(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePrincipalKeyValue (entry As InternalEntityEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreatePrincipalKeyValue : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreatePrincipalKeyValue (entry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrincipalKeyValue">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePrincipalKeyValue (entry As IUpdateEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreatePrincipalKeyValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreatePrincipalKeyValue (entry, foreignKey)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey? foreignKey);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrincipalKeyValueFromOriginalValues">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValueFromOriginalValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValueFromOriginalValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePrincipalKeyValueFromOriginalValues (entry As InternalEntityEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreatePrincipalKeyValueFromOriginalValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreatePrincipalKeyValueFromOriginalValues (entry, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrincipalKeyValueFromOriginalValues">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValueFromOriginalValues (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValueFromOriginalValues(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePrincipalKeyValueFromOriginalValues (entry As IUpdateEntry, foreignKey As IForeignKey) As IKeyValueIndex" />
      <MemberSignature Language="F#" Value="abstract member CreatePrincipalKeyValueFromOriginalValues : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex" Usage="iKeyValueIndexFactory.CreatePrincipalKeyValueFromOriginalValues (entry, foreignKey)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex CreatePrincipalKeyValueFromOriginalValues (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey? foreignKey);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
