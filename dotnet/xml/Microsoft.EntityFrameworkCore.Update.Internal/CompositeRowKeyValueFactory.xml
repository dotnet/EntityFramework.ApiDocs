<Type Name="CompositeRowKeyValueFactory" FullName="Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory">
  <TypeSignature Language="C#" Value="public class CompositeRowKeyValueFactory : Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory, Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory&lt;object[]&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeRowKeyValueFactory extends Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory implements class Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory, class Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1&lt;object[]&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeRowKeyValueFactory&#xA;Inherits CompositeRowValueFactory&#xA;Implements IRowKeyValueFactory(Of Object())" />
  <TypeSignature Language="F#" Value="type CompositeRowKeyValueFactory = class&#xA;    inherit CompositeRowValueFactory&#xA;    interface IRowKeyValueFactory&lt;obj[]&gt;&#xA;    interface IRowKeyValueFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowValueFactory</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory&lt;System.Object[]&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeRowKeyValueFactory (Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As IUniqueConstraint)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory : Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEquatableKeyValue">
      <MemberSignature Language="C#" Value="public virtual object CreateEquatableKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateEquatableKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory.CreateEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEquatableKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj&#xA;override this.CreateEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj" Usage="compositeRowKeyValueFactory.CreateEquatableKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public virtual object?[] CreateKeyValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] CreateKeyValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory.CreateKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyValue (keyValues As IDictionary(Of String, Object)) As Object()" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; obj[]&#xA;override this.CreateKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; obj[]" Usage="compositeRowKeyValueFactory.CreateKeyValue keyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public virtual object?[] CreateKeyValue (object?[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] CreateKeyValue(object[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory.CreateKeyValue(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyValue (keyValues As Object()) As Object()" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : obj[] -&gt; obj[]&#xA;override this.CreateKeyValue : obj[] -&gt; obj[]" Usage="compositeRowKeyValueFactory.CreateKeyValue keyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public virtual object?[] CreateKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] CreateKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory.CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object()" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]&#xA;override this.CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]" Usage="compositeRowKeyValueFactory.CreateKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue">
      <MemberSignature Language="C#" Value="object[] IRowKeyValueFactory.CreateKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CompositeRowKeyValueFactory.Microsoft#EntityFrameworkCore#Update#Internal#IRowKeyValueFactory#CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CreateKeyValue (command As IReadOnlyModificationCommand, fromOriginalValues As Boolean) As Object() Implements IRowKeyValueFactory.CreateKeyValue" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]&#xA;override this.Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]" Usage="compositeRowKeyValueFactory.Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory.CreateKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
