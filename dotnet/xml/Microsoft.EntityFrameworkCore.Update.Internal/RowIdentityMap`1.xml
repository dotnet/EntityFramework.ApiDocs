<Type Name="RowIdentityMap&lt;TKey&gt;" FullName="Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public class RowIdentityMap&lt;TKey&gt; : Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RowIdentityMap`1&lt;TKey&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1" />
  <TypeSignature Language="VB.NET" Value="Public Class RowIdentityMap(Of TKey)&#xA;Implements IRowIdentityMap" />
  <TypeSignature Language="F#" Value="type RowIdentityMap&lt;'Key&gt; = class&#xA;    interface IRowIdentityMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RowIdentityMap (Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As IUniqueConstraint)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap&lt;'Key&gt; : Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint -&gt; Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap&lt;'Key&gt;" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap&lt;'Key&gt; key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object?[] keyValues, Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object[] keyValues, class Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1.Add(System.Object[],Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (keyValues As Object(), command As INonTrackedModificationCommand)" />
      <MemberSignature Language="F#" Value="abstract member Add : obj[] * Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand -&gt; unit&#xA;override this.Add : obj[] * Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand -&gt; unit" Usage="rowIdentityMap.Add (keyValues, command)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap.Add(System.Object[],Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="command">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="protected virtual void Add (TKey key, Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Add(!TKey key, class Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1.Add(`0,Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Add (key As TKey, command As INonTrackedModificationCommand)" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Key * Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand -&gt; unit&#xA;override this.Add : 'Key * Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand -&gt; unit" Usage="rowIdentityMap.Add (key, command)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="command">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="rowIdentityMap.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand? FindCommand (object?[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand FindCommand(object[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1.FindCommand(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindCommand (keyValues As Object()) As INonTrackedModificationCommand" />
      <MemberSignature Language="F#" Value="abstract member FindCommand : obj[] -&gt; Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand&#xA;override this.FindCommand : obj[] -&gt; Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand" Usage="rowIdentityMap.FindCommand keyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap.FindCommand(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1.Remove(Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (command As INonTrackedModificationCommand)" />
      <MemberSignature Language="F#" Value="abstract member Remove : Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand -&gt; unit&#xA;override this.Remove : Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand -&gt; unit" Usage="rowIdentityMap.Remove command" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap.Remove(Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand&gt; Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand&gt; Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap`1.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Rows As IEnumerable(Of INonTrackedModificationCommand)" />
      <MemberSignature Language="F#" Value="member this.Rows : seq&lt;Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.RowIdentityMap&lt;'Key&gt;.Rows" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.Internal.IRowIdentityMap.Rows</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.INonTrackedModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
