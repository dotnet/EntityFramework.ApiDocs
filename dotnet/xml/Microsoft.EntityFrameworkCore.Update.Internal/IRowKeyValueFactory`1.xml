<Type Name="IRowKeyValueFactory&lt;TKey&gt;" FullName="Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public interface IRowKeyValueFactory&lt;TKey&gt; : Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRowKeyValueFactory`1&lt;TKey&gt; implements class Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRowKeyValueFactory(Of TKey)&#xA;Implements IRowKeyValueFactory" />
  <TypeSignature Language="F#" Value="type IRowKeyValueFactory&lt;'Key&gt; = interface&#xA;    interface IRowKeyValueFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRowKeyValueFactory`1&lt;TKey&gt; implements class Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public TKey CreateKeyValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TKey CreateKeyValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateKeyValue (keyValues As IDictionary(Of String, Object)) As TKey" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; 'Key" Usage="iRowKeyValueFactory.CreateKeyValue keyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public TKey CreateKeyValue (object?[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TKey CreateKeyValue(object[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateKeyValue (keyValues As Object()) As TKey" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : obj[] -&gt; 'Key" Usage="iRowKeyValueFactory.CreateKeyValue keyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyValue">
      <MemberSignature Language="C#" Value="public TKey CreateKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TKey CreateKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.CreateKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As TKey" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; 'Key" Usage="iRowKeyValueFactory.CreateKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory`1.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EqualityComparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.IRowKeyValueFactory&lt;'Key&gt;.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
