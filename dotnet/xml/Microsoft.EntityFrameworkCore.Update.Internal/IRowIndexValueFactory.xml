<Type Name="IRowIndexValueFactory" FullName="Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory">
  <TypeSignature Language="C#" Value="public interface IRowIndexValueFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRowIndexValueFactory" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRowIndexValueFactory" />
  <TypeSignature Language="F#" Value="type IRowIndexValueFactory = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRowIndexValueFactory" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEquatableIndexValue">
      <MemberSignature Language="C#" Value="public object? CreateEquatableIndexValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateEquatableIndexValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory.CreateEquatableIndexValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEquatableIndexValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="F#" Value="abstract member CreateEquatableIndexValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj" Usage="iRowIndexValueFactory.CreateEquatableIndexValue (command, fromOriginalValues)" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="C#" Value="public (object? Value, bool HasNullValue) CreateEquatableIndexValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ValueTuple`2&lt;object, bool&gt; CreateEquatableIndexValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEquatableIndexValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As ValueTuple(Of Object, Boolean)" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member CreateEquatableIndexValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; ValueTuple&lt;obj, bool&gt;" Usage="iRowIndexValueFactory.CreateEquatableIndexValue (command, fromOriginalValues)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-7.0">System.Object</ReturnType>
        <ReturnType FrameworkAlternate="efcore-8.0">System.ValueTuple&lt;System.Object,System.Boolean&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="efcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value", "HasNullValue" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value", "HasNullValue" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexValue">
      <MemberSignature Language="C#" Value="public object[]? CreateIndexValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] CreateIndexValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory.CreateIndexValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIndexValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object()" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]" Usage="iRowIndexValueFactory.CreateIndexValue (command, fromOriginalValues)" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="C#" Value="public (object?[]? Value, bool HasNullValue) CreateIndexValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ValueTuple`2&lt;object[], bool&gt; CreateIndexValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIndexValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As ValueTuple(Of Object(), Boolean)" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; ValueTuple&lt;obj[], bool&gt;" Usage="iRowIndexValueFactory.CreateIndexValue (command, fromOriginalValues)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-7.0">System.Object[]</ReturnType>
        <ReturnType FrameworkAlternate="efcore-8.0">System.ValueTuple&lt;System.Object[],System.Boolean&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="efcore-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value", "HasNullValue" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value", "HasNullValue" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
