<Type Name="ColumnAccessorsFactory" FullName="Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessorsFactory">
  <TypeSignature Language="C#" Value="public static class ColumnAccessorsFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ColumnAccessorsFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessorsFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ColumnAccessorsFactory" />
  <TypeSignature Language="F#" Value="type ColumnAccessorsFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors Create (Microsoft.EntityFrameworkCore.Metadata.IColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors Create(class Microsoft.EntityFrameworkCore.Metadata.IColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessorsFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (column As IColumn) As ColumnAccessors" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.EntityFrameworkCore.Metadata.IColumn -&gt; Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors" Usage="Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessorsFactory.Create column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TColumn&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors CreateGeneric&lt;TColumn&gt; (Microsoft.EntityFrameworkCore.Metadata.IColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors CreateGeneric&lt;TColumn&gt;(class Microsoft.EntityFrameworkCore.Metadata.IColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessorsFactory.CreateGeneric``1(Microsoft.EntityFrameworkCore.Metadata.IColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateGeneric(Of TColumn) (column As IColumn) As ColumnAccessors" />
      <MemberSignature Language="F#" Value="static member CreateGeneric : Microsoft.EntityFrameworkCore.Metadata.IColumn -&gt; Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors" Usage="Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessorsFactory.CreateGeneric column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TColumn" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TColumn">To be added.</typeparam>
        <param name="column">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
