<Type Name="CommandBatchPreparerDependencies" FullName="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies">
  <TypeSignature Language="C#" Value="public sealed class CommandBatchPreparerDependencies" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandBatchPreparerDependencies extends System.Object" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandBatchPreparerDependencies" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type CommandBatchPreparerDependencies = class" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="C#" Value="public sealed class CommandBatchPreparerDependencies : IEquatable&lt;Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandBatchPreparerDependencies extends System.Object implements class System.IEquatable`1&lt;class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandBatchPreparerDependencies&#xA;Implements IEquatable(Of CommandBatchPreparerDependencies)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type CommandBatchPreparerDependencies = class&#xA;    interface IEquatable&lt;CommandBatchPreparerDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>System.IEquatable&lt;Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the C# 'with' operator. Do not call the constructor at any point in this process.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparerDependencies (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommandComparer, Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory modificationCommandFactory, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommandComparer, class Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory modificationCommandFactory, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of IReadOnlyModificationCommand), modificationCommandFactory As IModificationCommandFactory, loggingOptions As ILoggingOptions, updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update), options As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies (modificationCommandBatchFactory, parameterNameGeneratorFactory, modificationCommandComparer, modificationCommandFactory, loggingOptions, updateLogger, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="modificationCommandFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="modificationCommandComparer">To be added.</param>
        <param name="modificationCommandFactory">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparerDependencies (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of ModificationCommand), keyValueIndexFactorySource As IKeyValueIndexFactorySource, loggingOptions As ILoggingOptions, updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update), options As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; * Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies (modificationCommandBatchFactory, parameterNameGeneratorFactory, modificationCommandComparer, keyValueIndexFactorySource, loggingOptions, updateLogger, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="keyValueIndexFactorySource" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="modificationCommandComparer">To be added.</param>
        <param name="keyValueIndexFactorySource">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" />.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparerDependencies (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommandComparer, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory modificationCommandFactory, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommandComparer, class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, class Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory modificationCommandFactory, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource,Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of IReadOnlyModificationCommand), keyValueIndexFactorySource As IKeyValueIndexFactorySource, modificationCommandFactory As IModificationCommandFactory, loggingOptions As ILoggingOptions, updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update), options As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource * Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies (modificationCommandBatchFactory, parameterNameGeneratorFactory, modificationCommandComparer, keyValueIndexFactorySource, modificationCommandFactory, loggingOptions, updateLogger, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="keyValueIndexFactorySource" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Index="3" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="modificationCommandFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory" Index="4" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="5" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" Index="6" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="7" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="modificationCommandComparer">To be added.</param>
        <param name="keyValueIndexFactorySource">To be added.</param>
        <param name="modificationCommandFactory">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" />.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparerDependencies (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of ModificationCommand), keyValueIndexFactorySource As IKeyValueIndexFactorySource, stateManager As Func(Of IStateManager), loggingOptions As ILoggingOptions, updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update), options As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; * Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies (modificationCommandBatchFactory, parameterNameGeneratorFactory, modificationCommandComparer, keyValueIndexFactorySource, stateManager, loggingOptions, updateLogger, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="keyValueIndexFactorySource" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="stateManager" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="5" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" Index="6" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="7" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="modificationCommandComparer">To be added.</param>
        <param name="keyValueIndexFactorySource">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" />.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Function &lt;Clone&gt;$ () As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.&lt;Clone&gt;$ : unit -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.&lt;Clone&gt;$ " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.Equals(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CommandBatchPreparerDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies -&gt; bool" Usage="commandBatchPreparerDependencies.Equals other" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="commandBatchPreparerDependencies.Equals obj" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="commandBatchPreparerDependencies.GetHashCode " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValueIndexFactorySource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource KeyValueIndexFactorySource { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource KeyValueIndexFactorySource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.KeyValueIndexFactorySource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValueIndexFactorySource As IKeyValueIndexFactorySource" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.KeyValueIndexFactorySource : Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.KeyValueIndexFactorySource" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource KeyValueIndexFactorySource { get; init; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyValueIndexFactorySource As IKeyValueIndexFactorySource" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.KeyValueIndexFactorySource : Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.KeyValueIndexFactorySource" FrameworkAlternate="efcore-6.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions LoggingOptions { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions LoggingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.LoggingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoggingOptions As ILoggingOptions" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.LoggingOptions : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.LoggingOptions" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions LoggingOptions { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property LoggingOptions As ILoggingOptions" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.LoggingOptions : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.LoggingOptions" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommandBatchFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory ModificationCommandBatchFactory { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory ModificationCommandBatchFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandBatchFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModificationCommandBatchFactory As IModificationCommandBatchFactory" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommandBatchFactory : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandBatchFactory" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory ModificationCommandBatchFactory { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property ModificationCommandBatchFactory As IModificationCommandBatchFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommandBatchFactory : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandBatchFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommandComparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommandComparer { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommandComparer" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandComparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModificationCommandComparer As IComparer(Of ModificationCommand)" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommandComparer : System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandComparer" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; ModificationCommandComparer { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; ModificationCommandComparer" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property ModificationCommandComparer As IComparer(Of IReadOnlyModificationCommand)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommandComparer : System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandComparer" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommandFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory ModificationCommandFactory { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory ModificationCommandFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property ModificationCommandFactory As IModificationCommandFactory" />
      <MemberSignature Language="F#" Value="member this.ModificationCommandFactory : Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.IModificationCommandFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies? left, Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies left, class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.op_Equality(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies,Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CommandBatchPreparerDependencies, right As CommandBatchPreparerDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies * Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies -&gt; bool" Usage="left = right" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies? left, Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies left, class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.op_Inequality(Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies,Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CommandBatchPreparerDependencies, right As CommandBatchPreparerDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies * Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.op_Inequality (left, right)" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions Options { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As IDbContextOptions" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.Options" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions Options { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As IDbContextOptions" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.Options" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterNameGeneratorFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory ParameterNameGeneratorFactory { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory ParameterNameGeneratorFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ParameterNameGeneratorFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterNameGeneratorFactory As IParameterNameGeneratorFactory" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.ParameterNameGeneratorFactory : Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ParameterNameGeneratorFactory" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory ParameterNameGeneratorFactory { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterNameGeneratorFactory As IParameterNameGeneratorFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ParameterNameGeneratorFactory : Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ParameterNameGeneratorFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateManager">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; StateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; StateManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.StateManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StateManager As Func(Of IStateManager)" />
      <MemberSignature Language="F#" Value="member this.StateManager : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.StateManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="commandBatchPreparerDependencies.ToString " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; UpdateLogger { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; UpdateLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.UpdateLogger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.UpdateLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.UpdateLogger" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; UpdateLogger { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.UpdateLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.UpdateLogger" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With updateLogger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="updateLogger"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (loggingOptions As ILoggingOptions) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With loggingOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="loggingOptions"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (options As IDbContextOptions) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="options"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (parameterNameGeneratorFactory As IParameterNameGeneratorFactory) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With parameterNameGeneratorFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="parameterNameGeneratorFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (modificationCommandBatchFactory As IModificationCommandBatchFactory) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With modificationCommandBatchFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (keyValueIndexFactorySource As IKeyValueIndexFactorySource) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With keyValueIndexFactorySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValueIndexFactorySource" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="keyValueIndexFactorySource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (modificationCommandComparer As IComparer(Of ModificationCommand)) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With modificationCommandComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommandComparer"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (stateManager As Func(Of IStateManager)) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With stateManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManager" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="stateManager"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
