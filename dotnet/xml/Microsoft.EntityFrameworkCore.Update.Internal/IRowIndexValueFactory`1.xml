<Type Name="IRowIndexValueFactory&lt;TKey&gt;" FullName="Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public interface IRowIndexValueFactory&lt;TKey&gt; : Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRowIndexValueFactory`1&lt;TKey&gt; implements class Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRowIndexValueFactory(Of TKey)&#xA;Implements IRowIndexValueFactory" />
  <TypeSignature Language="F#" Value="type IRowIndexValueFactory&lt;'Key&gt; = interface&#xA;    interface IRowIndexValueFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory`1.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EqualityComparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory&lt;'Key&gt;.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateIndexValue">
      <MemberSignature Language="C#" Value="public bool TryCreateIndexValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateIndexValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory`1.TryCreateIndexValue(System.Collections.Generic.IDictionary{System.String,System.Object},`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateIndexValue (keyValues As IDictionary(Of String, Object), ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateIndexValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; * 'Key -&gt; bool" Usage="iRowIndexValueFactory.TryCreateIndexValue (keyValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateIndexValue">
      <MemberSignature Language="C#" Value="public bool TryCreateIndexValue (object?[] keyValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateIndexValue(object[] keyValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory`1.TryCreateIndexValue(System.Object[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateIndexValue (keyValues As Object(), ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateIndexValue : obj[] * 'Key -&gt; bool" Usage="iRowIndexValueFactory.TryCreateIndexValue (keyValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateIndexValue">
      <MemberSignature Language="C#" Value="public bool TryCreateIndexValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateIndexValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.IRowIndexValueFactory`1.TryCreateIndexValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateIndexValue (command As IReadOnlyModificationCommand, fromOriginalValues As Boolean, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateIndexValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool * 'Key -&gt; bool" Usage="iRowIndexValueFactory.TryCreateIndexValue (command, fromOriginalValues, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
