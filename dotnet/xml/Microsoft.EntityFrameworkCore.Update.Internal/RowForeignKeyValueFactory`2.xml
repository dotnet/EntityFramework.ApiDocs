<Type Name="RowForeignKeyValueFactory&lt;TKey,TForeignKey&gt;" FullName="Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;TKey,TForeignKey&gt;">
  <TypeSignature Language="C#" Value="public abstract class RowForeignKeyValueFactory&lt;TKey,TForeignKey&gt; : Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RowForeignKeyValueFactory`2&lt;TKey, TForeignKey&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory, class Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory`1&lt;!TKey&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RowForeignKeyValueFactory(Of TKey, TForeignKey)&#xA;Implements IRowForeignKeyValueFactory(Of TKey)" />
  <TypeSignature Language="F#" Value="type RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt; = class&#xA;    interface IRowForeignKeyValueFactory&lt;'Key&gt;&#xA;    interface IRowForeignKeyValueFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TForeignKey" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory&lt;TKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <typeparam name="TForeignKey">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RowForeignKeyValueFactory (Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey, Microsoft.EntityFrameworkCore.Metadata.IColumn column, Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors columnAccessors, Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector valueConverterSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IColumn column, class Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors columnAccessors, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector valueConverterSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint,Microsoft.EntityFrameworkCore.Metadata.IColumn,Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors,Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (foreignKey As IForeignKeyConstraint, column As IColumn, columnAccessors As ColumnAccessors, valueConverterSelector As IValueConverterSelector)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt; : Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint * Microsoft.EntityFrameworkCore.Metadata.IColumn * Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors * Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector -&gt; Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt;" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt; (foreignKey, column, columnAccessors, valueConverterSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint" />
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" />
        <Parameter Name="columnAccessors" Type="Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors" />
        <Parameter Name="valueConverterSelector" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="column">To be added.</param>
        <param name="columnAccessors">To be added.</param>
        <param name="valueConverterSelector">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IColumn Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Column As IColumn" />
      <MemberSignature Language="F#" Value="member this.Column : Microsoft.EntityFrameworkCore.Metadata.IColumn" Usage="Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt;.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnAccessors">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors ColumnAccessors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors ColumnAccessors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.ColumnAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ColumnAccessors As ColumnAccessors" />
      <MemberSignature Language="F#" Value="member this.ColumnAccessors : Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors" Usage="Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt;.ColumnAccessors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.ColumnAccessors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDependentEquatableKeyValue">
      <MemberSignature Language="C#" Value="public virtual object? CreateDependentEquatableKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateDependentEquatableKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.CreateDependentEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDependentEquatableKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateDependentEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj&#xA;override this.CreateDependentEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj" Usage="rowForeignKeyValueFactory.CreateDependentEquatableKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory.CreateDependentEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public virtual object[]? CreateDependentKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] CreateDependentKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDependentKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object()" />
      <MemberSignature Language="F#" Value="abstract member CreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]&#xA;override this.CreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]" Usage="rowForeignKeyValueFactory.CreateDependentKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyEqualityComparer">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEqualityComparer&lt;TKey&gt; CreateKeyEqualityComparer (Microsoft.EntityFrameworkCore.Metadata.IColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; CreateKeyEqualityComparer(class Microsoft.EntityFrameworkCore.Metadata.IColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.CreateKeyEqualityComparer(Microsoft.EntityFrameworkCore.Metadata.IColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateKeyEqualityComparer (column As IColumn) As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyEqualityComparer : Microsoft.EntityFrameworkCore.Metadata.IColumn -&gt; System.Collections.Generic.IEqualityComparer&lt;'Key&gt;&#xA;override this.CreateKeyEqualityComparer : Microsoft.EntityFrameworkCore.Metadata.IColumn -&gt; System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="rowForeignKeyValueFactory.CreateKeyEqualityComparer column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrincipalEquatableKeyValue">
      <MemberSignature Language="C#" Value="public virtual object CreatePrincipalEquatableKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePrincipalEquatableKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.CreatePrincipalEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatePrincipalEquatableKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreatePrincipalEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj&#xA;override this.CreatePrincipalEquatableKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj" Usage="rowForeignKeyValueFactory.CreatePrincipalEquatableKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory.CreatePrincipalEquatableKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrincipalKeyValue">
      <MemberSignature Language="C#" Value="public virtual object[] CreatePrincipalKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] CreatePrincipalKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatePrincipalKeyValue (command As IReadOnlyModificationCommand, Optional fromOriginalValues As Boolean = false) As Object()" />
      <MemberSignature Language="F#" Value="abstract member CreatePrincipalKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]&#xA;override this.CreatePrincipalKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool -&gt; obj[]" Usage="rowForeignKeyValueFactory.CreatePrincipalKeyValue (command, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEqualityComparer&lt;TKey&gt; EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EqualityComparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory&lt;'Key, 'ForeignKey&gt;.EqualityComparer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory`1.EqualityComparer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public abstract bool TryCreateDependentKeyValue (System.Collections.Generic.IDictionary&lt;string,object?&gt; keyPropertyValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateDependentKeyValue(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; keyPropertyValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.TryCreateDependentKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object},`0@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryCreateDependentKeyValue (keyPropertyValues As IDictionary(Of String, Object), ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : System.Collections.Generic.IDictionary&lt;string, obj&gt; * 'Key -&gt; bool" Usage="rowForeignKeyValueFactory.TryCreateDependentKeyValue (keyPropertyValues, key)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory`1.TryCreateDependentKeyValue(System.Collections.Generic.IDictionary{System.String,System.Object},`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyPropertyValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyPropertyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public abstract bool TryCreateDependentKeyValue (object?[] keyValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateDependentKeyValue(object[] keyValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.TryCreateDependentKeyValue(System.Object[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryCreateDependentKeyValue (keyValues As Object(), ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : obj[] * 'Key -&gt; bool" Usage="rowForeignKeyValueFactory.TryCreateDependentKeyValue (keyValues, key)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory`1.TryCreateDependentKeyValue(System.Object[],`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateDependentKeyValue">
      <MemberSignature Language="C#" Value="public abstract bool TryCreateDependentKeyValue (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, out TKey? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateDependentKeyValue(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, bool fromOriginalValues, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.RowForeignKeyValueFactory`2.TryCreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryCreateDependentKeyValue (command As IReadOnlyModificationCommand, fromOriginalValues As Boolean, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateDependentKeyValue : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * bool * 'Key -&gt; bool" Usage="rowForeignKeyValueFactory.TryCreateDependentKeyValue (command, fromOriginalValues, key)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.Internal.IRowForeignKeyValueFactory`1.TryCreateDependentKeyValue(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Boolean,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
        <Parameter Name="key" Type="TKey" RefType="out">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullWhen(true)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullWhen(true)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="fromOriginalValues">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
