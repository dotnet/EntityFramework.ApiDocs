<Type Name="UpdateEntryExtensions" FullName="Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions">
  <TypeSignature Language="C#" Value="public static class UpdateEntryExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UpdateEntryExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module UpdateEntryExtensions" />
  <TypeSignature Language="F#" Value="type UpdateEntryExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildCurrentValuesString">
      <MemberSignature Language="C#" Value="public static string BuildCurrentValuesString (this Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BuildCurrentValuesString(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.BuildCurrentValuesString(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BuildCurrentValuesString (entry As IUpdateEntry, properties As IEnumerable(Of IPropertyBase)) As String" />
      <MemberSignature Language="F#" Value="static member BuildCurrentValuesString : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * seq&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; string" Usage="Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.BuildCurrentValuesString (entry, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" />
      </Parameters>
      <Docs>
        <param name="entry">The entry from which values will be obtained.</param>
        <param name="properties">The properties to format.</param>
        <summary>
                Creates a formatted string representation of the given properties and their current
                values such as is useful when throwing exceptions about keys, indexes, etc. that use
                the properties.
            </summary>
        <returns>The string representation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildOriginalValuesString">
      <MemberSignature Language="C#" Value="public static string BuildOriginalValuesString (this Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BuildOriginalValuesString(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.BuildOriginalValuesString(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BuildOriginalValuesString (entry As IUpdateEntry, properties As IEnumerable(Of IPropertyBase)) As String" />
      <MemberSignature Language="F#" Value="static member BuildOriginalValuesString : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * seq&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; string" Usage="Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.BuildOriginalValuesString (entry, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" />
      </Parameters>
      <Docs>
        <param name="entry">The entry from which values will be obtained.</param>
        <param name="properties">The properties to format.</param>
        <summary>
                Creates a formatted string representation of the given properties and their original
                values such as is useful when throwing exceptions about keys, indexes, etc. that use
                the properties.
            </summary>
        <returns>The string representation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProviderValue">
      <MemberSignature Language="C#" Value="public static object GetCurrentProviderValue (this Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCurrentProviderValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.GetCurrentProviderValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentProviderValue (updateEntry As IUpdateEntry, property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetCurrentProviderValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.GetCurrentProviderValue (updateEntry, property)" />
      <MemberSignature Language="C#" Value="public static object? GetCurrentProviderValue (this Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateEntry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="updateEntry">The entry.</param>
        <param name="property">The property to get the value for.</param>
        <summary>
                Gets the value assigned to the property and converts it to the provider-expected value.
            </summary>
        <returns>The value for the property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalProviderValue">
      <MemberSignature Language="C#" Value="public static object? GetOriginalProviderValue (this Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetOriginalProviderValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.GetOriginalProviderValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOriginalProviderValue (updateEntry As IUpdateEntry, property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetOriginalProviderValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.GetOriginalProviderValue (updateEntry, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateEntry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="updateEntry">The entry.</param>
        <param name="property">The property to get the value for.</param>
        <summary>
                Gets the original value that was assigned to the property and converts it to the provider-expected value.
            </summary>
        <returns>The value for the property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDebugString">
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions options, int indent = 0);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToDebugString(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, valuetype Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions options, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (updateEntry As IUpdateEntry, options As ChangeTrackerDebugStringOptions, Optional indent As Integer = 0) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ToDebugString : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions * int -&gt; string" Usage="Microsoft.EntityFrameworkCore.Update.UpdateEntryExtensions.ToDebugString (updateEntry, options, indent)" />
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Update.IUpdateEntry updateEntry, Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions options = Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions.LongDefault, int indent = 0);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (updateEntry As IUpdateEntry, Optional options As ChangeTrackerDebugStringOptions = Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions.LongDefault, Optional indent As Integer = 0) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateEntry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTrackerDebugStringOptions" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indent" Type="System.Int32" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="updateEntry">The entry.</param>
        <param name="options">Options for generating the string.</param>
        <param name="indent">The number of indent spaces to use before each new line.</param>
        <summary>
          <para>
                    Creates a human-readable representation of the given <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />.
                </para>
          <para>
                    Warning: Do not rely on the format of the returned string.
                    It is designed for debugging only and may change arbitrarily between releases.
                </para>
        </summary>
        <returns>A human-readable representation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-debug-views">EF Core debug views</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
