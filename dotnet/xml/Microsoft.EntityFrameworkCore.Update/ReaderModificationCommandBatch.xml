<Type Name="ReaderModificationCommandBatch" FullName="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch">
  <TypeSignature Language="C#" Value="public abstract class ReaderModificationCommandBatch : Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReaderModificationCommandBatch extends Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReaderModificationCommandBatch&#xA;Inherits ModificationCommandBatch" />
  <TypeSignature Language="F#" Value="type ReaderModificationCommandBatch = class&#xA;    inherit ModificationCommandBatch" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A base class for <see cref="T:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" /> implementations that make use
                    of a data reader.
                </para>
      <para>
                    This type is typically used by database providers; it is generally not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReaderModificationCommandBatch (Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.#ctor(Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (dependencies As ModificationCommandBatchFactoryDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch : Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies -&gt; Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" Usage="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">Service dependencies.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReaderModificationCommandBatch (Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies dependencies, int? maxBatchSize = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies dependencies, valuetype System.Nullable`1&lt;int32&gt; maxBatchSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.#ctor(Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (dependencies As ModificationCommandBatchFactoryDependencies, Optional maxBatchSize As Nullable(Of Integer) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch : Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" Usage="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch (dependencies, maxBatchSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="maxBatchSize" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">Service dependencies.</param>
        <param name="maxBatchSize">The maximum batch size. Defaults to 1000.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReaderModificationCommandBatch (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator updateSqlGenerator, Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory valueBufferFactoryFactory);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator updateSqlGenerator, class Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory valueBufferFactoryFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator,Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (commandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, updateSqlGenerator As IUpdateSqlGenerator, valueBufferFactoryFactory As IRelationalValueBufferFactoryFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator * Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory -&gt; Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" Usage="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch (commandBuilderFactory, sqlGenerationHelper, updateSqlGenerator, valueBufferFactoryFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="updateSqlGenerator" Type="Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="valueBufferFactoryFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="commandBuilderFactory"> The builder to build commands. </param>
        <param name="sqlGenerationHelper"> A helper for SQL generation. </param>
        <param name="updateSqlGenerator"> A SQL generator for insert, update, and delete commands. </param>
        <param name="valueBufferFactoryFactory">
                A factory for creating factories for creating <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />s to be used when reading from the data reader.
            </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public override bool AddCommand (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddCommand(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.AddCommand(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddCommand (modificationCommand As IReadOnlyModificationCommand) As Boolean" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="override this.AddCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; bool" Usage="readerModificationCommandBatch.AddCommand modificationCommand" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="protected virtual void AddCommand (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddCommand(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddCommand (modificationCommand As IReadOnlyModificationCommand)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; unit&#xA;override this.AddCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; unit" Usage="readerModificationCommandBatch.AddCommand modificationCommand" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-6.0">System.Boolean</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand">The command to add.</param>
        <summary>
                Adds Updates the command text for the command at the given position in the <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" /> list.
            </summary>
        <returns>
          <see langword="true" /> if the command was successfully added; <see langword="false" /> if there was no
                room in the current batch to add the command and it must instead be added to a new batch.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public override bool AddCommand (Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddCommand(class Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.AddCommand(Microsoft.EntityFrameworkCore.Update.ModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddCommand (modificationCommand As ModificationCommand) As Boolean" />
      <MemberSignature Language="F#" Value="override this.AddCommand : Microsoft.EntityFrameworkCore.Update.ModificationCommand -&gt; bool" Usage="readerModificationCommandBatch.AddCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand"> The command to add. </param>
        <summary>
                Adds the given insert/update/delete <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" /> to the batch.
            </summary>
        <returns>
          <see langword="true" /> if the command was successfully added; <see langword="false" /> if there was no
                room in the current batch to add the command and it must instead be added to a new batch.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="protected virtual void AddParameter (Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddParameter(class Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.AddParameter(Microsoft.EntityFrameworkCore.Update.IColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddParameter (columnModification As IColumnModification)" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; unit&#xA;override this.AddParameter : Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; unit" Usage="readerModificationCommandBatch.AddParameter columnModification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="columnModification">The column modification for which to add parameters.</param>
        <summary>
                Adds a parameter for the given <paramref name="columnModification" /> to the relational command being built for this batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameters">
      <MemberSignature Language="C#" Value="protected virtual void AddParameters (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddParameters(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.AddParameters(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddParameters (modificationCommand As IReadOnlyModificationCommand)" />
      <MemberSignature Language="F#" Value="abstract member AddParameters : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; unit&#xA;override this.AddParameters : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; unit" Usage="readerModificationCommandBatch.AddParameters modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand">The modification command for which to add parameters.</param>
        <summary>
                Adds parameters for all column modifications in the given <paramref name="modificationCommand" /> to the relational command
                being built for this batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreMoreBatchesExpected">
      <MemberSignature Language="C#" Value="public override bool AreMoreBatchesExpected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreMoreBatchesExpected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.AreMoreBatchesExpected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AreMoreBatchesExpected As Boolean" />
      <MemberSignature Language="F#" Value="member this.AreMoreBatchesExpected : bool" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.AreMoreBatchesExpected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CachedCommandText">
      <MemberSignature Language="C#" Value="protected virtual System.Text.StringBuilder CachedCommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder CachedCommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CachedCommandText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property CachedCommandText As StringBuilder" />
      <MemberSignature Language="F#" Value="member this.CachedCommandText : System.Text.StringBuilder with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CachedCommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets the cached command text for the commands in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddCommand">
      <MemberSignature Language="C#" Value="protected abstract bool CanAddCommand (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanAddCommand(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CanAddCommand(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanAddCommand (modificationCommand As IReadOnlyModificationCommand) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanAddCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; bool" Usage="readerModificationCommandBatch.CanAddCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand">The command to potentially add.</param>
        <summary>
                Checks whether a new command can be added to the batch.
            </summary>
        <returns>
          <see langword="true" /> if the command can be added; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddCommand">
      <MemberSignature Language="C#" Value="protected abstract bool CanAddCommand (Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanAddCommand(class Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CanAddCommand(Microsoft.EntityFrameworkCore.Update.ModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanAddCommand (modificationCommand As ModificationCommand) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanAddCommand : Microsoft.EntityFrameworkCore.Update.ModificationCommand -&gt; bool" Usage="readerModificationCommandBatch.CanAddCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand"> The command to potentially add. </param>
        <summary>
                Checks whether or not a new command can be added to the batch.
            </summary>
        <returns>
          <see langword="true" /> if the command can be added; <see langword="false" /> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandResultSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt; CommandResultSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt; CommandResultSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CommandResultSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CommandResultSet As IList(Of ResultSetMapping)" />
      <MemberSignature Language="F#" Value="member this.CommandResultSet : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CommandResultSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" />s for each command in <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public override void Complete (bool moreBatchesExpected);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Complete(bool moreBatchesExpected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Complete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Complete (moreBatchesExpected As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Complete : bool -&gt; unit" Usage="readerModificationCommandBatch.Complete moreBatchesExpected" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moreBatchesExpected" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="moreBatchesExpected">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Consume">
      <MemberSignature Language="C#" Value="protected abstract void Consume (Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Consume(class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Consume(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Consume (reader As RelationalDataReader)" />
      <MemberSignature Language="F#" Value="abstract member Consume : Microsoft.EntityFrameworkCore.Storage.RelationalDataReader -&gt; unit" Usage="readerModificationCommandBatch.Consume reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="reader">The data reader.</param>
        <summary>
                Consumes the data reader created by <see cref="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consume">
      <MemberSignature Language="C#" Value="protected abstract void Consume (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Consume(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Consume(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Consume (reader As DbDataReader)" />
      <MemberSignature Language="F#" Value="abstract member Consume : System.Data.Common.DbDataReader -&gt; unit" Usage="readerModificationCommandBatch.Consume reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsumeAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task ConsumeAsync (Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ConsumeAsync(class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ConsumeAsync(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ConsumeAsync (reader As RelationalDataReader, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConsumeAsync : Microsoft.EntityFrameworkCore.Storage.RelationalDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="readerModificationCommandBatch.ConsumeAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="reader">The data reader.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Consumes the data reader created by <see cref="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConsumeAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task ConsumeAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ConsumeAsync(class System.Data.Common.DbDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ConsumeAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ConsumeAsync (reader As DbDataReader, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConsumeAsync : System.Data.Common.DbDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="readerModificationCommandBatch.ConsumeAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoreCommand">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RawSqlCommand CreateStoreCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RawSqlCommand CreateStoreCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CreateStoreCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateStoreCommand () As RawSqlCommand" />
      <MemberSignature Language="F#" Value="abstract member CreateStoreCommand : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand&#xA;override this.CreateStoreCommand : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" Usage="readerModificationCommandBatch.CreateStoreCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RawSqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Generates a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" /> for the batch.
            </summary>
        <returns>The command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValueBufferFactory">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; columnModifications);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; columnModifications) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CreateValueBufferFactory(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateValueBufferFactory (columnModifications As IReadOnlyList(Of ColumnModification)) As IRelationalValueBufferFactory" />
      <MemberSignature Language="F#" Value="abstract member CreateValueBufferFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory&#xA;override this.CreateValueBufferFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" Usage="readerModificationCommandBatch.CreateValueBufferFactory columnModifications" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnModifications" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="columnModifications">
                The list of <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" />s for all the columns
                being modified such that a ValueBuffer with appropriate slots can be created.
            </param>
        <summary>
                Creates the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> that will be used for creating a
                <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> to consume the data reader.
            </summary>
        <returns> The factory. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValueBufferFactory">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; columnModifications);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; columnModifications) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CreateValueBufferFactory(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateValueBufferFactory (columnModifications As IReadOnlyList(Of IColumnModification)) As IRelationalValueBufferFactory" />
      <MemberSignature Language="F#" Value="abstract member CreateValueBufferFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory&#xA;override this.CreateValueBufferFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" Usage="readerModificationCommandBatch.CreateValueBufferFactory columnModifications" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnModifications" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="columnModifications">
                The list of <see cref="T:Microsoft.EntityFrameworkCore.Update.IColumnModification" />s for all the columns
                being modified such that a ValueBuffer with appropriate slots can be created.
            </param>
        <summary>
                Creates the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> that will be used for creating a
                <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> to consume the data reader.
            </summary>
        <returns>The factory.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies Dependencies { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Dependencies As ModificationCommandBatchFactoryDependencies" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Dependencies" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies Dependencies { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ModificationCommandBatchFactoryDependencies" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override void Execute (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Execute(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Execute (connection As IRelationalConnection)" />
      <MemberSignature Language="F#" Value="override this.Execute : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; unit" Usage="readerModificationCommandBatch.Execute connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to the database to update.</param>
        <summary>
                Executes the command generated by this batch against a database using the given connection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task ExecuteAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task ExecuteAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteAsync (connection As IRelationalConnection, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="override this.ExecuteAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="readerModificationCommandBatch.ExecuteAsync (connection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to the database to update.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Executes the command generated by this batch against a database using the given connection.
            </summary>
        <returns>A task that represents the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCommandText">
      <MemberSignature Language="C#" Value="protected virtual string GetCommandText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCommandText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.GetCommandText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCommandText () As String" />
      <MemberSignature Language="F#" Value="abstract member GetCommandText : unit -&gt; string&#xA;override this.GetCommandText : unit -&gt; string" Usage="readerModificationCommandBatch.GetCommandText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the command text for all the commands in the current batch and also caches it
                on <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CachedCommandText" />.
            </summary>
        <returns>The command text.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterCount">
      <MemberSignature Language="C#" Value="protected virtual int GetParameterCount ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetParameterCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.GetParameterCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetParameterCount () As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetParameterCount : unit -&gt; int&#xA;override this.GetParameterCount : unit -&gt; int" Usage="readerModificationCommandBatch.GetParameterCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the total number of parameters needed for the batch.
            </summary>
        <returns>The total parameter count.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandTextEmpty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCommandTextEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCommandTextEmpty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.IsCommandTextEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCommandTextEmpty As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsCommandTextEmpty : bool" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.IsCommandTextEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Whether any SQL has already been added to the batch command text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandTextValid">
      <MemberSignature Language="C#" Value="protected abstract bool IsCommandTextValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsCommandTextValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.IsCommandTextValid" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsCommandTextValid () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsCommandTextValid : unit -&gt; bool" Usage="readerModificationCommandBatch.IsCommandTextValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Checks whether the command text is valid.
            </summary>
        <returns>
          <see langword="true" /> if the command text is valid; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="protected virtual bool IsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.IsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsValid () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsValid : unit -&gt; bool&#xA;override this.IsValid : unit -&gt; bool" Usage="readerModificationCommandBatch.IsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Checks whether the command text is valid.
            </summary>
        <returns>
          <see langword="true" /> if the command text is valid; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastCachedCommandIndex">
      <MemberSignature Language="C#" Value="protected virtual int LastCachedCommandIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastCachedCommandIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.LastCachedCommandIndex" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property LastCachedCommandIndex As Integer" />
      <MemberSignature Language="F#" Value="member this.LastCachedCommandIndex : int with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.LastCachedCommandIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The ordinal of the last command for which command text was built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBatchSize">
      <MemberSignature Language="C#" Value="protected virtual int MaxBatchSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBatchSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.MaxBatchSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MaxBatchSize As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxBatchSize : int" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.MaxBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The maximum number of <see cref="T:Microsoft.EntityFrameworkCore.Update.ModificationCommand" /> instances that can be added to a single batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommands">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommands { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommands" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModificationCommands As IReadOnlyList(Of ModificationCommand)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; ModificationCommands { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; ModificationCommands" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModificationCommands As IReadOnlyList(Of IReadOnlyModificationCommand)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of conceptual insert/update/delete <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />s in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.Dictionary&lt;string,object?&gt; ParameterValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; ParameterValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ParameterValues" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterValues As Dictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.ParameterValues : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ParameterValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the parameter values for the commands in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalCommandBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder RelationalCommandBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder RelationalCommandBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.RelationalCommandBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property RelationalCommandBuilder As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="member this.RelationalCommandBuilder : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.RelationalCommandBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the relational command builder for the commands in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresTransaction">
      <MemberSignature Language="C#" Value="public override bool RequiresTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.RequiresTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresTransaction As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequiresTransaction : bool" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.RequiresTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ResetCommandText">
      <MemberSignature Language="C#" Value="protected virtual void ResetCommandText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResetCommandText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ResetCommandText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ResetCommandText ()" />
      <MemberSignature Language="F#" Value="abstract member ResetCommandText : unit -&gt; unit&#xA;override this.ResetCommandText : unit -&gt; unit" Usage="readerModificationCommandBatch.ResetCommandText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Resets the builder to start building a new batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultSetMappings">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt; ResultSetMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt; ResultSetMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ResultSetMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ResultSetMappings As IList(Of ResultSetMapping)" />
      <MemberSignature Language="F#" Value="member this.ResultSetMappings : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ResultSetMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" />s for each command in <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollbackLastCommand">
      <MemberSignature Language="C#" Value="protected virtual void RollbackLastCommand (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RollbackLastCommand(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.RollbackLastCommand(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RollbackLastCommand (modificationCommand As IReadOnlyModificationCommand)" />
      <MemberSignature Language="F#" Value="abstract member RollbackLastCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; unit&#xA;override this.RollbackLastCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; unit" Usage="readerModificationCommandBatch.RollbackLastCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand">To be added.</param>
        <summary>
                Rolls back the last command added. Used when adding a command caused the batch to become invalid (e.g. CommandText too long).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRequiresTransaction">
      <MemberSignature Language="C#" Value="protected virtual void SetRequiresTransaction (bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRequiresTransaction(bool requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.SetRequiresTransaction(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetRequiresTransaction (requiresTransaction As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetRequiresTransaction : bool -&gt; unit&#xA;override this.SetRequiresTransaction : bool -&gt; unit" Usage="readerModificationCommandBatch.SetRequiresTransaction requiresTransaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requiresTransaction" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="requiresTransaction">Whether the batch requires a transaction in order to execute correctly.</param>
        <summary>
                Sets whether the batch requires a transaction in order to execute correctly.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Text.StringBuilder SqlBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder SqlBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.SqlBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SqlBuilder As StringBuilder" />
      <MemberSignature Language="F#" Value="member this.SqlBuilder : System.Text.StringBuilder" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.SqlBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the command text builder for the commands in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlGenerationHelper">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.SqlGenerationHelper" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SqlGenerationHelper As ISqlGenerationHelper" />
      <MemberSignature Language="F#" Value="member this.SqlGenerationHelper : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.SqlGenerationHelper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A helper for SQL generation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreCommand">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RawSqlCommand? StoreCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.RawSqlCommand StoreCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.StoreCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property StoreCommand As RawSqlCommand" />
      <MemberSignature Language="F#" Value="member this.StoreCommand : Microsoft.EntityFrameworkCore.Storage.RawSqlCommand with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.StoreCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RawSqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The store command generated from this batch when <see cref="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Complete(System.Boolean)" /> is called.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddCommand">
      <MemberSignature Language="C#" Value="public override bool TryAddCommand (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryAddCommand(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.TryAddCommand(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryAddCommand (modificationCommand As IReadOnlyModificationCommand) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TryAddCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; bool" Usage="readerModificationCommandBatch.TryAddCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UpdateCachedCommandText">
      <MemberSignature Language="C#" Value="protected virtual void UpdateCachedCommandText (int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateCachedCommandText(int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.UpdateCachedCommandText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateCachedCommandText (commandPosition As Integer)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCachedCommandText : int -&gt; unit&#xA;override this.UpdateCachedCommandText : int -&gt; unit" Usage="readerModificationCommandBatch.UpdateCachedCommandText commandPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandPosition" Type="System.Int32" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandPosition">The position of the command to generate command text for.</param>
        <summary>
                Updates the command text for the command at the given position in the
                <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" /> list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSqlGenerator">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator UpdateSqlGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator UpdateSqlGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.UpdateSqlGenerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UpdateSqlGenerator As IUpdateSqlGenerator" />
      <MemberSignature Language="F#" Value="member this.UpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.UpdateSqlGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The update SQL generator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
