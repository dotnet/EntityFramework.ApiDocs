<Type Name="IUpdateSqlGenerator" FullName="Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator">
  <TypeSignature Language="C#" Value="public interface IUpdateSqlGenerator" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUpdateSqlGenerator" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUpdateSqlGenerator" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type IUpdateSqlGenerator = interface" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="C#" Value="public interface IUpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.Internal.ISingletonUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUpdateSqlGenerator implements class Microsoft.EntityFrameworkCore.Update.Internal.ISingletonUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUpdateSqlGenerator&#xA;Implements ISingletonUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type IUpdateSqlGenerator = interface&#xA;    interface ISingletonUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IUpdateSqlGenerator" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.ISingletonUpdateSqlGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    A service used to generate SQL for insert, update, and delete commands, and related SQL
                    operations needed for <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /></para>
      <para>
                    This type is typically used by database providers; it is generally not used in application code.
                </para>
    </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                    for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendBatchHeader">
      <MemberSignature Language="C#" Value="public void AppendBatchHeader (System.Text.StringBuilder commandStringBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendBatchHeader(class System.Text.StringBuilder commandStringBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendBatchHeader(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBatchHeader (commandStringBuilder As StringBuilder)" />
      <MemberSignature Language="F#" Value="abstract member AppendBatchHeader : System.Text.StringBuilder -&gt; unit" Usage="iUpdateSqlGenerator.AppendBatchHeader commandStringBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL fragment should be appended.</param>
        <summary>
                Appends a SQL fragment for the start of a batch to
                the full command being built by the given <see cref="T:System.Text.StringBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition)" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As ModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="command"> The command that represents the delete operation. </param>
        <param name="commandPosition"> The ordinal of this command in the batch. </param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <param name="requiresTransaction">Returns whether the SQL appended must be executed in a transaction to work correctly.</param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition)" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As ModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="command"> The command that represents the delete operation. </param>
        <param name="commandPosition"> The ordinal of this command in the batch. </param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <param name="requiresTransaction">Returns whether the SQL appended must be executed in a transaction to work correctly.</param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public void AppendNextSequenceValueOperation (System.Text.StringBuilder commandStringBuilder, string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendNextSequenceValueOperation(class System.Text.StringBuilder commandStringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendNextSequenceValueOperation(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendNextSequenceValueOperation (commandStringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member AppendNextSequenceValueOperation : System.Text.StringBuilder * string * string -&gt; unit" Usage="iUpdateSqlGenerator.AppendNextSequenceValueOperation (commandStringBuilder, name, schema)" />
      <MemberSignature Language="C#" Value="public void AppendNextSequenceValueOperation (System.Text.StringBuilder commandStringBuilder, string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL fragment should be appended.</param>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Generates a SQL fragment that will query for the next value from the given sequence and appends it to
                the full command being built by the given <see cref="T:System.Text.StringBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendObtainNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public void AppendObtainNextSequenceValueOperation (System.Text.StringBuilder commandStringBuilder, string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendObtainNextSequenceValueOperation(class System.Text.StringBuilder commandStringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendObtainNextSequenceValueOperation(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendObtainNextSequenceValueOperation (commandStringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member AppendObtainNextSequenceValueOperation : System.Text.StringBuilder * string * string -&gt; unit" Usage="iUpdateSqlGenerator.AppendObtainNextSequenceValueOperation (commandStringBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL fragment should be appended.</param>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Generates a SQL fragment that will get the next value from the given sequence and appends it to
                the full command being built by the given <see cref="T:System.Text.StringBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendStoredProcedureCall">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendStoredProcedureCall (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendStoredProcedureCall(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendStoredProcedureCall(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendStoredProcedureCall (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendStoredProcedureCall : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendStoredProcedureCall (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the stored procedure call.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <param name="requiresTransaction">Returns whether the SQL appended must be executed in a transaction to work correctly.</param>
        <summary>
                Appends SQL for calling a stored procedure.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition)" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As ModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="command"> The command that represents the delete operation. </param>
        <param name="commandPosition"> The ordinal of this command in the batch. </param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateOperation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="iUpdateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <param name="requiresTransaction">Returns whether the SQL appended must be executed in a transaction to work correctly.</param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public string GenerateNextSequenceValueOperation (string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateNextSequenceValueOperation(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.GenerateNextSequenceValueOperation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateNextSequenceValueOperation (name As String, schema As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateNextSequenceValueOperation : string * string -&gt; string" Usage="iUpdateSqlGenerator.GenerateNextSequenceValueOperation (name, schema)" />
      <MemberSignature Language="C#" Value="public string GenerateNextSequenceValueOperation (string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Generates SQL that will query for the next value in the given sequence.
            </summary>
        <returns>The SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateObtainNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public string GenerateObtainNextSequenceValueOperation (string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateObtainNextSequenceValueOperation(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.GenerateObtainNextSequenceValueOperation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateObtainNextSequenceValueOperation (name As String, schema As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateObtainNextSequenceValueOperation : string * string -&gt; string" Usage="iUpdateSqlGenerator.GenerateObtainNextSequenceValueOperation (name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Generates SQL that will obtain the next value in the given sequence.
            </summary>
        <returns>The SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependEnsureAutocommit">
      <MemberSignature Language="C#" Value="public void PrependEnsureAutocommit (System.Text.StringBuilder commandStringBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependEnsureAutocommit(class System.Text.StringBuilder commandStringBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.PrependEnsureAutocommit(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrependEnsureAutocommit (commandStringBuilder As StringBuilder)" />
      <MemberSignature Language="F#" Value="abstract member PrependEnsureAutocommit : System.Text.StringBuilder -&gt; unit" Usage="iUpdateSqlGenerator.PrependEnsureAutocommit commandStringBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be prepended.</param>
        <summary>
                Prepends a SQL command for turning on autocommit mode in the database, in case it is off.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
