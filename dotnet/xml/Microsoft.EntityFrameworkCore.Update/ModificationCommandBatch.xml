<Type Name="ModificationCommandBatch" FullName="Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch">
  <TypeSignature Language="C#" Value="public abstract class ModificationCommandBatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModificationCommandBatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModificationCommandBatch" />
  <TypeSignature Language="F#" Value="type ModificationCommandBatch = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A base class for a collection of <see cref="T:Microsoft.EntityFrameworkCore.Update.ModificationCommand" />s that can be executed
                    as a batch.
                </para>
      <para>
                    This type is typically used by database providers; it is generally not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModificationCommandBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public abstract bool AddCommand (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddCommand(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.AddCommand(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddCommand (modificationCommand As IReadOnlyModificationCommand) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; bool" Usage="modificationCommandBatch.AddCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand">The command to add.</param>
        <summary>
                Adds the given insert/update/delete <see cref="P:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.ModificationCommands" /> to the batch.
            </summary>
        <returns>
          <see langword="true" /> if the command was successfully added; <see langword="false" /> if there was no
                room in the current batch to add the command and it must instead be added to a new batch.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public abstract bool AddCommand (Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddCommand(class Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.AddCommand(Microsoft.EntityFrameworkCore.Update.ModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddCommand (modificationCommand As ModificationCommand) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AddCommand : Microsoft.EntityFrameworkCore.Update.ModificationCommand -&gt; bool" Usage="modificationCommandBatch.AddCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand"> The command to add. </param>
        <summary>
                Adds the given insert/update/delete <see cref="P:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.ModificationCommands" /> to the batch.
            </summary>
        <returns>
          <see langword="true" /> if the command was successfully added; <see langword="false" /> if there was no
                room in the current batch to add the command and it must instead be added to a new batch.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreMoreBatchesExpected">
      <MemberSignature Language="C#" Value="public abstract bool AreMoreBatchesExpected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreMoreBatchesExpected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.AreMoreBatchesExpected" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AreMoreBatchesExpected As Boolean" />
      <MemberSignature Language="F#" Value="member this.AreMoreBatchesExpected : bool" Usage="Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.AreMoreBatchesExpected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether more batches are expected after this one.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public abstract void Complete (bool moreBatchesExpected);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(bool moreBatchesExpected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.Complete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Complete (moreBatchesExpected As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Complete : bool -&gt; unit" Usage="modificationCommandBatch.Complete moreBatchesExpected" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moreBatchesExpected" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="moreBatchesExpected">To be added.</param>
        <summary>
                Indicates that no more commands will be added to this batch, and prepares it for execution.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public abstract void Execute (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Execute (connection As IRelationalConnection)" />
      <MemberSignature Language="F#" Value="abstract member Execute : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; unit" Usage="modificationCommandBatch.Execute connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The database connection to use.</param>
        <summary>
                Sends insert/update/delete commands to the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task ExecuteAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExecuteAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ExecuteAsync (connection As IRelationalConnection, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="modificationCommandBatch.ExecuteAsync (connection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The database connection to use.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Sends insert/update/delete commands to the database.
            </summary>
        <returns>A task that represents the asynchronous save operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommands">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommands { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommands" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.ModificationCommands" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ModificationCommands As IReadOnlyList(Of ModificationCommand)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.ModificationCommands" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; ModificationCommands { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; ModificationCommands" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ModificationCommands As IReadOnlyList(Of IReadOnlyModificationCommand)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.ModificationCommands" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of conceptual insert/update/delete <see cref="P:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.ModificationCommands" />s in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresTransaction">
      <MemberSignature Language="C#" Value="public abstract bool RequiresTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.RequiresTransaction" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequiresTransaction As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequiresTransaction : bool" Usage="Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.RequiresTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the batch requires a transaction in order to execute correctly.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddCommand">
      <MemberSignature Language="C#" Value="public abstract bool TryAddCommand (Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAddCommand(class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch.TryAddCommand(Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryAddCommand (modificationCommand As IReadOnlyModificationCommand) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryAddCommand : Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand -&gt; bool" Usage="modificationCommandBatch.TryAddCommand modificationCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modificationCommand">The command to add.</param>
        <summary>
                Attempts to adds the given insert/update/delete <paramref name="modificationCommand" /> to the batch.
            </summary>
        <returns>
          <see langword="true" /> if the command was successfully added; <see langword="false" /> if there was no
                room in the current batch to add the command and it must instead be added to a new batch.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
