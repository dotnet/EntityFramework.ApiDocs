<Type Name="ICommandBatchPreparer" FullName="Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer">
  <TypeSignature Language="C#" Value="public interface ICommandBatchPreparer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandBatchPreparer" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandBatchPreparer" />
  <TypeSignature Language="F#" Value="type ICommandBatchPreparer = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ICommandBatchPreparer" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A service for preparing a list of <see cref="T:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" />s for the entities
                    represented by the given list of <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />s.
                </para>
      <para>
                    This type is typically used by database providers; it is generally not used in application code.
                </para>
    </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                    for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BatchCommands">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Function BatchCommands (entries As IReadOnlyList(Of IUpdateEntry)) As IEnumerable(Of ModificationCommandBatch)" />
      <MemberSignature Language="F#" Value="abstract member BatchCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;" Usage="iCommandBatchPreparer.BatchCommands entries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entries"> The entries that represent the entities to be modified. </param>
        <summary>
                Creates the command batches needed to insert/update/delete the entities represented by the given
                list of <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />s.
            </summary>
        <returns> The list of batches to execute. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommands">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands (System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; BatchCommands(class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.Update.IUpdateAdapter updateAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.BatchCommands(System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.Update.IUpdateAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Function BatchCommands (entries As IList(Of IUpdateEntry), updateAdapter As IUpdateAdapter) As IEnumerable(Of ModificationCommandBatch)" />
      <MemberSignature Language="F#" Value="abstract member BatchCommands : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateAdapter -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;" Usage="iCommandBatchPreparer.BatchCommands (entries, updateAdapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="updateAdapter" Type="Microsoft.EntityFrameworkCore.Update.IUpdateAdapter" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entries">The entries that represent the entities to be modified.</param>
        <param name="updateAdapter">The model data.</param>
        <summary>
                Creates the command batches needed to insert/update/delete the entities represented by the given
                list of <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />s.
            </summary>
        <returns>The list of batches to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandBatches">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; CreateCommandBatches (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commandSet, bool moreCommandSets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt; CreateCommandBatches(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; commandSet, bool moreCommandSets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer.CreateCommandBatches(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommandBatches (commandSet As IEnumerable(Of IReadOnlyModificationCommand), moreCommandSets As Boolean) As IEnumerable(Of ModificationCommandBatch)" />
      <MemberSignature Language="F#" Value="abstract member CreateCommandBatches : seq&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;" Usage="iCommandBatchPreparer.CreateCommandBatches (commandSet, moreCommandSets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandSet" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="moreCommandSets" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandSet">The set of commands to be organized in batches.</param>
        <param name="moreCommandSets">Whether more command sets are expected after this one within the same save operation.</param>
        <summary>
                Given a set of modification commands, returns one more ready-to-execute batches for those commands, taking into account e.g.
                maximum batch sizes and other batching constraints.
            </summary>
        <returns>The list of batches to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
