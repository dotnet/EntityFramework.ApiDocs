<Type Name="ColumnModification" FullName="Microsoft.EntityFrameworkCore.Update.ColumnModification">
  <TypeSignature Language="C#" Value="public class ColumnModification" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColumnModification extends System.Object" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" />
  <TypeSignature Language="VB.NET" Value="Public Class ColumnModification" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type ColumnModification = class" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="C#" Value="public class ColumnModification : Microsoft.EntityFrameworkCore.Update.IColumnModification" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColumnModification extends System.Object implements class Microsoft.EntityFrameworkCore.Update.IColumnModification" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class ColumnModification&#xA;Implements IColumnModification" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type ColumnModification = class&#xA;    interface IColumnModification" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.IColumnModification</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Implementation of <see cref="T:Microsoft.EntityFrameworkCore.Update.IColumnModification" /> interface.
                </para>
      <para>
                    This type is typically used by database providers; it is generally not used in application code.
                </para>
    </summary>
    <remarks>
      <para>
                    Represents an update, insert, or delete operation for a single column. <see cref="T:Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" />
                    contain lists of <see cref="T:Microsoft.EntityFrameworkCore.Update.IColumnModification" />.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                    for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (in Microsoft.EntityFrameworkCore.Update.ColumnModificationParameters columnModificationParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor([in]valuetype Microsoft.EntityFrameworkCore.Update.ColumnModificationParameters&amp; columnModificationParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(Microsoft.EntityFrameworkCore.Update.ColumnModificationParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ByRef columnModificationParameters As ColumnModificationParameters)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : ColumnModificationParameters -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification columnModificationParameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnModificationParameters" Type="Microsoft.EntityFrameworkCore.Update.ColumnModificationParameters" RefType="ref" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="columnModificationParameters">Creation parameters.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (string columnName, object originalValue, object value, Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool isRead, bool isWrite, bool isKey, bool isCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, object originalValue, object value, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool isRead, bool isWrite, bool isKey, bool isCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(System.String,System.Object,System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, originalValue As Object, value As Object, property As IProperty, isRead As Boolean, isWrite As Boolean, isKey As Boolean, isCondition As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : string * obj * obj * Microsoft.EntityFrameworkCore.Metadata.IProperty * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification (columnName, originalValue, value, property, isRead, isWrite, isKey, isCondition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" Index="0" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="originalValue" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="3" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="isRead" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="isWrite" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="isKey" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-2.2;efcore-2.1" />
        <Parameter Name="isCondition" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-2.2;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="columnName"> The name of the column. </param>
        <param name="originalValue"> The original value of the property mapped to this column. </param>
        <param name="value"> Gets or sets the current value of the property mapped to this column. </param>
        <param name="property"> The property that maps to the column. </param>
        <param name="isRead"> Indicates whether or not a value must be read from the database for the column. </param>
        <param name="isWrite"> Indicates whether or not a value must be written to the database for the column. </param>
        <param name="isKey"> Indicates whether or not the column part of a primary or alternate key.</param>
        <param name="isCondition"> Indicates whether or not the column is used in the <c>WHERE</c> clause when updating. </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations propertyAnnotations, Func&lt;string&gt; generateParameterName, bool isRead, bool isWrite, bool isKey, bool isCondition, bool isConcurrencyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations propertyAnnotations, class System.Func`1&lt;string&gt; generateParameterName, bool isRead, bool isWrite, bool isKey, bool isCondition, bool isConcurrencyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations,System.Func{System.String},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entry As IUpdateEntry, property As IProperty, propertyAnnotations As IRelationalPropertyAnnotations, generateParameterName As Func(Of String), isRead As Boolean, isWrite As Boolean, isKey As Boolean, isCondition As Boolean, isConcurrencyToken As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations * Func&lt;string&gt; * bool * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification (entry, property, propertyAnnotations, generateParameterName, isRead, isWrite, isKey, isCondition, isConcurrencyToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="propertyAnnotations" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyAnnotations" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="generateParameterName" Type="System.Func&lt;System.String&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="isRead" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="isWrite" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="isKey" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="isCondition" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="isConcurrencyToken" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entry"> The <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" /> that represents the entity that is being modified. </param>
        <param name="property"> The property that maps to the column. </param>
        <param name="propertyAnnotations"> Provides access to relational-specific annotations for the column. </param>
        <param name="generateParameterName"> A delegate for generating parameter names for the update SQL. </param>
        <param name="isRead"> Indicates whether or not a value must be read from the database for the column. </param>
        <param name="isWrite"> Indicates whether or not a value must be written to the database for the column. </param>
        <param name="isKey"> Indicates whether or not the column part of a primary or alternate key.</param>
        <param name="isCondition"> Indicates whether or not the column is used in the <c>WHERE</c> clause when updating. </param>
        <param name="isConcurrencyToken"> Indicates whether or not the column is acting as an optimistic concurrency token. </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, Func&lt;string&gt; generateParameterName, bool isRead, bool isWrite, bool isKey, bool isCondition, bool isConcurrencyToken, bool sensitiveLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class System.Func`1&lt;string&gt; generateParameterName, bool isRead, bool isWrite, bool isKey, bool isCondition, bool isConcurrencyToken, bool sensitiveLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Func{System.String},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entry As IUpdateEntry, property As IProperty, generateParameterName As Func(Of String), isRead As Boolean, isWrite As Boolean, isKey As Boolean, isCondition As Boolean, isConcurrencyToken As Boolean, sensitiveLoggingEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * Func&lt;string&gt; * bool * bool * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification (entry, property, generateParameterName, isRead, isWrite, isKey, isCondition, isConcurrencyToken, sensitiveLoggingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with column")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with column")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with columnModificationParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with columnModificationParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="generateParameterName" Type="System.Func&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isRead" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isWrite" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isKey" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isCondition" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isConcurrencyToken" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entry">The <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" /> that represents the entity that is being modified.</param>
        <param name="property">The property that maps to the column.</param>
        <param name="generateParameterName">A delegate for generating parameter names for the update SQL.</param>
        <param name="isRead">Indicates whether a value must be read from the database for the column.</param>
        <param name="isWrite">Indicates whether a value must be written to the database for the column.</param>
        <param name="isKey">Indicates whether the column part of a primary or alternate key.</param>
        <param name="isCondition">Indicates whether the column is used in the <c>WHERE</c> clause when updating.</param>
        <param name="isConcurrencyToken">Indicates whether the column is acting as an optimistic concurrency token.</param>
        <param name="sensitiveLoggingEnabled">Indicates whether potentially sensitive data (e.g. database values) can be logged.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (string columnName, object originalValue, object value, Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, object originalValue, object value, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(System.String,System.Object,System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, originalValue As Object, value As Object, property As IProperty, isRead As Boolean, isWrite As Boolean, isKey As Boolean, isCondition As Boolean, sensitiveLoggingEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : string * obj * obj * Microsoft.EntityFrameworkCore.Metadata.IProperty * bool * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification (columnName, originalValue, value, property, isRead, isWrite, isKey, isCondition, sensitiveLoggingEnabled)" />
      <MemberSignature Language="C#" Value="public ColumnModification (string columnName, object? originalValue, object? value, Microsoft.EntityFrameworkCore.Metadata.IProperty? property, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with columnType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with columnType")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with columnModificationParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with columnModificationParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="originalValue" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isRead" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isWrite" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isKey" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="isCondition" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="columnName">The name of the column.</param>
        <param name="originalValue">The original value of the property mapped to this column.</param>
        <param name="value">Gets or sets the current value of the property mapped to this column.</param>
        <param name="property">The property that maps to the column.</param>
        <param name="isRead">Indicates whether a value must be read from the database for the column.</param>
        <param name="isWrite">Indicates whether a value must be written to the database for the column.</param>
        <param name="isKey">Indicates whether the column part of a primary or alternate key.</param>
        <param name="isCondition">Indicates whether the column is used in the <c>WHERE</c> clause when updating.</param>
        <param name="sensitiveLoggingEnabled">Indicates whether potentially sensitive data (e.g. database values) can be logged.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Metadata.IColumn column, Func&lt;string&gt; generateParameterName, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Metadata.IColumn column, class System.Func`1&lt;string&gt; generateParameterName, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IColumn,System.Func{System.String},Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entry As IUpdateEntry, property As IProperty, column As IColumn, generateParameterName As Func(Of String), typeMapping As RelationalTypeMapping, isRead As Boolean, isWrite As Boolean, isKey As Boolean, isCondition As Boolean, sensitiveLoggingEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IColumn * Func&lt;string&gt; * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification (entry, property, column, generateParameterName, typeMapping, isRead, isWrite, isKey, isCondition, sensitiveLoggingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with columnModificationParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with columnModificationParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="generateParameterName" Type="System.Func&lt;System.String&gt;" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isRead" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isWrite" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isKey" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isCondition" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entry">The <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" /> that represents the entity that is being modified.</param>
        <param name="property">The property that maps to the column.</param>
        <param name="column">The column to be modified.</param>
        <param name="generateParameterName">A delegate for generating parameter names for the update SQL.</param>
        <param name="typeMapping">The relational type mapping to be used for the command parameter.</param>
        <param name="isRead">Indicates whether a value must be read from the database for the column.</param>
        <param name="isWrite">Indicates whether a value must be written to the database for the column.</param>
        <param name="isKey">Indicates whether the column part of a primary or alternate key.</param>
        <param name="isCondition">Indicates whether the column is used in the <c>WHERE</c> clause when updating.</param>
        <param name="sensitiveLoggingEnabled">Indicates whether potentially sensitive data (e.g. database values) can be logged.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (string columnName, object originalValue, object value, Microsoft.EntityFrameworkCore.Metadata.IProperty property, string columnType, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, object originalValue, object value, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, string columnType, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(System.String,System.Object,System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, originalValue As Object, value As Object, property As IProperty, columnType As String, isRead As Boolean, isWrite As Boolean, isKey As Boolean, isCondition As Boolean, sensitiveLoggingEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : string * obj * obj * Microsoft.EntityFrameworkCore.Metadata.IProperty * string * bool * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification (columnName, originalValue, value, property, columnType, isRead, isWrite, isKey, isCondition, sensitiveLoggingEnabled)" />
      <MemberSignature Language="C#" Value="public ColumnModification (string columnName, object? originalValue, object? value, Microsoft.EntityFrameworkCore.Metadata.IProperty? property, string? columnType, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with type mapping")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with type mapping")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with columnModificationParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with columnModificationParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="originalValue" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="columnType" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isRead" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isWrite" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isKey" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isCondition" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="columnName">The name of the column.</param>
        <param name="originalValue">The original value of the property mapped to this column.</param>
        <param name="value">Gets or sets the current value of the property mapped to this column.</param>
        <param name="property">The property that maps to the column.</param>
        <param name="columnType">The database type of the column.</param>
        <param name="isRead">Indicates whether a value must be read from the database for the column.</param>
        <param name="isWrite">Indicates whether a value must be written to the database for the column.</param>
        <param name="isKey">Indicates whether the column part of a primary or alternate key.</param>
        <param name="isCondition">Indicates whether the column is used in the <c>WHERE</c> clause when updating.</param>
        <param name="sensitiveLoggingEnabled">Indicates whether potentially sensitive data (e.g. database values) can be logged.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnModification (string columnName, object originalValue, object value, Microsoft.EntityFrameworkCore.Metadata.IProperty property, string columnType, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled, bool? isNullable = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, object originalValue, object value, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, string columnType, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled, valuetype System.Nullable`1&lt;bool&gt; isNullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.#ctor(System.String,System.Object,System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, originalValue As Object, value As Object, property As IProperty, columnType As String, typeMapping As RelationalTypeMapping, isRead As Boolean, isWrite As Boolean, isKey As Boolean, isCondition As Boolean, sensitiveLoggingEnabled As Boolean, Optional isNullable As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ColumnModification : string * obj * obj * Microsoft.EntityFrameworkCore.Metadata.IProperty * string * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool * bool * bool * bool * bool * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Update.ColumnModification" Usage="new Microsoft.EntityFrameworkCore.Update.ColumnModification (columnName, originalValue, value, property, columnType, typeMapping, isRead, isWrite, isKey, isCondition, sensitiveLoggingEnabled, isNullable)" />
      <MemberSignature Language="C#" Value="public ColumnModification (string columnName, object? originalValue, object? value, Microsoft.EntityFrameworkCore.Metadata.IProperty? property, string? columnType, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? typeMapping, bool isRead, bool isWrite, bool isKey, bool isCondition, bool sensitiveLoggingEnabled, bool? isNullable = default);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor with columnModificationParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor with columnModificationParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="originalValue" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="columnType" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isRead" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isWrite" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isKey" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isCondition" Type="System.Boolean" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="isNullable" Type="System.Nullable&lt;System.Boolean&gt;" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="columnName">The name of the column.</param>
        <param name="originalValue">The original value of the property mapped to this column.</param>
        <param name="value">Gets or sets the current value of the property mapped to this column.</param>
        <param name="property">The property that maps to the column.</param>
        <param name="columnType">The database type of the column.</param>
        <param name="typeMapping">The relational type mapping to be used for the command parameter.</param>
        <param name="isRead">Indicates whether a value must be read from the database for the column.</param>
        <param name="isWrite">Indicates whether a value must be written to the database for the column.</param>
        <param name="isKey">Indicates whether the column part of a primary or alternate key.</param>
        <param name="isCondition">Indicates whether the column is used in the <c>WHERE</c> clause when updating.</param>
        <param name="sensitiveLoggingEnabled">Indicates whether potentially sensitive data (e.g. database values) can be logged.</param>
        <param name="isNullable">A value indicating whether the value could be null.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSharedColumnModification">
      <MemberSignature Language="C#" Value="public virtual void AddSharedColumnModification (Microsoft.EntityFrameworkCore.Update.ColumnModification modification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSharedColumnModification(class Microsoft.EntityFrameworkCore.Update.ColumnModification modification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.AddSharedColumnModification(Microsoft.EntityFrameworkCore.Update.ColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddSharedColumnModification (modification As ColumnModification)" />
      <MemberSignature Language="F#" Value="abstract member AddSharedColumnModification : Microsoft.EntityFrameworkCore.Update.ColumnModification -&gt; unit&#xA;override this.AddSharedColumnModification : Microsoft.EntityFrameworkCore.Update.ColumnModification -&gt; unit" Usage="columnModification.AddSharedColumnModification modification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="Microsoft.EntityFrameworkCore.Update.ColumnModification" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modification"> The modification for the shared column. </param>
        <summary>
                Adds a modification affecting the same database value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSharedColumnModification">
      <MemberSignature Language="C#" Value="public virtual void AddSharedColumnModification (Microsoft.EntityFrameworkCore.Update.IColumnModification modification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSharedColumnModification(class Microsoft.EntityFrameworkCore.Update.IColumnModification modification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.AddSharedColumnModification(Microsoft.EntityFrameworkCore.Update.IColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddSharedColumnModification (modification As IColumnModification)" />
      <MemberSignature Language="F#" Value="abstract member AddSharedColumnModification : Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; unit&#xA;override this.AddSharedColumnModification : Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; unit" Usage="columnModification.AddSharedColumnModification modification" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IColumnModification.AddSharedColumnModification(Microsoft.EntityFrameworkCore.Update.IColumnModification)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modification">The modification for the shared column.</param>
        <summary>
                Adds a modification affecting the same database value.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IColumnBase? Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IColumnBase Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Column As IColumnBase" />
      <MemberSignature Language="F#" Value="member this.Column : Microsoft.EntityFrameworkCore.Metadata.IColumnBase" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.Column" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IColumnModification.Column</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumnBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public virtual string ColumnName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ColumnName As String" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.ColumnName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.ColumnName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ColumnType">
      <MemberSignature Language="C#" Value="public virtual string ColumnType { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.ColumnType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ColumnType As String" />
      <MemberSignature Language="F#" Value="member this.ColumnType : string" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.ColumnType" />
      <MemberSignature Language="C#" Value="public virtual string? ColumnType { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.ColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The database type of the column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.IUpdateEntry Entry { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.IUpdateEntry Entry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.Entry" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Entry As IUpdateEntry" />
      <MemberSignature Language="F#" Value="member this.Entry : Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.Entry" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.IUpdateEntry? Entry { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.Entry</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.IUpdateEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" /> that represents the entity that is being modified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProviderValue">
      <MemberSignature Language="C#" Value="public static object? GetCurrentProviderValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCurrentProviderValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.GetCurrentProviderValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentProviderValue (entry As IUpdateEntry, property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetCurrentProviderValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.GetCurrentProviderValue (entry, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public static object? GetCurrentValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCurrentValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.GetCurrentValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentValue (entry As IUpdateEntry, property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetCurrentValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.GetCurrentValue (entry, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalProviderValue">
      <MemberSignature Language="C#" Value="public static object? GetOriginalProviderValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetOriginalProviderValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.GetOriginalProviderValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOriginalProviderValue (entry As IUpdateEntry, property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetOriginalProviderValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.GetOriginalProviderValue (entry, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalValue">
      <MemberSignature Language="C#" Value="public static object? GetOriginalValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetOriginalValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.GetOriginalValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOriginalValue (entry As IUpdateEntry, property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetOriginalValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.GetOriginalValue (entry, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConcurrencyToken">
      <MemberSignature Language="C#" Value="public virtual bool IsConcurrencyToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConcurrencyToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsConcurrencyToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsConcurrencyToken As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsConcurrencyToken : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsConcurrencyToken" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.IsConcurrencyToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the column is concurrency token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCondition">
      <MemberSignature Language="C#" Value="public virtual bool IsCondition { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsCondition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCondition As Boolean" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.IsCondition : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsCondition" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual bool IsCondition { get; set; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsCondition As Boolean" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.IsCondition : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsCondition" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.IsCondition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the column is used in the <c>WHERE</c> clause when updating.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public virtual bool IsKey { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKey As Boolean" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.IsKey : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsKey" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual bool IsKey { get; set; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsKey As Boolean" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.IsKey : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsKey" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.IsKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the column is part of a primary or alternate key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public static bool IsModified (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsModified(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsModified(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsModified (entry As IUpdateEntry, property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsModified : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsModified (entry, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public virtual bool? IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsNullable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNullable As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsNullable : Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsNullable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.IsNullable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating whether the column could contain a null value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsRead">
      <MemberSignature Language="C#" Value="public virtual bool IsRead { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRead" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsRead" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsRead As Boolean" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.IsRead : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsRead" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual bool IsRead { get; set; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsRead As Boolean" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.IsRead : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsRead" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.IsRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether a value must be read from the database for the column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsStoreGenerated">
      <MemberSignature Language="C#" Value="public static bool IsStoreGenerated (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsStoreGenerated(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsStoreGenerated(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsStoreGenerated (entry As IUpdateEntry, property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsStoreGenerated : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsStoreGenerated (entry, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWrite">
      <MemberSignature Language="C#" Value="public virtual bool IsWrite { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWrite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.IsWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWrite As Boolean" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.IsWrite : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsWrite" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual bool IsWrite { get; set; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsWrite As Boolean" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.IsWrite : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.IsWrite" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.IsWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether a value must be written to the database for the column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="JsonPath">
      <MemberSignature Language="C#" Value="public virtual string? JsonPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JsonPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.JsonPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JsonPath As String" />
      <MemberSignature Language="F#" Value="member this.JsonPath : string" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.JsonPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IColumnModification.JsonPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OriginalParameterName">
      <MemberSignature Language="C#" Value="public virtual string OriginalParameterName { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalParameterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.OriginalParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalParameterName As String" />
      <MemberSignature Language="F#" Value="member this.OriginalParameterName : string" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.OriginalParameterName" />
      <MemberSignature Language="C#" Value="public virtual string? OriginalParameterName { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.OriginalParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The parameter name to use for the original value parameter (<see cref="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.UseOriginalValueParameter" />), if needed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public virtual object OriginalValue { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalValue As Object" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.OriginalValue : obj" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.OriginalValue" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual object? OriginalValue { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual object? OriginalValue { get; set; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OriginalValue As Object" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.OriginalValue : obj with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.OriginalValue" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.OriginalValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The original value of the property mapped to this column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public virtual string ParameterName { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParameterName As String" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.ParameterName" />
      <MemberSignature Language="C#" Value="public virtual string? ParameterName { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The parameter name to use for the current value parameter (<see cref="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.UseCurrentValueParameter" />), if needed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IProperty Property { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IProperty Property" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.Property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Property As IProperty" />
      <MemberSignature Language="F#" Value="member this.Property : Microsoft.EntityFrameworkCore.Metadata.IProperty" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.Property" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IProperty? Property { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.Property</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The property that maps to the column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ResetParameterNames">
      <MemberSignature Language="C#" Value="public virtual void ResetParameterNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetParameterNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.ResetParameterNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetParameterNames ()" />
      <MemberSignature Language="F#" Value="abstract member ResetParameterNames : unit -&gt; unit&#xA;override this.ResetParameterNames : unit -&gt; unit" Usage="columnModification.ResetParameterNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IColumnModification.ResetParameterNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetStoreGeneratedValue">
      <MemberSignature Language="C#" Value="public static void SetStoreGeneratedValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStoreGeneratedValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ColumnModification.SetStoreGeneratedValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetStoreGeneratedValue (entry As IUpdateEntry, property As IProperty, value As Object)" />
      <MemberSignature Language="F#" Value="static member SetStoreGeneratedValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.SetStoreGeneratedValue (entry, property, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping TypeMapping { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping TypeMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.TypeMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeMapping As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="member this.TypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.TypeMapping" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? TypeMapping { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.TypeMapping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The relational type mapping for the column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseCurrentValue">
      <MemberSignature Language="C#" Value="public virtual bool UseCurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCurrentValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.UseCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UseCurrentValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseCurrentValue : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.UseCurrentValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IColumnModification.UseCurrentValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the current value of the property should be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseCurrentValueParameter">
      <MemberSignature Language="C#" Value="public virtual bool UseCurrentValueParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCurrentValueParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.UseCurrentValueParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UseCurrentValueParameter As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseCurrentValueParameter : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.UseCurrentValueParameter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.UseCurrentValueParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the current value of the property must be passed as a parameter to the SQL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseOriginalValue">
      <MemberSignature Language="C#" Value="public virtual bool UseOriginalValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOriginalValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.UseOriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UseOriginalValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseOriginalValue : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.UseOriginalValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IColumnModification.UseOriginalValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the original value of the property should be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseOriginalValueParameter">
      <MemberSignature Language="C#" Value="public virtual bool UseOriginalValueParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOriginalValueParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.UseOriginalValueParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UseOriginalValueParameter As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseOriginalValueParameter : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.UseOriginalValueParameter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.UseOriginalValueParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the original value of the property must be passed as a parameter to the SQL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseParameter">
      <MemberSignature Language="C#" Value="public virtual bool UseParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.UseParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UseParameter As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseParameter : bool" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.UseParameter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IColumnModification.UseParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the value of the property must be passed as a parameter to the SQL as opposed to being inlined.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual object Value { get; set; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ColumnModification.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As Object" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ColumnModification.Value" />
      <MemberSignature Language="C#" Value="public virtual object? Value { get; set; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Update.IColumnModification.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets the current value of the property mapped to this column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
