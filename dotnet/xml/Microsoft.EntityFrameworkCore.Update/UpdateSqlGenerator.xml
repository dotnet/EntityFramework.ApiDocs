<Type Name="UpdateSqlGenerator" FullName="Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator">
  <TypeSignature Language="C#" Value="public abstract class UpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UpdateSqlGenerator extends System.Object implements class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UpdateSqlGenerator&#xA;Implements IUpdateSqlGenerator" />
  <TypeSignature Language="F#" Value="type UpdateSqlGenerator = class&#xA;    interface IUpdateSqlGenerator" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UpdateSqlGenerator extends System.Object implements class Microsoft.EntityFrameworkCore.Update.Internal.ISingletonUpdateSqlGenerator, class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type UpdateSqlGenerator = class&#xA;    interface IUpdateSqlGenerator&#xA;    interface ISingletonUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.ISingletonUpdateSqlGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    A base class for the <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" /> service that is typically inherited from by database providers.
                    The implementation uses a SQL RETURNING clause to retrieve any database-generated values or for concurrency checking.
                </para>
      <para>
                    This type is typically used by database providers; it is generally not used in application code.
                </para>
    </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance is used by many
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe. This service cannot depend on services registered
                    as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see> for more
                    information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UpdateSqlGenerator (Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (sqlGenerationHelper As ISqlGenerationHelper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper -&gt; Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator sqlGenerationHelper" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="sqlGenerationHelper">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UpdateSqlGenerator (Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (dependencies As UpdateSqlGeneratorDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies -&gt; Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this service.</param>
        <summary>
                Initializes a new instance of this class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBatchHeader">
      <MemberSignature Language="C#" Value="public virtual void AppendBatchHeader (System.Text.StringBuilder commandStringBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendBatchHeader(class System.Text.StringBuilder commandStringBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendBatchHeader(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendBatchHeader (commandStringBuilder As StringBuilder)" />
      <MemberSignature Language="F#" Value="abstract member AppendBatchHeader : System.Text.StringBuilder -&gt; unit&#xA;override this.AppendBatchHeader : System.Text.StringBuilder -&gt; unit" Usage="updateSqlGenerator.AppendBatchHeader commandStringBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendBatchHeader(System.Text.StringBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <summary>
                Appends SQL text that defines the start of a batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendDeleteCommand (System.Text.StringBuilder commandStringBuilder, string name, string schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; conditionOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendDeleteCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; conditionOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendDeleteCommand (commandStringBuilder As StringBuilder, name As String, schema As String, conditionOperations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendDeleteCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendDeleteCommand (commandStringBuilder, name, schema, conditionOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="name"> The name of the table. </param>
        <param name="schema"> The table schema, or <see langword="null" /> to use the default schema. </param>
        <param name="conditionOperations"> The operations used to generate the <c>WHERE</c> clause for the delete. </param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendDeleteCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendDeleteCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendDeleteCommand (commandStringBuilder As StringBuilder, name As String, schema As String, conditionOperations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendDeleteCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendDeleteCommand (commandStringBuilder, name, schema, conditionOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="conditionOperations">The operations used to generate the <c>WHERE</c> clause for the delete.</param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendDeleteCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendDeleteCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendDeleteCommand (commandStringBuilder As StringBuilder, name As String, schema As String, readOperations As IReadOnlyList(Of IColumnModification), conditionOperations As IReadOnlyList(Of IColumnModification), Optional appendReturningOneClause As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * bool -&gt; unit&#xA;override this.AppendDeleteCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * bool -&gt; unit" Usage="updateSqlGenerator.AppendDeleteCommand (commandStringBuilder, name, schema, readOperations, conditionOperations, appendReturningOneClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="appendReturningOneClause" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="readOperations">The operations for column values to be read back.</param>
        <param name="conditionOperations">The operations used to generate the <c>WHERE</c> clause for the delete.</param>
        <param name="appendReturningOneClause">Whether to append an additional constant of 1 to be read back.</param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteCommandHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendDeleteCommandHeader (System.Text.StringBuilder commandStringBuilder, string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendDeleteCommandHeader(class System.Text.StringBuilder commandStringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteCommandHeader(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendDeleteCommandHeader (commandStringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteCommandHeader : System.Text.StringBuilder * string * string -&gt; unit&#xA;override this.AppendDeleteCommandHeader : System.Text.StringBuilder * string * string -&gt; unit" Usage="updateSqlGenerator.AppendDeleteCommandHeader (commandStringBuilder, name, schema)" />
      <MemberSignature Language="C#" Value="protected virtual void AppendDeleteCommandHeader (System.Text.StringBuilder commandStringBuilder, string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Appends a SQL fragment for starting a <c>DELETE</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As ModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="command"> The command that represents the delete operation. </param>
        <param name="commandPosition"> The ordinal of this command in the batch. </param>
        <summary>
                Appends a SQL command for deleting a row to the commands being built.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteReturningOperation">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteReturningOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteReturningOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendDeleteReturningOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AppendDeleteReturningOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendDeleteReturningOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendDeleteReturningOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendDeleteReturningOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <param name="requiresTransaction">Returns whether the SQL appended must be executed in a transaction to work correctly.</param>
        <summary>
                Appends SQL for deleting a row to the commands being built, via a DELETE containing a RETURNING clause for concurrency checking.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFromClause">
      <MemberSignature Language="C#" Value="protected virtual void AppendFromClause (System.Text.StringBuilder commandStringBuilder, string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendFromClause(class System.Text.StringBuilder commandStringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendFromClause(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendFromClause (commandStringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member AppendFromClause : System.Text.StringBuilder * string * string -&gt; unit&#xA;override this.AppendFromClause : System.Text.StringBuilder * string * string -&gt; unit" Usage="updateSqlGenerator.AppendFromClause (commandStringBuilder, name, schema)" />
      <MemberSignature Language="C#" Value="protected virtual void AppendFromClause (System.Text.StringBuilder commandStringBuilder, string name, string? schema);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Appends a SQL fragment for starting a <c>FROM</c> clause.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendIdentityWhereCondition">
      <MemberSignature Language="C#" Value="protected abstract void AppendIdentityWhereCondition (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ColumnModification columnModification);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendIdentityWhereCondition(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ColumnModification columnModification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendIdentityWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AppendIdentityWhereCondition (commandStringBuilder As StringBuilder, columnModification As ColumnModification)" />
      <MemberSignature Language="F#" Value="abstract member AppendIdentityWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ColumnModification -&gt; unit" Usage="updateSqlGenerator.AppendIdentityWhereCondition (commandStringBuilder, columnModification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.ColumnModification" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="columnModification"> The column for which the condition is being generated. </param>
        <summary>
                Appends a <c>WHERE</c> condition for the identity (i.e. key value) of the given column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendIdentityWhereCondition">
      <MemberSignature Language="C#" Value="protected abstract void AppendIdentityWhereCondition (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendIdentityWhereCondition(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendIdentityWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AppendIdentityWhereCondition (commandStringBuilder As StringBuilder, columnModification As IColumnModification)" />
      <MemberSignature Language="F#" Value="abstract member AppendIdentityWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; unit" Usage="updateSqlGenerator.AppendIdentityWhereCondition (commandStringBuilder, columnModification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="columnModification">The column for which the condition is being generated.</param>
        <summary>
                Appends a <c>WHERE</c> condition for the identity (i.e. key value) of the given column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendInsertCommand (System.Text.StringBuilder commandStringBuilder, string name, string schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; writeOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendInsertCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; writeOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendInsertCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendInsertCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendInsertCommand (commandStringBuilder, name, schema, writeOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="name"> The name of the table. </param>
        <param name="schema"> The table schema, or <see langword="null" /> to use the default schema. </param>
        <param name="writeOperations"> The operations for each column. </param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendInsertCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendInsertCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendInsertCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendInsertCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendInsertCommand (commandStringBuilder, name, schema, writeOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="writeOperations">The operations for each column.</param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendInsertCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendInsertCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendInsertCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of IColumnModification), readOperations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendInsertCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendInsertCommand (commandStringBuilder, name, schema, writeOperations, readOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="writeOperations">The operations with the values to insert for each column.</param>
        <param name="readOperations">The operations for column values to be read back.</param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertCommandHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendInsertCommandHeader (System.Text.StringBuilder commandStringBuilder, string name, string schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendInsertCommandHeader(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertCommandHeader(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendInsertCommandHeader (commandStringBuilder As StringBuilder, name As String, schema As String, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendInsertCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendInsertCommandHeader (commandStringBuilder, name, schema, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="name"> The name of the table. </param>
        <param name="schema"> The table schema, or <see langword="null" /> to use the default schema. </param>
        <param name="operations"> The operations representing the data to be inserted. </param>
        <summary>
                Appends a SQL fragment for starting an <c>INSERT</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertCommandHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendInsertCommandHeader (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendInsertCommandHeader(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertCommandHeader(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendInsertCommandHeader (commandStringBuilder As StringBuilder, name As String, schema As String, operations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendInsertCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendInsertCommandHeader (commandStringBuilder, name, schema, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="operations">The operations representing the data to be inserted.</param>
        <summary>
                Appends a SQL fragment for starting an <c>INSERT</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendInsertOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As ModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="command"> The command that represents the delete operation. </param>
        <param name="commandPosition"> The ordinal of this command in the batch. </param>
        <summary>
                Appends a SQL command for inserting a row to the commands being built.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendInsertReturningOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertReturningOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertReturningOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendInsertReturningOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendInsertReturningOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendInsertReturningOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendInsertReturningOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendInsertReturningOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <param name="requiresTransaction">Returns whether the SQL appended must be executed in a transaction to work correctly.</param>
        <summary>
                Appends SQL for inserting a row to the commands being built, via an INSERT containing an optional RETURNING clause to retrieve
                any database-generated values.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public virtual void AppendNextSequenceValueOperation (System.Text.StringBuilder commandStringBuilder, string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendNextSequenceValueOperation(class System.Text.StringBuilder commandStringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendNextSequenceValueOperation(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendNextSequenceValueOperation (commandStringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member AppendNextSequenceValueOperation : System.Text.StringBuilder * string * string -&gt; unit&#xA;override this.AppendNextSequenceValueOperation : System.Text.StringBuilder * string * string -&gt; unit" Usage="updateSqlGenerator.AppendNextSequenceValueOperation (commandStringBuilder, name, schema)" />
      <MemberSignature Language="C#" Value="public virtual void AppendNextSequenceValueOperation (System.Text.StringBuilder commandStringBuilder, string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendNextSequenceValueOperation(System.Text.StringBuilder,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL fragment should be appended.</param>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Generates a SQL fragment that will get the next value from the given sequence and appends it to
                the full command being built by the given <see cref="T:System.Text.StringBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendObtainNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public virtual void AppendObtainNextSequenceValueOperation (System.Text.StringBuilder commandStringBuilder, string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendObtainNextSequenceValueOperation(class System.Text.StringBuilder commandStringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendObtainNextSequenceValueOperation(System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendObtainNextSequenceValueOperation (commandStringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member AppendObtainNextSequenceValueOperation : System.Text.StringBuilder * string * string -&gt; unit&#xA;override this.AppendObtainNextSequenceValueOperation : System.Text.StringBuilder * string * string -&gt; unit" Usage="updateSqlGenerator.AppendObtainNextSequenceValueOperation (commandStringBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendObtainNextSequenceValueOperation(System.Text.StringBuilder,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendReturningClause">
      <MemberSignature Language="C#" Value="protected virtual void AppendReturningClause (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations, string? additionalValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendReturningClause(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations, string additionalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendReturningClause(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendReturningClause (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of IColumnModification), Optional additionalValues As String = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member AppendReturningClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * string -&gt; unit&#xA;override this.AppendReturningClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * string -&gt; unit" Usage="updateSqlGenerator.AppendReturningClause (commandStringBuilder, operations, additionalValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="additionalValues" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="operations">The operations for column values to be read back.</param>
        <param name="additionalValues">Additional values to be read back.</param>
        <summary>
                Appends a clause used to return generated values from an INSERT or UPDATE statement.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendRowsAffectedWhereCondition">
      <MemberSignature Language="C#" Value="protected abstract void AppendRowsAffectedWhereCondition (System.Text.StringBuilder commandStringBuilder, int expectedRowsAffected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendRowsAffectedWhereCondition(class System.Text.StringBuilder commandStringBuilder, int32 expectedRowsAffected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendRowsAffectedWhereCondition(System.Text.StringBuilder,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AppendRowsAffectedWhereCondition (commandStringBuilder As StringBuilder, expectedRowsAffected As Integer)" />
      <MemberSignature Language="F#" Value="abstract member AppendRowsAffectedWhereCondition : System.Text.StringBuilder * int -&gt; unit" Usage="updateSqlGenerator.AppendRowsAffectedWhereCondition (commandStringBuilder, expectedRowsAffected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="expectedRowsAffected" Type="System.Int32" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="expectedRowsAffected">The expected number of rows affected.</param>
        <summary>
                Appends a <c>WHERE</c> condition checking rows affected.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSelectAffectedCommand">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCommand (System.Text.StringBuilder commandStringBuilder, string name, string schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; readOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; conditionOperations, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; readOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; conditionOperations, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSelectAffectedCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AppendSelectAffectedCommand (commandStringBuilder As StringBuilder, name As String, schema As String, readOperations As IReadOnlyList(Of ColumnModification), conditionOperations As IReadOnlyList(Of ColumnModification), commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendSelectAffectedCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendSelectAffectedCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendSelectAffectedCommand (commandStringBuilder, name, schema, readOperations, conditionOperations, commandPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="name"> The name of the table. </param>
        <param name="schema"> The table schema, or <see langword="null" /> to use the default schema. </param>
        <param name="readOperations"> The operations representing the data to be read. </param>
        <param name="conditionOperations"> The operations used to generate the <c>WHERE</c> clause for the select. </param>
        <param name="commandPosition"> The ordinal of the command for which rows affected it being returned. </param>
        <summary>
                Appends a SQL command for selecting affected data.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for this command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSelectAffectedCommand">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSelectAffectedCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AppendSelectAffectedCommand (commandStringBuilder As StringBuilder, name As String, schema As String, readOperations As IReadOnlyList(Of IColumnModification), conditionOperations As IReadOnlyList(Of IColumnModification), commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendSelectAffectedCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendSelectAffectedCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendSelectAffectedCommand (commandStringBuilder, name, schema, readOperations, conditionOperations, commandPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="5" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="readOperations">The operations representing the data to be read.</param>
        <param name="conditionOperations">The operations used to generate the <c>WHERE</c> clause for the select.</param>
        <param name="commandPosition">The ordinal of the command for which rows affected it being returned.</param>
        <summary>
                Appends a SQL command for selecting affected data.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for this command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSelectAffectedCountCommand">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand (System.Text.StringBuilder commandStringBuilder, string name, string schema, int commandPosition);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSelectAffectedCountCommand(System.Text.StringBuilder,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AppendSelectAffectedCountCommand (commandStringBuilder As StringBuilder, name As String, schema As String, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendSelectAffectedCountCommand : System.Text.StringBuilder * string * string * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendSelectAffectedCountCommand : System.Text.StringBuilder * string * string * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendSelectAffectedCountCommand (commandStringBuilder, name, schema, commandPosition)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, int commandPosition);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="commandPosition">The ordinal of the command for which rows affected it being returned.</param>
        <summary>
                Appends a SQL command for selecting the number of rows affected.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for this command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSelectCommandHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendSelectCommandHeader (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendSelectCommandHeader(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSelectCommandHeader(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendSelectCommandHeader (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendSelectCommandHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendSelectCommandHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendSelectCommandHeader (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="operations"> The operations representing the data to be read. </param>
        <summary>
                Appends a SQL fragment for starting an <c>SELECT</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSelectCommandHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendSelectCommandHeader (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendSelectCommandHeader(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSelectCommandHeader(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendSelectCommandHeader (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendSelectCommandHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendSelectCommandHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendSelectCommandHeader (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="operations">The operations representing the data to be read.</param>
        <summary>
                Appends a SQL fragment for starting a <c>SELECT</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSqlLiteral">
      <MemberSignature Language="C#" Value="protected static void AppendSqlLiteral (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IColumnModification modification, string? tableName, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AppendSqlLiteral(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IColumnModification modification, string tableName, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSqlLiteral(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IColumnModification,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub AppendSqlLiteral (commandStringBuilder As StringBuilder, modification As IColumnModification, tableName As String, schema As String)" />
      <MemberSignature Language="F#" Value="static member AppendSqlLiteral : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IColumnModification * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSqlLiteral (commandStringBuilder, modification, tableName, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="modification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="tableName" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL fragment should be appended.</param>
        <param name="modification">The column modification whose literal should get appended.</param>
        <param name="tableName">The table name of the column, used when an exception is thrown.</param>
        <param name="schema">The schema of the column, used when an exception is thrown.</param>
        <summary>
                Appends the literal value for <paramref name="modification" /> to the command being built by
                <paramref name="commandStringBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendStoredProcedureCall">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendStoredProcedureCall (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendStoredProcedureCall(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendStoredProcedureCall(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendStoredProcedureCall (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendStoredProcedureCall : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendStoredProcedureCall : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendStoredProcedureCall (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendStoredProcedureCall(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateColumnValue">
      <MemberSignature Language="C#" Value="protected virtual void AppendUpdateColumnValue (Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper updateSqlGeneratorHelper, Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification, System.Text.StringBuilder stringBuilder, string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendUpdateColumnValue(class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper updateSqlGeneratorHelper, class Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification, class System.Text.StringBuilder stringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateColumnValue(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Update.IColumnModification,System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendUpdateColumnValue (updateSqlGeneratorHelper As ISqlGenerationHelper, columnModification As IColumnModification, stringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateColumnValue : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Update.IColumnModification * System.Text.StringBuilder * string * string -&gt; unit&#xA;override this.AppendUpdateColumnValue : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Update.IColumnModification * System.Text.StringBuilder * string * string -&gt; unit" Usage="updateSqlGenerator.AppendUpdateColumnValue (updateSqlGeneratorHelper, columnModification, stringBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateSqlGeneratorHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="stringBuilder" Type="System.Text.StringBuilder" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="updateSqlGeneratorHelper">The update sql generator helper.</param>
        <param name="columnModification">The operation representing the data to be updated.</param>
        <param name="stringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Appends a SQL fragment representing the value that is assigned to a column which is being updated.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendUpdateCommand (System.Text.StringBuilder commandStringBuilder, string name, string schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; writeOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; conditionOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendUpdateCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; writeOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; conditionOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendUpdateCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of ColumnModification), conditionOperations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendUpdateCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendUpdateCommand (commandStringBuilder, name, schema, writeOperations, conditionOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="name"> The name of the table. </param>
        <param name="schema"> The table schema, or <see langword="null" /> to use the default schema. </param>
        <param name="writeOperations"> The operations for each column. </param>
        <param name="conditionOperations"> The operations used to generate the <c>WHERE</c> clause for the update. </param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendUpdateCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendUpdateCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendUpdateCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of IColumnModification), conditionOperations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendUpdateCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendUpdateCommand (commandStringBuilder, name, schema, writeOperations, conditionOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="writeOperations">The operations for each column.</param>
        <param name="conditionOperations">The operations used to generate the <c>WHERE</c> clause for the update.</param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void AppendUpdateCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendUpdateCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendUpdateCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of IColumnModification), readOperations As IReadOnlyList(Of IColumnModification), conditionOperations As IReadOnlyList(Of IColumnModification), Optional appendReturningOneClause As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * bool -&gt; unit&#xA;override this.AppendUpdateCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * bool -&gt; unit" Usage="updateSqlGenerator.AppendUpdateCommand (commandStringBuilder, name, schema, writeOperations, readOperations, conditionOperations, appendReturningOneClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="appendReturningOneClause" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="writeOperations">The operations for each column.</param>
        <param name="readOperations">The operations for column values to be read back.</param>
        <param name="conditionOperations">The operations used to generate the <c>WHERE</c> clause for the update.</param>
        <param name="appendReturningOneClause">Whether to append an additional constant of 1 to be read back.</param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateCommandHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendUpdateCommandHeader (System.Text.StringBuilder commandStringBuilder, string name, string schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendUpdateCommandHeader(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateCommandHeader(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendUpdateCommandHeader (commandStringBuilder As StringBuilder, name As String, schema As String, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendUpdateCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendUpdateCommandHeader (commandStringBuilder, name, schema, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="name"> The name of the table. </param>
        <param name="schema"> The table schema, or <see langword="null" /> to use the default schema. </param>
        <param name="operations"> The operations representing the data to be updated. </param>
        <summary>
                Appends a SQL fragment for starting an <c>UPDATE</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateCommandHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendUpdateCommandHeader (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendUpdateCommandHeader(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateCommandHeader(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendUpdateCommandHeader (commandStringBuilder As StringBuilder, name As String, schema As String, operations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendUpdateCommandHeader : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendUpdateCommandHeader (commandStringBuilder, name, schema, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="operations">The operations representing the data to be updated.</param>
        <summary>
                Appends a SQL fragment for starting an <c>UPDATE</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ModificationCommand command, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As ModificationCommand, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ModificationCommand * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ModificationCommand,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="command"> The command that represents the delete operation. </param>
        <param name="commandPosition"> The ordinal of this command in the batch. </param>
        <summary>
                Appends a SQL command for updating a row to the commands being built.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateReturningOperation">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateReturningOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateReturningOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendUpdateReturningOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AppendUpdateReturningOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendUpdateReturningOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendUpdateReturningOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="updateSqlGenerator.AppendUpdateReturningOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="command">The command that represents the delete operation.</param>
        <param name="commandPosition">The ordinal of this command in the batch.</param>
        <param name="requiresTransaction">Returns whether the SQL appended must be executed in a transaction to work correctly.</param>
        <summary>
                Appends SQL for updating a row to the commands being built, via an UPDATE containing an RETURNING clause to retrieve any
                database-generated values or for concurrency checking.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for the command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendValues">
      <MemberSignature Language="C#" Value="protected virtual void AppendValues (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendValues(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValues(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendValues (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendValues : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendValues : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendValues (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="operations"> The operations for which there are values. </param>
        <summary>
                Appends values after a <see cref="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValuesHeader(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" /> call.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendValues">
      <MemberSignature Language="C#" Value="protected virtual void AppendValues (System.Text.StringBuilder commandStringBuilder, string name, string schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendValues(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValues(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendValues (commandStringBuilder As StringBuilder, name As String, schema As String, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendValues : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendValues : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendValues (commandStringBuilder, name, schema, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="3" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="name"> The name of the table. </param>
        <param name="schema"> The table schema, or <see langword="null" /> to use the default schema. </param>
        <param name="operations"> The operations for which there are values. </param>
        <summary>
                Appends values after a <see cref="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValuesHeader(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" /> call.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendValues">
      <MemberSignature Language="C#" Value="protected virtual void AppendValues (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendValues(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValues(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendValues (commandStringBuilder As StringBuilder, name As String, schema As String, operations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendValues : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendValues : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendValues (commandStringBuilder, name, schema, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="operations">The operations for which there are values.</param>
        <summary>
                Appends values after a <see cref="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValuesHeader(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" /> call.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendValuesHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendValuesHeader (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendValuesHeader(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValuesHeader(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendValuesHeader (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendValuesHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendValuesHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendValuesHeader (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="operations"> The operations for which there are values. </param>
        <summary>
                Appends a SQL fragment for a <c>VALUES</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendValuesHeader">
      <MemberSignature Language="C#" Value="protected virtual void AppendValuesHeader (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendValuesHeader(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValuesHeader(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendValuesHeader (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendValuesHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendValuesHeader : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendValuesHeader (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="operations">The operations for which there are values.</param>
        <summary>
                Appends a SQL fragment for a <c>VALUES</c>.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWhereAffectedClause">
      <MemberSignature Language="C#" Value="protected virtual void AppendWhereAffectedClause (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendWhereAffectedClause(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendWhereAffectedClause(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendWhereAffectedClause (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendWhereAffectedClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendWhereAffectedClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendWhereAffectedClause (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="operations"> The operations from which to build the conditions. </param>
        <summary>
                Appends a <c>WHERE</c> clause involving rows affected.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWhereAffectedClause">
      <MemberSignature Language="C#" Value="protected virtual void AppendWhereAffectedClause (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendWhereAffectedClause(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendWhereAffectedClause(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendWhereAffectedClause (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendWhereAffectedClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendWhereAffectedClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendWhereAffectedClause (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="operations">The operations from which to build the conditions.</param>
        <summary>
                Appends a <c>WHERE</c> clause involving rows affected.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWhereClause">
      <MemberSignature Language="C#" Value="protected virtual void AppendWhereClause (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendWhereClause(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendWhereClause(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendWhereClause (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of ColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendWhereClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit&#xA;override this.AppendWhereClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendWhereClause (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="operations"> The operations from which to build the conditions. </param>
        <summary>
                Appends a <c>WHERE</c> clause.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWhereClause">
      <MemberSignature Language="C#" Value="protected virtual void AppendWhereClause (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendWhereClause(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendWhereClause(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendWhereClause (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="abstract member AppendWhereClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit&#xA;override this.AppendWhereClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="updateSqlGenerator.AppendWhereClause (commandStringBuilder, operations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="operations">The operations from which to build the conditions.</param>
        <summary>
                Appends a <c>WHERE</c> clause.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWhereCondition">
      <MemberSignature Language="C#" Value="protected virtual void AppendWhereCondition (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ColumnModification columnModification, bool useOriginalValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendWhereCondition(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ColumnModification columnModification, bool useOriginalValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ColumnModification,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendWhereCondition (commandStringBuilder As StringBuilder, columnModification As ColumnModification, useOriginalValue As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AppendWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ColumnModification * bool -&gt; unit&#xA;override this.AppendWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ColumnModification * bool -&gt; unit" Usage="updateSqlGenerator.AppendWhereCondition (commandStringBuilder, columnModification, useOriginalValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.ColumnModification" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="useOriginalValue" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder"> The builder to which the SQL should be appended. </param>
        <param name="columnModification"> The column for which the condition is being generated. </param>
        <param name="useOriginalValue">
                If <see langword="true" />, then the original value will be used in the condition, otherwise the current value will be used.
            </param>
        <summary>
                Appends a <c>WHERE</c> condition for the given column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWhereCondition">
      <MemberSignature Language="C#" Value="protected virtual void AppendWhereCondition (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification, bool useOriginalValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendWhereCondition(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification, bool useOriginalValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IColumnModification,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendWhereCondition (commandStringBuilder As StringBuilder, columnModification As IColumnModification, useOriginalValue As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AppendWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IColumnModification * bool -&gt; unit&#xA;override this.AppendWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IColumnModification * bool -&gt; unit" Usage="updateSqlGenerator.AppendWhereCondition (commandStringBuilder, columnModification, useOriginalValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="useOriginalValue" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="columnModification">The column for which the condition is being generated.</param>
        <param name="useOriginalValue">
                If <see langword="true" />, then the original value will be used in the condition, otherwise the current value will be used.
            </param>
        <summary>
                Appends a <c>WHERE</c> condition for the given column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As UpdateSqlGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies" Usage="Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public virtual string GenerateNextSequenceValueOperation (string name, string schema);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateNextSequenceValueOperation(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.GenerateNextSequenceValueOperation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateNextSequenceValueOperation (name As String, schema As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateNextSequenceValueOperation : string * string -&gt; string&#xA;override this.GenerateNextSequenceValueOperation : string * string -&gt; string" Usage="updateSqlGenerator.GenerateNextSequenceValueOperation (name, schema)" />
      <MemberSignature Language="C#" Value="public virtual string GenerateNextSequenceValueOperation (string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.GenerateNextSequenceValueOperation(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Generates SQL that will obtain the next value in the given sequence.
            </summary>
        <returns>The SQL.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GenerateObtainNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public virtual string GenerateObtainNextSequenceValueOperation (string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateObtainNextSequenceValueOperation(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.GenerateObtainNextSequenceValueOperation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateObtainNextSequenceValueOperation (name As String, schema As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateObtainNextSequenceValueOperation : string * string -&gt; string&#xA;override this.GenerateObtainNextSequenceValueOperation : string * string -&gt; string" Usage="updateSqlGenerator.GenerateObtainNextSequenceValueOperation (name, schema)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.GenerateObtainNextSequenceValueOperation(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsIdentityOperation">
      <MemberSignature Language="C#" Value="protected virtual bool IsIdentityOperation (Microsoft.EntityFrameworkCore.Update.IColumnModification modification);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsIdentityOperation(class Microsoft.EntityFrameworkCore.Update.IColumnModification modification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.IsIdentityOperation(Microsoft.EntityFrameworkCore.Update.IColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsIdentityOperation (modification As IColumnModification) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsIdentityOperation : Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; bool&#xA;override this.IsIdentityOperation : Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; bool" Usage="updateSqlGenerator.IsIdentityOperation modification" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="modification">The column modification.</param>
        <summary>
                Returns a value indicating whether the given modification represents an auto-incrementing column.
            </summary>
        <returns>
          <see langword="true" /> if the given modification represents an auto-incrementing column.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependEnsureAutocommit">
      <MemberSignature Language="C#" Value="public virtual void PrependEnsureAutocommit (System.Text.StringBuilder commandStringBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependEnsureAutocommit(class System.Text.StringBuilder commandStringBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.PrependEnsureAutocommit(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrependEnsureAutocommit (commandStringBuilder As StringBuilder)" />
      <MemberSignature Language="F#" Value="abstract member PrependEnsureAutocommit : System.Text.StringBuilder -&gt; unit&#xA;override this.PrependEnsureAutocommit : System.Text.StringBuilder -&gt; unit" Usage="updateSqlGenerator.PrependEnsureAutocommit commandStringBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.PrependEnsureAutocommit(System.Text.StringBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be prepended.</param>
        <summary>
                Prepends a SQL command for turning on autocommit mode in the database, in case it is off.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlGenerationHelper">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.SqlGenerationHelper" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SqlGenerationHelper As ISqlGenerationHelper" />
      <MemberSignature Language="F#" Value="member this.SqlGenerationHelper : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Usage="Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.SqlGenerationHelper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Helpers for generating update SQL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
