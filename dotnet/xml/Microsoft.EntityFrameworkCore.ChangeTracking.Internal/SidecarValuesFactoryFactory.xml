<Type Name="SidecarValuesFactoryFactory" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory">
  <TypeSignature Language="C#" Value="public class SidecarValuesFactoryFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SidecarValuesFactoryFactory extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SidecarValuesFactoryFactory&#xA;Inherits SnapshotFactoryFactory(Of InternalEntityEntry)" />
  <TypeSignature Language="F#" Value="type SidecarValuesFactoryFactory = class&#xA;    inherit SnapshotFactoryFactory&lt;InternalEntityEntry&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TInput">Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SidecarValuesFactoryFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyCount">
      <MemberSignature Language="C#" Value="protected override int GetPropertyCount (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 GetPropertyCount(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetPropertyCount (entityType As IEntityType) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetPropertyCount : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; int" Usage="sidecarValuesFactoryFactory.GetPropertyCount entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyCount">
      <MemberSignature Language="C#" Value="protected override int GetPropertyCount (Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 GetPropertyCount(class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetPropertyCount (entityType As IRuntimeEntityType) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetPropertyCount : Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType -&gt; int" Usage="sidecarValuesFactoryFactory.GetPropertyCount entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyIndex">
      <MemberSignature Language="C#" Value="protected override int GetPropertyIndex (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 GetPropertyIndex(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetPropertyIndex (propertyBase As IPropertyBase) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetPropertyIndex : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; int" Usage="sidecarValuesFactoryFactory.GetPropertyIndex propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueComparer">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer GetValueComparer (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer GetValueComparer(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory.GetValueComparer(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetValueComparer (property As IProperty) As ValueComparer" />
      <MemberSignature Language="F#" Value="override this.GetValueComparer : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Usage="sidecarValuesFactoryFactory.GetValueComparer property" />
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? GetValueComparer (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
