<Type Name="StoreGeneratedValuesFactoryFactory" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StoreGeneratedValuesFactoryFactory">
  <TypeSignature Language="C#" Value="public class StoreGeneratedValuesFactoryFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoreGeneratedValuesFactoryFactory extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StoreGeneratedValuesFactoryFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class StoreGeneratedValuesFactoryFactory&#xA;Inherits SidecarValuesFactoryFactory" />
  <TypeSignature Language="F#" Value="type StoreGeneratedValuesFactoryFactory = class&#xA;    inherit SidecarValuesFactoryFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoreGeneratedValuesFactoryFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StoreGeneratedValuesFactoryFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadShadowValueExpression">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression CreateReadShadowValueExpression (System.Linq.Expressions.ParameterExpression parameter, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression CreateReadShadowValueExpression(class System.Linq.Expressions.ParameterExpression parameter, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StoreGeneratedValuesFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateReadShadowValueExpression (parameter As ParameterExpression, property As IPropertyBase) As Expression" />
      <MemberSignature Language="F#" Value="override this.CreateReadShadowValueExpression : System.Linq.Expressions.ParameterExpression * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; System.Linq.Expressions.Expression" Usage="storeGeneratedValuesFactoryFactory.CreateReadShadowValueExpression (parameter, property)" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression CreateReadShadowValueExpression (System.Linq.Expressions.ParameterExpression? parameter, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadValueExpression">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression CreateReadValueExpression (System.Linq.Expressions.ParameterExpression parameter, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression CreateReadValueExpression(class System.Linq.Expressions.ParameterExpression parameter, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StoreGeneratedValuesFactoryFactory.CreateReadValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateReadValueExpression (parameter As ParameterExpression, property As IPropertyBase) As Expression" />
      <MemberSignature Language="F#" Value="override this.CreateReadValueExpression : System.Linq.Expressions.ParameterExpression * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; System.Linq.Expressions.Expression" Usage="storeGeneratedValuesFactoryFactory.CreateReadValueExpression (parameter, property)" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression CreateReadValueExpression (System.Linq.Expressions.ParameterExpression? parameter, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseEntityVariable">
      <MemberSignature Language="C#" Value="protected override bool UseEntityVariable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEntityVariable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StoreGeneratedValuesFactoryFactory.UseEntityVariable" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property UseEntityVariable As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseEntityVariable : bool" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StoreGeneratedValuesFactoryFactory.UseEntityVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
