<Type Name="TemporaryValuesFactoryFactory" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TemporaryValuesFactoryFactory">
  <TypeSignature Language="C#" Value="public class TemporaryValuesFactoryFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemporaryValuesFactoryFactory extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TemporaryValuesFactoryFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class TemporaryValuesFactoryFactory&#xA;Inherits SidecarValuesFactoryFactory" />
  <TypeSignature Language="F#" Value="type TemporaryValuesFactoryFactory = class&#xA;    inherit SidecarValuesFactoryFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SidecarValuesFactoryFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemporaryValuesFactoryFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TemporaryValuesFactoryFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSnapshotExpression">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression CreateSnapshotExpression (Type entityType, System.Linq.Expressions.ParameterExpression parameter, Type[] types, System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; propertyBases);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression CreateSnapshotExpression(class System.Type entityType, class System.Linq.Expressions.ParameterExpression parameter, class System.Type[] types, class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; propertyBases) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TemporaryValuesFactoryFactory.CreateSnapshotExpression(System.Type,System.Linq.Expressions.ParameterExpression,System.Type[],System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateSnapshotExpression (entityType As Type, parameter As ParameterExpression, types As Type(), propertyBases As IList(Of IPropertyBase)) As Expression" />
      <MemberSignature Language="F#" Value="override this.CreateSnapshotExpression : Type * System.Linq.Expressions.ParameterExpression * Type[] * System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; System.Linq.Expressions.Expression" Usage="temporaryValuesFactoryFactory.CreateSnapshotExpression (entityType, parameter, types, propertyBases)" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression CreateSnapshotExpression (Type? entityType, System.Linq.Expressions.ParameterExpression parameter, Type[] types, System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; propertyBases);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression CreateSnapshotExpression (Type? entityType, System.Linq.Expressions.ParameterExpression? parameter, Type[] types, System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase?&gt; propertyBases);" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="parameter" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="propertyBases" Type="System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="types">To be added.</param>
        <param name="propertyBases">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
