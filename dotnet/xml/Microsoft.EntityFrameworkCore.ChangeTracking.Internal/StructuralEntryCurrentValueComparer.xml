<Type Name="StructuralEntryCurrentValueComparer" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StructuralEntryCurrentValueComparer">
  <TypeSignature Language="C#" Value="public class StructuralEntryCurrentValueComparer : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryCurrentValueComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StructuralEntryCurrentValueComparer extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryCurrentValueComparer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StructuralEntryCurrentValueComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class StructuralEntryCurrentValueComparer&#xA;Inherits EntryCurrentValueComparer" />
  <TypeSignature Language="F#" Value="type StructuralEntryCurrentValueComparer = class&#xA;    inherit EntryCurrentValueComparer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryCurrentValueComparer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructuralEntryCurrentValueComparer (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StructuralEntryCurrentValueComparer.#ctor(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As IPropertyBase)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StructuralEntryCurrentValueComparer : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StructuralEntryCurrentValueComparer" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StructuralEntryCurrentValueComparer property" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public override int Compare (Microsoft.EntityFrameworkCore.Update.IUpdateEntry x, Microsoft.EntityFrameworkCore.Update.IUpdateEntry y);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Compare(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry x, class Microsoft.EntityFrameworkCore.Update.IUpdateEntry y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StructuralEntryCurrentValueComparer.Compare(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Compare (x As IUpdateEntry, y As IUpdateEntry) As Integer" />
      <MemberSignature Language="F#" Value="override this.Compare : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; int" Usage="structuralEntryCurrentValueComparer.Compare (x, y)" />
      <MemberSignature Language="C#" Value="public override int Compare (Microsoft.EntityFrameworkCore.Update.IUpdateEntry? x, Microsoft.EntityFrameworkCore.Update.IUpdateEntry? y);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
        <Parameter Name="y" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
