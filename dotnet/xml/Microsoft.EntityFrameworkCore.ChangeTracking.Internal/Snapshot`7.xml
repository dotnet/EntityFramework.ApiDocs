<Type Name="Snapshot&lt;T0,T1,T2,T3,T4,T5,T6&gt;" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot&lt;T0,T1,T2,T3,T4,T5,T6&gt;">
  <TypeSignature Language="C#" Value="public sealed class Snapshot&lt;T0,T1,T2,T3,T4,T5,T6&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Snapshot`7&lt;T0, T1, T2, T3, T4, T5, T6&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Snapshot(Of T0, T1, T2, T3, T4, T5, T6)&#xA;Implements ISnapshot" />
  <TypeSignature Language="F#" Value="type Snapshot&lt;'T0, 'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; = class&#xA;    interface ISnapshot" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T0" />
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T0">To be added.</typeparam>
    <typeparam name="T1">To be added.</typeparam>
    <typeparam name="T2">To be added.</typeparam>
    <typeparam name="T3">To be added.</typeparam>
    <typeparam name="T4">To be added.</typeparam>
    <typeparam name="T5">To be added.</typeparam>
    <typeparam name="T6">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Snapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Snapshot (T0 value0, T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T0 value0, !T1 value1, !T2 value2, !T3 value3, !T4 value4, !T5 value5, !T6 value6) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7.#ctor(`0,`1,`2,`3,`4,`5,`6)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value0 As T0, value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot&lt;'T0, 'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; : 'T0 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot&lt;'T0, 'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot&lt;'T0, 'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; (value0, value1, value2, value3, value4, value5, value6)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value0" Type="T0" />
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
      </Parameters>
      <Docs>
        <param name="value0">To be added.</param>
        <param name="value1">To be added.</param>
        <param name="value2">To be added.</param>
        <param name="value3">To be added.</param>
        <param name="value4">To be added.</param>
        <param name="value5">To be added.</param>
        <param name="value6">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValue&lt;T&gt; (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetValue&lt;T&gt;(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7.GetValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of T) (index As Integer) As T" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; 'T&#xA;override this.GetValue : int -&gt; 'T" Usage="snapshot.GetValue index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="index">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot&lt;'T0, 'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;.Item" />
      <MemberSignature Language="C#" Value="public object? this[int index] { get; set; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
