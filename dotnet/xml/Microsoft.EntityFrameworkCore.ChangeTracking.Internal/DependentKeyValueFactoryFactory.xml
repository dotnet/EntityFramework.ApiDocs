<Type Name="DependentKeyValueFactoryFactory" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory">
  <TypeSignature Language="C#" Value="public class DependentKeyValueFactoryFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependentKeyValueFactoryFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class DependentKeyValueFactoryFactory" />
  <TypeSignature Language="F#" Value="type DependentKeyValueFactoryFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependentKeyValueFactoryFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;TKey&gt; Create&lt;TKey&gt; (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1&lt;!!TKey&gt; Create&lt;TKey&gt;(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create(Of TKey) (foreignKey As IForeignKey) As IDependentKeyValueFactory(Of TKey)" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;'Key&gt;&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;'Key&gt;" Usage="dependentKeyValueFactoryFactory.Create foreignKey" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;TKey&gt; Create&lt;TKey&gt; (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory`1&lt;!!TKey&gt; Create&lt;TKey&gt;(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;'Key&gt;&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;'Key&gt;" Usage="dependentKeyValueFactoryFactory.Create foreignKey" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;TKey&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComposite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;object[]&gt; CreateComposite (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1&lt;object[]&gt; CreateComposite(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComposite (foreignKey As IForeignKey) As IDependentKeyValueFactory(Of Object())" />
      <MemberSignature Language="F#" Value="abstract member CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;obj[]&gt;&#xA;override this.CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;obj[]&gt;" Usage="dependentKeyValueFactoryFactory.CreateComposite foreignKey" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;object[]&gt; CreateComposite (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory`1&lt;object[]&gt; CreateComposite(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;obj[]&gt;&#xA;override this.CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;obj[]&gt;" Usage="dependentKeyValueFactoryFactory.CreateComposite foreignKey" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;System.Object[]&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComposite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;object?&gt;&gt; CreateComposite (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;object?&gt;&gt; principalKeyValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;object&gt;&gt; CreateComposite(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;object&gt;&gt; principalKeyValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory{System.Collections.Generic.IReadOnlyList{System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComposite (foreignKey As IForeignKey, principalKeyValueFactory As IPrincipalKeyValueFactory(Of IReadOnlyList(Of Object))) As IDependentKeyValueFactory(Of IReadOnlyList(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;obj&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;obj&gt;&gt;&#xA;override this.CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;obj&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;obj&gt;&gt;" Usage="dependentKeyValueFactoryFactory.CreateComposite (foreignKey, principalKeyValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="principalKeyValueFactory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;System.Collections.Generic.IReadOnlyList&lt;System.Object&gt;&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="principalKeyValueFactory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComposite">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;object[]&gt; CreateComposite (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;object[]&gt; principalKeyValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory`1&lt;object[]&gt; CreateComposite(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory`1&lt;object[]&gt; principalKeyValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory{System.Object[]})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComposite (foreignKey As IForeignKey, principalKeyValueFactory As IPrincipalKeyValueFactory(Of Object())) As IDependentKeyValueFactory(Of Object())" />
      <MemberSignature Language="F#" Value="abstract member CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;obj[]&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;obj[]&gt;&#xA;override this.CreateComposite : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;obj[]&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;obj[]&gt;" Usage="dependentKeyValueFactoryFactory.CreateComposite (foreignKey, principalKeyValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="principalKeyValueFactory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;System.Object[]&gt;" Index="1" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="principalKeyValueFactory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSimple&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;TKey&gt; CreateSimple&lt;TKey&gt; (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1&lt;!!TKey&gt; CreateSimple&lt;TKey&gt;(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSimple(Of TKey) (foreignKey As IForeignKey) As IDependentKeyValueFactory(Of TKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateSimple : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;'Key&gt;&#xA;override this.CreateSimple : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;'Key&gt;" Usage="dependentKeyValueFactoryFactory.CreateSimple foreignKey" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;TKey&gt; CreateSimple&lt;TKey&gt; (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory`1&lt;!!TKey&gt; CreateSimple&lt;TKey&gt;(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member CreateSimple : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;'Key&gt;&#xA;override this.CreateSimple : Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;'Key&gt;" Usage="dependentKeyValueFactoryFactory.CreateSimple foreignKey" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;TKey&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSimple&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;TKey&gt; CreateSimple&lt;TKey&gt; (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;TKey&gt; principalKeyValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory`1&lt;!!TKey&gt; CreateSimple&lt;TKey&gt;(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory`1&lt;!!TKey&gt; principalKeyValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSimple(Of TKey) (foreignKey As IForeignKey, principalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey)) As IDependentKeyValueFactory(Of TKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateSimple : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;'Key&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;'Key&gt;&#xA;override this.CreateSimple : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;'Key&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;'Key&gt;" Usage="dependentKeyValueFactoryFactory.CreateSimple (foreignKey, principalKeyValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="principalKeyValueFactory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;TKey&gt;" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <param name="foreignKey">To be added.</param>
        <param name="principalKeyValueFactory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
