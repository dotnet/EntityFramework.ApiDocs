<Type Name="IIdentityMap&lt;TKey&gt;" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public interface IIdentityMap&lt;in TKey&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IIdentityMap`1&lt;- TKey&gt; implements class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IIdentityMap(Of In TKey)&#xA;Implements IIdentityMap" />
  <TypeSignature Language="F#" Value="type IIdentityMap&lt;'Key&gt; = interface&#xA;    interface IIdentityMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryGetEntryTyped">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry? TryGetEntryTyped (TKey keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntryTyped(!TKey keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap`1.TryGetEntryTyped(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntryTyped (keyValue As TKey) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntryTyped : 'Key -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iIdentityMap.TryGetEntryTyped keyValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValue" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="keyValue">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
