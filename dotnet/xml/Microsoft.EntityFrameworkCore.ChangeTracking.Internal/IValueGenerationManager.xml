<Type Name="IValueGenerationManager" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager">
  <TypeSignature Language="C#" Value="public interface IValueGenerationManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueGenerationManager" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueGenerationManager" />
  <TypeSignature Language="F#" Value="type IValueGenerationManager = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IValueGenerationManager" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>
                The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                The implementation may depend on other services registered with any lifetime.
                The implementation does not need to be thread-safe.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Generate (entry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member Generate : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="iValueGenerationManager.Generate entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey = true);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Generate (entry As InternalEntityEntry, Optional includePrimaryKey As Boolean = true)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member Generate : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool -&gt; unit" Usage="iValueGenerationManager.Generate (entry, includePrimaryKey)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public bool Generate (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey = true);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Generate(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Generate (entry As InternalEntityEntry, Optional includePrimaryKey As Boolean = true) As Boolean" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member Generate : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool -&gt; bool" Usage="iValueGenerationManager.Generate (entry, includePrimaryKey)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="includePrimaryKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GenerateAsync (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GenerateAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateAsync (entry As InternalEntityEntry, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member GenerateAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iValueGenerationManager.GenerateAsync (entry, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GenerateAsync (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey = true, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GenerateAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateAsync (entry As InternalEntityEntry, Optional includePrimaryKey As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member GenerateAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iValueGenerationManager.GenerateAsync (entry, includePrimaryKey, cancellationToken)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; GenerateAsync (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey = true, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; GenerateAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, bool includePrimaryKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateAsync (entry As InternalEntityEntry, Optional includePrimaryKey As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member GenerateAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iValueGenerationManager.GenerateAsync (entry, includePrimaryKey, cancellationToken)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.Threading.Tasks.Task</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="includePrimaryKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MayGetTemporaryValue">
      <MemberSignature Language="C#" Value="public bool MayGetTemporaryValue (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MayGetTemporaryValue(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function MayGetTemporaryValue (property As IProperty, entityType As IEntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MayGetTemporaryValue : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; bool" Usage="iValueGenerationManager.MayGetTemporaryValue (property, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Propagate">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry Propagate (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry Propagate(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Propagate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Propagate (entry As InternalEntityEntry) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member Propagate : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iValueGenerationManager.Propagate entry" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry? Propagate (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropagateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry?&gt; PropagateAsync (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; PropagateAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.PropagateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function PropagateAsync (entry As InternalEntityEntry, cancellationToken As CancellationToken) As Task(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member PropagateAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iValueGenerationManager.PropagateAsync (entry, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
