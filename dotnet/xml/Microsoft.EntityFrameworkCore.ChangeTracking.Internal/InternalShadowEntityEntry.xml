<Type Name="InternalShadowEntityEntry" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry">
  <TypeSignature Language="C#" Value="public class InternalShadowEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InternalShadowEntityEntry extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class InternalShadowEntityEntry&#xA;Inherits InternalEntityEntry" />
  <TypeSignature Language="F#" Value="type InternalShadowEntityEntry = class&#xA;    inherit InternalEntityEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalShadowEntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry (stateManager, entityType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalShadowEntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, entityType As IEntityType, valueBuffer As ValueBuffer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Storage.ValueBuffer -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry (stateManager, entityType, valueBuffer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalShadowEntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, [in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, entityType As IEntityType, ByRef valueBuffer As ValueBuffer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Metadata.IEntityType * ValueBuffer -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry (stateManager, entityType, valueBuffer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" RefType="ref" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-3.0;efcore-5.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public override bool AddToCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddToCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.AddToCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddToCollection (navigation As INavigation, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="override this.AddToCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalShadowEntityEntry.AddToCollection (navigation, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public override bool AddToCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddToCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.AddToCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddToCollection (navigation As INavigation, value As InternalEntityEntry, forMaterialization As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="override this.AddToCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool -&gt; bool" Usage="internalShadowEntityEntry.AddToCollection (navigation, value, forMaterialization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public override bool AddToCollection (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddToCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.AddToCollection(Microsoft.EntityFrameworkCore.Metadata.INavigationBase,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddToCollection (navigationBase As INavigationBase, value As InternalEntityEntry, forMaterialization As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="override this.AddToCollection : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool -&gt; bool" Usage="internalShadowEntityEntry.AddToCollection (navigationBase, value, forMaterialization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationBase" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigationBase">To be added.</param>
        <param name="value">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionContains">
      <MemberSignature Language="C#" Value="public override bool CollectionContains (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CollectionContains(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.CollectionContains(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CollectionContains (navigation As INavigation, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CollectionContains : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalShadowEntityEntry.CollectionContains (navigation, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionContains">
      <MemberSignature Language="C#" Value="public override bool CollectionContains (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CollectionContains(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.CollectionContains(Microsoft.EntityFrameworkCore.Metadata.INavigationBase,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CollectionContains (navigationBase As INavigationBase, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CollectionContains : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalShadowEntityEntry.CollectionContains (navigationBase, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationBase" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigationBase">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="C#" Value="public override object Entity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Entity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.Entity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Entity As Object" />
      <MemberSignature Language="F#" Value="member this.Entity : obj" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.Entity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateCollection">
      <MemberSignature Language="C#" Value="public override object GetOrCreateCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOrCreateCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.GetOrCreateCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrCreateCollection (navigation As INavigation) As Object" />
      <MemberSignature Language="F#" Value="override this.GetOrCreateCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; obj" Usage="internalShadowEntityEntry.GetOrCreateCollection navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateCollection">
      <MemberSignature Language="C#" Value="public override object GetOrCreateCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOrCreateCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.GetOrCreateCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrCreateCollection (navigation As INavigation, forMaterialization As Boolean) As Object" />
      <MemberSignature Language="F#" Value="override this.GetOrCreateCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * bool -&gt; obj" Usage="internalShadowEntityEntry.GetOrCreateCollection (navigation, forMaterialization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateCollection">
      <MemberSignature Language="C#" Value="public override object GetOrCreateCollection (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOrCreateCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.GetOrCreateCollection(Microsoft.EntityFrameworkCore.Metadata.INavigationBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrCreateCollection (navigationBase As INavigationBase, forMaterialization As Boolean) As Object" />
      <MemberSignature Language="F#" Value="override this.GetOrCreateCollection : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * bool -&gt; obj" Usage="internalShadowEntityEntry.GetOrCreateCollection (navigationBase, forMaterialization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationBase" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigationBase">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyHasDefaultValue">
      <MemberSignature Language="C#" Value="protected override bool PropertyHasDefaultValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool PropertyHasDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.PropertyHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function PropertyHasDefaultValue (propertyBase As IPropertyBase) As Boolean" />
      <MemberSignature Language="F#" Value="override this.PropertyHasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; bool" Usage="internalShadowEntityEntry.PropertyHasDefaultValue propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPropertyValue">
      <MemberSignature Language="C#" Value="protected override object ReadPropertyValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object ReadPropertyValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.ReadPropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReadPropertyValue (propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="override this.ReadPropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj" Usage="internalShadowEntityEntry.ReadPropertyValue propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadShadowValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected override T ReadShadowValue&lt;T&gt; (int shadowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance !!T ReadShadowValue&lt;T&gt;(int32 shadowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.ReadShadowValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReadShadowValue(Of T) (shadowIndex As Integer) As T" />
      <MemberSignature Language="F#" Value="override this.ReadShadowValue : int -&gt; 'T" Usage="internalShadowEntityEntry.ReadShadowValue shadowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="shadowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="shadowIndex">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromCollection">
      <MemberSignature Language="C#" Value="public override void RemoveFromCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveFromCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.RemoveFromCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveFromCollection (navigation As INavigation, value As InternalEntityEntry)" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.RemoveFromCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="internalShadowEntityEntry.RemoveFromCollection (navigation, value)" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public override bool RemoveFromCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RemoveFromCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RemoveFromCollection (navigation As INavigation, value As InternalEntityEntry) As Boolean" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="override this.RemoveFromCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalShadowEntityEntry.RemoveFromCollection (navigation, value)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.1;efcore-2.2">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromCollection">
      <MemberSignature Language="C#" Value="public override bool RemoveFromCollection (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RemoveFromCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigationBase, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.RemoveFromCollection(Microsoft.EntityFrameworkCore.Metadata.INavigationBase,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RemoveFromCollection (navigationBase As INavigationBase, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="override this.RemoveFromCollection : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalShadowEntityEntry.RemoveFromCollection (navigationBase, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationBase" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigationBase">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyValue">
      <MemberSignature Language="C#" Value="protected override void WritePropertyValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WritePropertyValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.WritePropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WritePropertyValue (propertyBase As IPropertyBase, value As Object)" />
      <MemberSignature Language="F#" Value="override this.WritePropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit" Usage="internalShadowEntityEntry.WritePropertyValue (propertyBase, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyValue">
      <MemberSignature Language="C#" Value="protected override void WritePropertyValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WritePropertyValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.WritePropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WritePropertyValue (propertyBase As IPropertyBase, value As Object, forMaterialization As Boolean)" />
      <MemberSignature Language="F#" Value="override this.WritePropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj * bool -&gt; unit" Usage="internalShadowEntityEntry.WritePropertyValue (propertyBase, value, forMaterialization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
