<Type Name="SqliteQuerySqlGenerator" FullName="Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator">
  <TypeSignature Language="C#" Value="public class SqliteQuerySqlGenerator : Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteQuerySqlGenerator extends Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteQuerySqlGenerator&#xA;Inherits DefaultQuerySqlGenerator" />
  <TypeSignature Language="F#" Value="type SqliteQuerySqlGenerator = class&#xA;    inherit DefaultQuerySqlGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteQuerySqlGenerator (Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies dependencies, Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QuerySqlGeneratorDependencies, selectExpression As SelectExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator : Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies * Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator (dependencies, selectExpression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" Index="1" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="selectExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteQuerySqlGenerator (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory relationalCommandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper, Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory relationalCommandBuilderFactory, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper, class Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationalCommandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, relationalTypeMapper As IRelationalTypeMapper, selectExpression As SelectExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator (relationalCommandBuilderFactory, sqlGenerationHelper, parameterNameGeneratorFactory, relationalTypeMapper, selectExpression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationalCommandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="relationalCommandBuilderFactory">To be added.</param>
        <param name="sqlGenerationHelper">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="relationalTypeMapper">To be added.</param>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcatOperator">
      <MemberSignature Language="C#" Value="protected override string ConcatOperator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConcatOperator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator.ConcatOperator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ConcatOperator As String" />
      <MemberSignature Language="F#" Value="member this.ConcatOperator : string" Usage="Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator.ConcatOperator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLimitOffset">
      <MemberSignature Language="C#" Value="protected override void GenerateLimitOffset (Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GenerateLimitOffset(class Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GenerateLimitOffset (selectExpression As SelectExpression)" />
      <MemberSignature Language="F#" Value="override this.GenerateLimitOffset : Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression -&gt; unit" Usage="sqliteQuerySqlGenerator.GenerateLimitOffset selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateOperator">
      <MemberSignature Language="C#" Value="protected override string GenerateOperator (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateOperator(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateOperator (expression As Expression) As String" />
      <MemberSignature Language="F#" Value="override this.GenerateOperator : System.Linq.Expressions.Expression -&gt; string" Usage="sqliteQuerySqlGenerator.GenerateOperator expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTop">
      <MemberSignature Language="C#" Value="protected override void GenerateTop (Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GenerateTop(class Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.SqliteQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GenerateTop (selectExpression As SelectExpression)" />
      <MemberSignature Language="F#" Value="override this.GenerateTop : Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression -&gt; unit" Usage="sqliteQuerySqlGenerator.GenerateTop selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
