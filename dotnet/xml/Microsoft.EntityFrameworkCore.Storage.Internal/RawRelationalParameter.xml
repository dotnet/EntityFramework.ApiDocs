<Type Name="RawRelationalParameter" FullName="Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter">
  <TypeSignature Language="C#" Value="public class RawRelationalParameter : Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RawRelationalParameter extends Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class RawRelationalParameter&#xA;Inherits RelationalParameterBase" />
  <TypeSignature Language="F#" Value="type RawRelationalParameter = class&#xA;    inherit RelationalParameterBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RawRelationalParameter (string invariantName, System.Data.Common.DbParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string invariantName, class System.Data.Common.DbParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.#ctor(System.String,System.Data.Common.DbParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (invariantName As String, parameter As DbParameter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter : string * System.Data.Common.DbParameter -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter (invariantName, parameter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="invariantName" Type="System.String" />
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
      </Parameters>
      <Docs>
        <param name="invariantName">To be added.</param>
        <param name="parameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDbParameter">
      <MemberSignature Language="C#" Value="public override void AddDbParameter (System.Data.Common.DbCommand command, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddDbParameter(class System.Data.Common.DbCommand command, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddDbParameter (command As DbCommand, parameterValues As IReadOnlyDictionary(Of String, Object))" />
      <MemberSignature Language="F#" Value="override this.AddDbParameter : System.Data.Common.DbCommand * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; unit" Usage="rawRelationalParameter.AddDbParameter (command, parameterValues)" />
      <MemberSignature Language="C#" Value="public override void AddDbParameter (System.Data.Common.DbCommand command, System.Collections.Generic.IReadOnlyDictionary&lt;string,object?&gt; parameterValues);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public override void AddDbParameter (System.Data.Common.DbCommand command, System.Collections.Generic.IReadOnlyDictionary&lt;string,object?&gt;? parameterValues);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="parameterValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDbParameter">
      <MemberSignature Language="C#" Value="public override void AddDbParameter (System.Data.Common.DbCommand command, object value);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddDbParameter(class System.Data.Common.DbCommand command, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddDbParameter (command As DbCommand, value As Object)" />
      <MemberSignature Language="F#" Value="override this.AddDbParameter : System.Data.Common.DbCommand * obj -&gt; unit" Usage="rawRelationalParameter.AddDbParameter (command, value)" />
      <MemberSignature Language="C#" Value="public override void AddDbParameter (System.Data.Common.DbCommand command, object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvariantName">
      <MemberSignature Language="C#" Value="public override string InvariantName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvariantName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.InvariantName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InvariantName As String" />
      <MemberSignature Language="F#" Value="member this.InvariantName : string" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RawRelationalParameter.InvariantName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
