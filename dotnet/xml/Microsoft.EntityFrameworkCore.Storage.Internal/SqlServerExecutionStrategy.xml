<Type Name="SqlServerExecutionStrategy" FullName="Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy">
  <TypeSignature Language="C#" Value="public class SqlServerExecutionStrategy : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerExecutionStrategy extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerExecutionStrategy&#xA;Implements IExecutionStrategy" />
  <TypeSignature Language="F#" Value="type SqlServerExecutionStrategy = class&#xA;    interface IExecutionStrategy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerExecutionStrategy (Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ExecutionStrategyDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy : Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TState,TResult&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TState,TResult&gt; (Func&lt;TState,TResult&gt; operation, Func&lt;TState,Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt; verifySucceeded, TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Execute&lt;TState, TResult&gt;(class System.Func`2&lt;!!TState, !!TResult&gt; operation, class System.Func`2&lt;!!TState, class Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1&lt;!!TResult&gt;&gt; verifySucceeded, !!TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.Execute``2(System.Func{``0,``1},System.Func{``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TState, TResult) (operation As Func(Of TState, TResult), verifySucceeded As Func(Of TState, ExecutionResult(Of TResult)), state As TState) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : Func&lt;'State, 'Result&gt; * Func&lt;'State, Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt; * 'State -&gt; 'Result&#xA;override this.Execute : Func&lt;'State, 'Result&gt; * Func&lt;'State, Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt; * 'State -&gt; 'Result" Usage="sqlServerExecutionStrategy.Execute (operation, verifySucceeded, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.Execute``2(System.Func{``0,``1},System.Func{``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}},``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="operation" Type="System.Func&lt;TState,TResult&gt;" Index="0" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="verifySucceeded" Type="System.Func&lt;TState,Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt;" Index="1" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="state" Type="TState" Index="2" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="operation">To be added.</param>
        <param name="verifySucceeded">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TState,TResult&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TState,TResult&gt; (TState state, Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,TResult&gt; operation, Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt; verifySucceeded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Execute&lt;TState, TResult&gt;(!!TState state, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.DbContext, !!TState, !!TResult&gt; operation, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.DbContext, !!TState, class Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1&lt;!!TResult&gt;&gt; verifySucceeded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.Execute``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,``1},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TState, TResult) (state As TState, operation As Func(Of DbContext, TState, TResult), verifySucceeded As Func(Of DbContext, TState, ExecutionResult(Of TResult))) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'State * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, 'Result&gt; * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt; -&gt; 'Result&#xA;override this.Execute : 'State * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, 'Result&gt; * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt; -&gt; 'Result" Usage="sqlServerExecutionStrategy.Execute (state, operation, verifySucceeded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.Execute``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,``1},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="state" Type="TState" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="operation" Type="System.Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,TResult&gt;" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="verifySucceeded" Type="System.Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt;" Index="2" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="state">To be added.</param>
        <param name="operation">To be added.</param>
        <param name="verifySucceeded">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync&lt;TState,TResult&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TResult&gt; ExecuteAsync&lt;TState,TResult&gt; (Func&lt;TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; operation, Func&lt;TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt;&gt; verifySucceeded, TState state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ExecuteAsync&lt;TState, TResult&gt;(class System.Func`3&lt;!!TState, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; operation, class System.Func`3&lt;!!TState, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1&lt;!!TResult&gt;&gt;&gt; verifySucceeded, !!TState state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteAsync(Of TState, TResult) (operation As Func(Of TState, CancellationToken, Task(Of TResult)), verifySucceeded As Func(Of TState, CancellationToken, Task(Of ExecutionResult(Of TResult))), state As TState, cancellationToken As CancellationToken) As Task(Of TResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAsync : Func&lt;'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt;&gt; * Func&lt;'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt;&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;&#xA;override this.ExecuteAsync : Func&lt;'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt;&gt; * Func&lt;'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt;&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="sqlServerExecutionStrategy.ExecuteAsync (operation, verifySucceeded, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},``0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="operation" Type="System.Func&lt;TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="verifySucceeded" Type="System.Func&lt;TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt;&gt;" Index="1" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="state" Type="TState" Index="2" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="operation">To be added.</param>
        <param name="verifySucceeded">To be added.</param>
        <param name="state">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync&lt;TState,TResult&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TResult&gt; ExecuteAsync&lt;TState,TResult&gt; (TState state, Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; operation, Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt;&gt; verifySucceeded, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TResult&gt; ExecuteAsync&lt;TState, TResult&gt;(!!TState state, class System.Func`4&lt;class Microsoft.EntityFrameworkCore.DbContext, !!TState, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; operation, class System.Func`4&lt;class Microsoft.EntityFrameworkCore.DbContext, !!TState, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1&lt;!!TResult&gt;&gt;&gt; verifySucceeded, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteAsync(Of TState, TResult) (state As TState, operation As Func(Of DbContext, TState, CancellationToken, Task(Of TResult)), verifySucceeded As Func(Of DbContext, TState, CancellationToken, Task(Of ExecutionResult(Of TResult))), cancellationToken As CancellationToken) As Task(Of TResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAsync : 'State * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt;&gt; * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;&#xA;override this.ExecuteAsync : 'State * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt;&gt; * Func&lt;Microsoft.EntityFrameworkCore.DbContext, 'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;'Result&gt;&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="sqlServerExecutionStrategy.ExecuteAsync (state, operation, verifySucceeded, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.ExecuteAsync``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="state" Type="TState" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="operation" Type="System.Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="verifySucceeded" Type="System.Func&lt;Microsoft.EntityFrameworkCore.DbContext,TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.ExecutionResult&lt;TResult&gt;&gt;&gt;" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="state">To be added.</param>
        <param name="operation">To be added.</param>
        <param name="verifySucceeded">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As SqlServerExecutionStrategy" />
      <MemberSignature Language="F#" Value="static member Instance : Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetriesOnFailure">
      <MemberSignature Language="C#" Value="public virtual bool RetriesOnFailure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetriesOnFailure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.RetriesOnFailure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RetriesOnFailure As Boolean" />
      <MemberSignature Language="F#" Value="member this.RetriesOnFailure : bool" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerExecutionStrategy.RetriesOnFailure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.RetriesOnFailure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
