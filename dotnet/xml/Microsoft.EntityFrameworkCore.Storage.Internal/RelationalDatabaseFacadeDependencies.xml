<Type Name="RelationalDatabaseFacadeDependencies" FullName="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies">
  <TypeSignature Language="C#" Value="public class RelationalDatabaseFacadeDependencies : IEquatable&lt;Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies&gt;, Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies, Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalDatabaseFacadeDependencies extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies, class Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies, class System.IEquatable`1&lt;class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalDatabaseFacadeDependencies&#xA;Implements IDatabaseFacadeDependencies, IEquatable(Of RelationalDatabaseFacadeDependencies), IRelationalDatabaseFacadeDependencies" />
  <TypeSignature Language="F#" Value="type RelationalDatabaseFacadeDependencies = class&#xA;    interface IRelationalDatabaseFacadeDependencies&#xA;    interface IDatabaseFacadeDependencies&#xA;    interface IEquatable&lt;RelationalDatabaseFacadeDependencies&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RelationalDatabaseFacadeDependencies (Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies original) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As RelationalDatabaseFacadeDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies : Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies original" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" />
      </Parameters>
      <Docs>
        <param name="original">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalDatabaseFacadeDependencies (Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy executionStrategy, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger, Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions coreOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy executionStrategy, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions coreOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager,Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider},Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger,Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionManager As IDbContextTransactionManager, databaseCreator As IDatabaseCreator, executionStrategy As IExecutionStrategy, executionStrategyFactory As IExecutionStrategyFactory, databaseProviders As IEnumerable(Of IDatabaseProvider), commandLogger As IRelationalCommandDiagnosticsLogger, concurrencyDetector As IConcurrencyDetector, relationalConnection As IRelationalConnection, rawSqlCommandBuilder As IRawSqlCommandBuilder, coreOptions As ICoreSingletonOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager * Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory * seq&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; * Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger * Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies (transactionManager, databaseCreator, executionStrategy, executionStrategyFactory, databaseProviders, commandLogger, concurrencyDetector, relationalConnection, rawSqlCommandBuilder, coreOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionManager" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="databaseCreator" Type="Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="executionStrategy" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Index="3" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="databaseProviders" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;" Index="4" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="commandLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" Index="5" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector" Index="6" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="relationalConnection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="7" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="8" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="coreOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions" Index="9" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="transactionManager">To be added.</param>
        <param name="databaseCreator">To be added.</param>
        <param name="executionStrategy">To be added.</param>
        <param name="executionStrategyFactory">To be added.</param>
        <param name="databaseProviders">To be added.</param>
        <param name="commandLogger">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="relationalConnection">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="coreOptions">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalDatabaseFacadeDependencies (Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy executionStrategy, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger, Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions coreOptions, Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider queryProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy executionStrategy, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions coreOptions, class Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider queryProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager,Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider},Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger,Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions,Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionManager As IDbContextTransactionManager, databaseCreator As IDatabaseCreator, executionStrategy As IExecutionStrategy, executionStrategyFactory As IExecutionStrategyFactory, databaseProviders As IEnumerable(Of IDatabaseProvider), commandLogger As IRelationalCommandDiagnosticsLogger, concurrencyDetector As IConcurrencyDetector, relationalConnection As IRelationalConnection, rawSqlCommandBuilder As IRawSqlCommandBuilder, coreOptions As ICoreSingletonOptions, queryProvider As IAsyncQueryProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager * Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory * seq&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; * Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger * Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions * Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies (transactionManager, databaseCreator, executionStrategy, executionStrategyFactory, databaseProviders, commandLogger, concurrencyDetector, relationalConnection, rawSqlCommandBuilder, coreOptions, queryProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionManager" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="databaseCreator" Type="Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="executionStrategy" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" Index="2" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Index="3" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="databaseProviders" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;" Index="4" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="commandLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" Index="5" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector" Index="6" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="relationalConnection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="7" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="8" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="coreOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions" Index="9" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="queryProvider" Type="Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider" Index="10" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="transactionManager">To be added.</param>
        <param name="databaseCreator">To be added.</param>
        <param name="executionStrategy">To be added.</param>
        <param name="executionStrategyFactory">To be added.</param>
        <param name="databaseProviders">To be added.</param>
        <param name="commandLogger">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="relationalConnection">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="coreOptions">To be added.</param>
        <param name="queryProvider">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalDatabaseFacadeDependencies (Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy executionStrategy, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger, Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions coreOptions, Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider queryProvider, Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper adHocMapper, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource relationalTypeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy executionStrategy, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions coreOptions, class Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider queryProvider, class Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper adHocMapper, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource relationalTypeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager,Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider},Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger,Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions,Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider,Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionManager As IDbContextTransactionManager, databaseCreator As IDatabaseCreator, executionStrategy As IExecutionStrategy, executionStrategyFactory As IExecutionStrategyFactory, databaseProviders As IEnumerable(Of IDatabaseProvider), commandLogger As IRelationalCommandDiagnosticsLogger, concurrencyDetector As IConcurrencyDetector, relationalConnection As IRelationalConnection, rawSqlCommandBuilder As IRawSqlCommandBuilder, coreOptions As ICoreSingletonOptions, queryProvider As IAsyncQueryProvider, adHocMapper As IAdHocMapper, relationalTypeMappingSource As IRelationalTypeMappingSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager * Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory * seq&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; * Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger * Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions * Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider * Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies (transactionManager, databaseCreator, executionStrategy, executionStrategyFactory, databaseProviders, commandLogger, concurrencyDetector, relationalConnection, rawSqlCommandBuilder, coreOptions, queryProvider, adHocMapper, relationalTypeMappingSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionManager" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="databaseCreator" Type="Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="executionStrategy" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="databaseProviders" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;" Index="4" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="commandLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" Index="5" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector" Index="6" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="relationalConnection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="7" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="8" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="coreOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions" Index="9" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="queryProvider" Type="Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider" Index="10" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="adHocMapper" Type="Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper" Index="11" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="relationalTypeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="12" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="transactionManager">To be added.</param>
        <param name="databaseCreator">To be added.</param>
        <param name="executionStrategy">To be added.</param>
        <param name="executionStrategyFactory">To be added.</param>
        <param name="databaseProviders">To be added.</param>
        <param name="commandLogger">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="relationalConnection">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="coreOptions">To be added.</param>
        <param name="queryProvider">To be added.</param>
        <param name="adHocMapper">To be added.</param>
        <param name="relationalTypeMappingSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function &lt;Clone&gt;$ () As RelationalDatabaseFacadeDependencies" />
      <MemberSignature Language="F#" Value="abstract member &lt;Clone&gt;$ : unit -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies&#xA;override this.&lt;Clone&gt;$ : unit -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" Usage="relationalDatabaseFacadeDependencies.&lt;Clone&gt;$ " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdHocMapper">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper AdHocMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper AdHocMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.AdHocMapper" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AdHocMapper As IAdHocMapper" />
      <MemberSignature Language="F#" Value="member this.AdHocMapper : Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.AdHocMapper" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.AdHocMapper</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IAdHocMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLogger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger CommandLogger { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger CommandLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.CommandLogger" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandLogger As IRelationalCommandDiagnosticsLogger" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.CommandLogger : Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.CommandLogger" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger CommandLogger { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommandLogger As IRelationalCommandDiagnosticsLogger" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.CommandLogger : Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.CommandLogger" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies.CommandLogger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyDetector">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector ConcurrencyDetector { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector ConcurrencyDetector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ConcurrencyDetector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConcurrencyDetector As IConcurrencyDetector" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyDetector : Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ConcurrencyDetector" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector ConcurrencyDetector { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConcurrencyDetector As IConcurrencyDetector" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyDetector : Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ConcurrencyDetector" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.ConcurrencyDetector</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CoreOptions">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions CoreOptions { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions CoreOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.CoreOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CoreOptions As ICoreSingletonOptions" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.CoreOptions : Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.CoreOptions" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions CoreOptions { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CoreOptions As ICoreSingletonOptions" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.CoreOptions : Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.CoreOptions" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CoreOptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.ICoreSingletonOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseCreator">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator DatabaseCreator { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator DatabaseCreator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.DatabaseCreator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DatabaseCreator As IDatabaseCreator" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.DatabaseCreator : Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.DatabaseCreator" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator DatabaseCreator { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DatabaseCreator As IDatabaseCreator" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.DatabaseCreator : Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.DatabaseCreator" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.DatabaseCreator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; DatabaseProviders { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; DatabaseProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.DatabaseProviders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DatabaseProviders As IEnumerable(Of IDatabaseProvider)" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.DatabaseProviders : seq&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.DatabaseProviders" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; DatabaseProviders { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DatabaseProviders As IEnumerable(Of IDatabaseProvider)" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.DatabaseProviders : seq&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.DatabaseProviders" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.DatabaseProviders</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityContract">
      <MemberSignature Language="C#" Value="protected virtual Type EqualityContract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EqualityContract" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.EqualityContract" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EqualityContract As Type" />
      <MemberSignature Language="F#" Value="member this.EqualityContract : Type" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.EqualityContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public virtual bool Equals (Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.Equals(Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Equals (other As RelationalDatabaseFacadeDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies -&gt; bool" Usage="relationalDatabaseFacadeDependencies.Equals other" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="relationalDatabaseFacadeDependencies.Equals obj" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategy">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy ExecutionStrategy { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy ExecutionStrategy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExecutionStrategy As IExecutionStrategy" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.ExecutionStrategy : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategy" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy ExecutionStrategy { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExecutionStrategy As IExecutionStrategy" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ExecutionStrategy : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategy" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.ExecutionStrategy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyFactory">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategyFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExecutionStrategyFactory As IExecutionStrategyFactory" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.ExecutionStrategyFactory : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategyFactory" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ExecutionStrategyFactory : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategyFactory" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.ExecutionStrategyFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="relationalDatabaseFacadeDependencies.GetHashCode " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CommandLogger">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CommandLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CommandLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.Microsoft#EntityFrameworkCore#Storage#IDatabaseFacadeDependencies#CommandLogger" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CommandLogger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command) Implements IDatabaseFacadeDependencies.CommandLogger" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CommandLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CommandLogger" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CommandLogger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies? left, Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies left, class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.op_Equality(Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies,Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As RelationalDatabaseFacadeDependencies, right As RelationalDatabaseFacadeDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies * Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies -&gt; bool" Usage="left = right" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies? left, Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies left, class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.op_Inequality(Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies,Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As RelationalDatabaseFacadeDependencies, right As RelationalDatabaseFacadeDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies * Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.op_Inequality (left, right)" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintMembers">
      <MemberSignature Language="C#" Value="protected virtual bool PrintMembers (System.Text.StringBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool PrintMembers(class System.Text.StringBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.PrintMembers(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function PrintMembers (builder As StringBuilder) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member PrintMembers : System.Text.StringBuilder -&gt; bool&#xA;override this.PrintMembers : System.Text.StringBuilder -&gt; bool" Usage="relationalDatabaseFacadeDependencies.PrintMembers builder" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider QueryProvider { get; init; }" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider QueryProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.QueryProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueryProvider As IAsyncQueryProvider" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.QueryProvider : Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.QueryProvider" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider QueryProvider { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryProvider As IAsyncQueryProvider" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.QueryProvider : Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.QueryProvider" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.QueryProvider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.IAsyncQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawSqlCommandBuilder">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder RawSqlCommandBuilder { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder RawSqlCommandBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.RawSqlCommandBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RawSqlCommandBuilder As IRawSqlCommandBuilder" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.RawSqlCommandBuilder : Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.RawSqlCommandBuilder" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder RawSqlCommandBuilder { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawSqlCommandBuilder As IRawSqlCommandBuilder" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.RawSqlCommandBuilder : Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.RawSqlCommandBuilder" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies.RawSqlCommandBuilder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalConnection">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalConnection RelationalConnection { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection RelationalConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.RelationalConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RelationalConnection As IRelationalConnection" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.RelationalConnection : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.RelationalConnection" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalConnection RelationalConnection { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RelationalConnection As IRelationalConnection" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.RelationalConnection : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.RelationalConnection" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies.RelationalConnection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="relationalDatabaseFacadeDependencies.ToString " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionManager">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager TransactionManager { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager TransactionManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.TransactionManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransactionManager As IDbContextTransactionManager" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.TransactionManager : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.TransactionManager" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager TransactionManager { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TransactionManager As IDbContextTransactionManager" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.TransactionManager : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.TransactionManager" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-8.0">P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.TransactionManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMappingSource">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource TypeMappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource TypeMappingSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.TypeMappingSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeMappingSource As ITypeMappingSource" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalDatabaseFacadeDependencies.TypeMappingSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.TypeMappingSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
