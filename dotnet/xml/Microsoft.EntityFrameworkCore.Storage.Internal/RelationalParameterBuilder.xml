<Type Name="RelationalParameterBuilder" FullName="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder">
  <TypeSignature Language="C#" Value="public class RelationalParameterBuilder : Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalParameterBuilder extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalParameterBuilder&#xA;Implements IRelationalParameterBuilder" />
  <TypeSignature Language="F#" Value="type RelationalParameterBuilder = class&#xA;    interface IRelationalParameterBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalParameterBuilder (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMapper As IRelationalTypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder typeMapper" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="typeMapper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalParameterBuilder (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMappingSource As IRelationalTypeMappingSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder typeMappingSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompositeParameter">
      <MemberSignature Language="C#" Value="public virtual void AddCompositeParameter (string invariantName, Action&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCompositeParameter(string invariantName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCompositeParameter (invariantName As String, buildAction As Action(Of IRelationalParameterBuilder))" />
      <MemberSignature Language="F#" Value="abstract member AddCompositeParameter : string * Action&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt; -&gt; unit&#xA;override this.AddCompositeParameter : string * Action&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt; -&gt; unit" Usage="relationalParameterBuilder.AddCompositeParameter (invariantName, buildAction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invariantName" Type="System.String" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="invariantName">To be added.</param>
        <param name="buildAction">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public virtual void AddParameter (string invariantName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParameter(string invariantName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddParameter (invariantName As String, name As String)" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : string * string -&gt; unit&#xA;override this.AddParameter : string * string -&gt; unit" Usage="relationalParameterBuilder.AddParameter (invariantName, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invariantName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="invariantName">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public virtual void AddParameter (string invariantName, string name, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParameter(string invariantName, string name, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddParameter (invariantName As String, name As String, property As IProperty)" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : string * string * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit&#xA;override this.AddParameter : string * string * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="relationalParameterBuilder.AddParameter (invariantName, name, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invariantName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="invariantName">To be added.</param>
        <param name="name">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public virtual void AddParameter (string invariantName, string name, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParameter(string invariantName, string name, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddParameter (invariantName As String, name As String, typeMapping As RelationalTypeMapping, nullable As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : string * string * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; unit&#xA;override this.AddParameter : string * string * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; unit" Usage="relationalParameterBuilder.AddParameter (invariantName, name, typeMapping, nullable)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invariantName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
        <Parameter Name="nullable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invariantName">To be added.</param>
        <param name="name">To be added.</param>
        <param name="typeMapping">To be added.</param>
        <param name="nullable">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyParameter">
      <MemberSignature Language="C#" Value="public virtual void AddPropertyParameter (string invariantName, string name, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPropertyParameter(string invariantName, string name, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddPropertyParameter (invariantName As String, name As String, property As IProperty)" />
      <MemberSignature Language="F#" Value="abstract member AddPropertyParameter : string * string * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit&#xA;override this.AddPropertyParameter : string * string * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="relationalParameterBuilder.AddPropertyParameter (invariantName, name, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invariantName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="invariantName">To be added.</param>
        <param name="name">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRawParameter">
      <MemberSignature Language="C#" Value="public virtual void AddRawParameter (string invariantName, System.Data.Common.DbParameter dbParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRawParameter(string invariantName, class System.Data.Common.DbParameter dbParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddRawParameter(System.String,System.Data.Common.DbParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRawParameter (invariantName As String, dbParameter As DbParameter)" />
      <MemberSignature Language="F#" Value="abstract member AddRawParameter : string * System.Data.Common.DbParameter -&gt; unit&#xA;override this.AddRawParameter : string * System.Data.Common.DbParameter -&gt; unit" Usage="relationalParameterBuilder.AddRawParameter (invariantName, dbParameter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddRawParameter(System.String,System.Data.Common.DbParameter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invariantName" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="dbParameter" Type="System.Data.Common.DbParameter" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="invariantName">To be added.</param>
        <param name="dbParameter">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder Create ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Create" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Create () As RelationalParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member Create : unit -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder&#xA;override this.Create : unit -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder" Usage="relationalParameterBuilder.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMapper">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper TypeMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper TypeMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TypeMapper As IRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.TypeMapper : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMappingSource">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMappingSource" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TypeMappingSource As IRelationalTypeMappingSource" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMappingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
