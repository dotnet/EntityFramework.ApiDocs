<Type Name="RawSqlCommandBuilder" FullName="Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder">
  <TypeSignature Language="C#" Value="public class RawSqlCommandBuilder : Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RawSqlCommandBuilder extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RawSqlCommandBuilder&#xA;Implements IRawSqlCommandBuilder" />
  <TypeSignature Language="F#" Value="type RawSqlCommandBuilder = class&#xA;    interface IRawSqlCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RawSqlCommandBuilder (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory relationalCommandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory relationalCommandBuilderFactory, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationalCommandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, parameterNameGeneratorFactory As IParameterNameGeneratorFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder (relationalCommandBuilderFactory, sqlGenerationHelper, parameterNameGeneratorFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationalCommandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="relationalCommandBuilderFactory">To be added.</param>
        <param name="sqlGenerationHelper">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RawSqlCommandBuilder (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory relationalCommandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory relationalCommandBuilderFactory, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationalCommandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, typeMappingSource As IRelationalTypeMappingSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder" Usage="new Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder (relationalCommandBuilderFactory, sqlGenerationHelper, parameterNameGeneratorFactory, typeMappingSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationalCommandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="relationalCommandBuilderFactory">To be added.</param>
        <param name="sqlGenerationHelper">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="typeMappingSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalCommand Build (string sql);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand Build(string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Build (sql As String) As IRelationalCommand" />
      <MemberSignature Language="F#" Value="abstract member Build : string -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand&#xA;override this.Build : string -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" Usage="rawSqlCommandBuilder.Build sql" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RawSqlCommand Build (string sql, System.Collections.Generic.IEnumerable&lt;object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RawSqlCommand Build(string sql, class System.Collections.Generic.IEnumerable`1&lt;object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Build (sql As String, parameters As IEnumerable(Of Object)) As RawSqlCommand" />
      <MemberSignature Language="F#" Value="abstract member Build : string * seq&lt;obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand&#xA;override this.Build : string * seq&lt;obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" Usage="rawSqlCommandBuilder.Build (sql, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IEnumerable{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RawSqlCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="sql">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RawSqlCommand Build (string sql, System.Collections.Generic.IReadOnlyList&lt;object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RawSqlCommand Build(string sql, class System.Collections.Generic.IReadOnlyList`1&lt;object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Build (sql As String, parameters As IReadOnlyList(Of Object)) As RawSqlCommand" />
      <MemberSignature Language="F#" Value="abstract member Build : string * System.Collections.Generic.IReadOnlyList&lt;obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand&#xA;override this.Build : string * System.Collections.Generic.IReadOnlyList&lt;obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" Usage="rawSqlCommandBuilder.Build (sql, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RawSqlCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IReadOnlyList&lt;System.Object&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="sql">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
