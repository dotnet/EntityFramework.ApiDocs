<Type Name="IJsonConvertedValueReaderWriter" FullName="Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter">
  <TypeSignature Language="C#" Value="public interface IJsonConvertedValueReaderWriter : Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IJsonConvertedValueReaderWriter implements class Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IJsonConvertedValueReaderWriter&#xA;Implements ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="F#" Value="type IJsonConvertedValueReaderWriter = interface&#xA;    interface ICompositeJsonValueReaderWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Converter As ValueConverter" />
      <MemberSignature Language="F#" Value="member this.Converter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
