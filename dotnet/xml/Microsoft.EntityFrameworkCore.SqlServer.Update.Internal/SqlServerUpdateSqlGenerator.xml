<Type Name="SqlServerUpdateSqlGenerator" FullName="Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator">
  <TypeSignature Language="C#" Value="public class SqlServerUpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator, Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerUpdateSqlGenerator extends Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator implements class Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator, class Microsoft.EntityFrameworkCore.Update.Internal.ISingletonUpdateSqlGenerator, class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerUpdateSqlGenerator&#xA;Inherits UpdateSqlGenerator&#xA;Implements ISqlServerUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="F#" Value="type SqlServerUpdateSqlGenerator = class&#xA;    inherit UpdateSqlGenerator&#xA;    interface ISqlServerUpdateSqlGenerator&#xA;    interface IUpdateSqlGenerator&#xA;    interface ISingletonUpdateSqlGenerator" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerUpdateSqlGenerator extends Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator implements class Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator, class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="F#" Value="type SqlServerUpdateSqlGenerator = class&#xA;    inherit UpdateSqlGenerator&#xA;    interface ISqlServerUpdateSqlGenerator&#xA;    interface IUpdateSqlGenerator" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="C#" Value="public class SqlServerUpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.UpdateAndSelectSqlGenerator, Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerUpdateSqlGenerator extends Microsoft.EntityFrameworkCore.Update.UpdateAndSelectSqlGenerator implements class Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator, class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerUpdateSqlGenerator&#xA;Inherits UpdateAndSelectSqlGenerator&#xA;Implements ISqlServerUpdateSqlGenerator" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type SqlServerUpdateSqlGenerator = class&#xA;    inherit UpdateAndSelectSqlGenerator&#xA;    interface ISqlServerUpdateSqlGenerator&#xA;    interface IUpdateSqlGenerator" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Update.UpdateAndSelectSqlGenerator</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.Internal.ISingletonUpdateSqlGenerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerUpdateSqlGenerator (Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As UpdateSqlGeneratorDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies -&gt; Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBatchHeader">
      <MemberSignature Language="C#" Value="public override void AppendBatchHeader (System.Text.StringBuilder commandStringBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendBatchHeader(class System.Text.StringBuilder commandStringBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendBatchHeader(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AppendBatchHeader (commandStringBuilder As StringBuilder)" />
      <MemberSignature Language="F#" Value="override this.AppendBatchHeader : System.Text.StringBuilder -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendBatchHeader commandStringBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendBatchHeader(System.Text.StringBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBulkInsertOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendBulkInsertOperation (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommands, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendBulkInsertOperation(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommands, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendBulkInsertOperation(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendBulkInsertOperation (commandStringBuilder As StringBuilder, modificationCommands As IReadOnlyList(Of IReadOnlyModificationCommand), commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendBulkInsertOperation : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendBulkInsertOperation : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendBulkInsertOperation (commandStringBuilder, modificationCommands, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator.AppendBulkInsertOperation(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="modificationCommands" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="modificationCommands">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBulkInsertOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendBulkInsertOperation (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommands, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendBulkInsertOperation(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommands, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendBulkInsertOperation(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ModificationCommand},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendBulkInsertOperation (commandStringBuilder As StringBuilder, modificationCommands As IReadOnlyList(Of ModificationCommand), commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendBulkInsertOperation : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendBulkInsertOperation : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendBulkInsertOperation (commandStringBuilder, modificationCommands, commandPosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator.AppendBulkInsertOperation(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ModificationCommand},System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="modificationCommands" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="modificationCommands">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBulkInsertOperation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendBulkInsertOperation (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommands, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendBulkInsertOperation(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; modificationCommands, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendBulkInsertOperation(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendBulkInsertOperation (commandStringBuilder As StringBuilder, modificationCommands As IReadOnlyList(Of IReadOnlyModificationCommand), commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="abstract member AppendBulkInsertOperation : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping&#xA;override this.AppendBulkInsertOperation : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt; * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendBulkInsertOperation (commandStringBuilder, modificationCommands, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.ISqlServerUpdateSqlGenerator.AppendBulkInsertOperation(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand},System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="modificationCommands" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand&gt;" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="modificationCommands">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteCommand">
      <MemberSignature Language="C#" Value="protected override void AppendDeleteCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendDeleteCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendDeleteCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendDeleteCommand (commandStringBuilder As StringBuilder, name As String, schema As String, readOperations As IReadOnlyList(Of IColumnModification), conditionOperations As IReadOnlyList(Of IColumnModification), Optional appendReturningOneClause As Boolean = false)" />
      <MemberSignature Language="F#" Value="override this.AppendDeleteCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * bool -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendDeleteCommand (commandStringBuilder, name, schema, readOperations, conditionOperations, appendReturningOneClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="appendReturningOneClause" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="readOperations">To be added.</param>
        <param name="conditionOperations">To be added.</param>
        <param name="appendReturningOneClause">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendDeleteOperation">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendDeleteOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AppendDeleteOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="override this.AppendDeleteOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendDeleteOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendDeleteOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendIdentityWhereCondition">
      <MemberSignature Language="C#" Value="protected override void AppendIdentityWhereCondition (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.ColumnModification columnModification);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendIdentityWhereCondition(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.ColumnModification columnModification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendIdentityWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendIdentityWhereCondition (commandStringBuilder As StringBuilder, columnModification As ColumnModification)" />
      <MemberSignature Language="F#" Value="override this.AppendIdentityWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.ColumnModification -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendIdentityWhereCondition (commandStringBuilder, columnModification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.ColumnModification" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="columnModification">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendIdentityWhereCondition">
      <MemberSignature Language="C#" Value="protected override void AppendIdentityWhereCondition (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendIdentityWhereCondition(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendIdentityWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendIdentityWhereCondition (commandStringBuilder As StringBuilder, columnModification As IColumnModification)" />
      <MemberSignature Language="F#" Value="override this.AppendIdentityWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendIdentityWhereCondition (commandStringBuilder, columnModification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="columnModification">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertCommand">
      <MemberSignature Language="C#" Value="protected override void AppendInsertCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendInsertCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendInsertCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendInsertCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of IColumnModification), readOperations As IReadOnlyList(Of IColumnModification))" />
      <MemberSignature Language="F#" Value="override this.AppendInsertCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendInsertCommand (commandStringBuilder, name, schema, writeOperations, readOperations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="writeOperations">To be added.</param>
        <param name="readOperations">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendInsertOperation">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendInsertOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AppendInsertOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="override this.AppendInsertOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendInsertOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendInsertOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendReturningClause">
      <MemberSignature Language="C#" Value="protected override void AppendReturningClause (System.Text.StringBuilder commandStringBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations, string? additionalValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendReturningClause(class System.Text.StringBuilder commandStringBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; operations, string additionalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendReturningClause(System.Text.StringBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendReturningClause (commandStringBuilder As StringBuilder, operations As IReadOnlyList(Of IColumnModification), Optional additionalValues As String = Nothing)" />
      <MemberSignature Language="F#" Value="override this.AppendReturningClause : System.Text.StringBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * string -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendReturningClause (commandStringBuilder, operations, additionalValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="operations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="additionalValues" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="operations">To be added.</param>
        <param name="additionalValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendRowsAffectedWhereCondition">
      <MemberSignature Language="C#" Value="protected override void AppendRowsAffectedWhereCondition (System.Text.StringBuilder commandStringBuilder, int expectedRowsAffected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendRowsAffectedWhereCondition(class System.Text.StringBuilder commandStringBuilder, int32 expectedRowsAffected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendRowsAffectedWhereCondition(System.Text.StringBuilder,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendRowsAffectedWhereCondition (commandStringBuilder As StringBuilder, expectedRowsAffected As Integer)" />
      <MemberSignature Language="F#" Value="override this.AppendRowsAffectedWhereCondition : System.Text.StringBuilder * int -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendRowsAffectedWhereCondition (commandStringBuilder, expectedRowsAffected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="expectedRowsAffected" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="expectedRowsAffected">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSelectAffectedCountCommand">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand (System.Text.StringBuilder commandStringBuilder, string name, string schema, int commandPosition);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendSelectAffectedCountCommand(System.Text.StringBuilder,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AppendSelectAffectedCountCommand (commandStringBuilder As StringBuilder, name As String, schema As String, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="override this.AppendSelectAffectedCountCommand : System.Text.StringBuilder * string * string * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendSelectAffectedCountCommand (commandStringBuilder, name, schema, commandPosition)" />
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, int commandPosition);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="commandPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendStoredProcedureCall">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendStoredProcedureCall (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendStoredProcedureCall(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendStoredProcedureCall(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AppendStoredProcedureCall (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="override this.AppendStoredProcedureCall : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendStoredProcedureCall (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendStoredProcedureCall(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateColumnValue">
      <MemberSignature Language="C#" Value="protected override void AppendUpdateColumnValue (Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper updateSqlGeneratorHelper, Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification, System.Text.StringBuilder stringBuilder, string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendUpdateColumnValue(class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper updateSqlGeneratorHelper, class Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification, class System.Text.StringBuilder stringBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendUpdateColumnValue(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Update.IColumnModification,System.Text.StringBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendUpdateColumnValue (updateSqlGeneratorHelper As ISqlGenerationHelper, columnModification As IColumnModification, stringBuilder As StringBuilder, name As String, schema As String)" />
      <MemberSignature Language="F#" Value="override this.AppendUpdateColumnValue : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Update.IColumnModification * System.Text.StringBuilder * string * string -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendUpdateColumnValue (updateSqlGeneratorHelper, columnModification, stringBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateSqlGeneratorHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="stringBuilder" Type="System.Text.StringBuilder" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="updateSqlGeneratorHelper">To be added.</param>
        <param name="columnModification">To be added.</param>
        <param name="stringBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateCommand">
      <MemberSignature Language="C#" Value="protected override void AppendUpdateCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendUpdateCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; writeOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; readOperations, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; conditionOperations, bool appendReturningOneClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendUpdateCommand(System.Text.StringBuilder,System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IColumnModification},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendUpdateCommand (commandStringBuilder As StringBuilder, name As String, schema As String, writeOperations As IReadOnlyList(Of IColumnModification), readOperations As IReadOnlyList(Of IColumnModification), conditionOperations As IReadOnlyList(Of IColumnModification), Optional appendReturningOneClause As Boolean = false)" />
      <MemberSignature Language="F#" Value="override this.AppendUpdateCommand : System.Text.StringBuilder * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt; * bool -&gt; unit" Usage="sqlServerUpdateSqlGenerator.AppendUpdateCommand (commandStringBuilder, name, schema, writeOperations, readOperations, conditionOperations, appendReturningOneClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="writeOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="conditionOperations" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IColumnModification&gt;" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="appendReturningOneClause" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="writeOperations">To be added.</param>
        <param name="readOperations">To be added.</param>
        <param name="conditionOperations">To be added.</param>
        <param name="appendReturningOneClause">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendUpdateOperation">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int commandPosition, out bool requiresTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendUpdateOperation(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand command, int32 commandPosition, [out] bool&amp; requiresTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AppendUpdateOperation (commandStringBuilder As StringBuilder, command As IReadOnlyModificationCommand, commandPosition As Integer, ByRef requiresTransaction As Boolean) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="override this.AppendUpdateOperation : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand * int * bool -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqlServerUpdateSqlGenerator.AppendUpdateOperation (commandStringBuilder, command, commandPosition, requiresTransaction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.AppendUpdateOperation(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand,System.Int32,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="Microsoft.EntityFrameworkCore.Update.IReadOnlyModificationCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="requiresTransaction" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandPosition">To be added.</param>
        <param name="requiresTransaction">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeIntoMinimumThreshold">
      <MemberSignature Language="C#" Value="protected virtual int MergeIntoMinimumThreshold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeIntoMinimumThreshold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.MergeIntoMinimumThreshold" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MergeIntoMinimumThreshold As Integer" />
      <MemberSignature Language="F#" Value="member this.MergeIntoMinimumThreshold : int" Usage="Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.MergeIntoMinimumThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The minimum number of insertions which are executed using MERGE ... OUTPUT INTO. Below this threshold, multiple batched INSERT
                statements are more efficient.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependEnsureAutocommit">
      <MemberSignature Language="C#" Value="public override void PrependEnsureAutocommit (System.Text.StringBuilder commandStringBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PrependEnsureAutocommit(class System.Text.StringBuilder commandStringBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerUpdateSqlGenerator.PrependEnsureAutocommit(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PrependEnsureAutocommit (commandStringBuilder As StringBuilder)" />
      <MemberSignature Language="F#" Value="override this.PrependEnsureAutocommit : System.Text.StringBuilder -&gt; unit" Usage="sqlServerUpdateSqlGenerator.PrependEnsureAutocommit commandStringBuilder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator.PrependEnsureAutocommit(System.Text.StringBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
