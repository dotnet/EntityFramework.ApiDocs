<Type Name="QueryCompilationContext" FullName="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext">
  <TypeSignature Language="C#" Value="public class QueryCompilationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryCompilationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryCompilationContext" />
  <TypeSignature Language="F#" Value="type QueryCompilationContext = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    The primary data structure representing the state/components used during query compilation.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                and <see href="https://aka.ms/efcore-docs-how-query-works">How EF Core queries work</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryCompilationContext (Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies dependencies, bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies dependencies, bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryCompilationContextDependencies, async As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryCompilationContext : Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies * bool -&gt; Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" Usage="new Microsoft.EntityFrameworkCore.Query.QueryCompilationContext (dependencies, async)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="async" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this class.</param>
        <param name="async">A bool value indicating whether it is for async query.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryCompilationContext (Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies dependencies, Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, bool trackQueryResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, bool trackQueryResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies,Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryCompilationContextDependencies, linqOperatorProvider As ILinqOperatorProvider, trackQueryResults As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryCompilationContext : Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies * Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider * bool -&gt; Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" Usage="new Microsoft.EntityFrameworkCore.Query.QueryCompilationContext (dependencies, linqOperatorProvider, trackQueryResults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextDependencies" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="linqOperatorProvider" Type="Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="trackQueryResults" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="linqOperatorProvider">To be added.</param>
        <param name="trackQueryResults">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryCompilationContext (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.Extensions.Logging.ILogger logger, Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory entityQueryModelVisitorFactory, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory requiresMaterializationExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, Type contextType, bool trackQueryResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.Extensions.Logging.ILogger logger, class Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory entityQueryModelVisitorFactory, class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory requiresMaterializationExpressionVisitorFactory, class Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider linqOperatorProvider, class System.Type contextType, bool trackQueryResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (model As IModel, logger As ILogger, entityQueryModelVisitorFactory As IEntityQueryModelVisitorFactory, requiresMaterializationExpressionVisitorFactory As IRequiresMaterializationExpressionVisitorFactory, linqOperatorProvider As ILinqOperatorProvider, contextType As Type, trackQueryResults As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryCompilationContext : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.Extensions.Logging.ILogger * Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory * Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory * Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider * Type * bool -&gt; Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" Usage="new Microsoft.EntityFrameworkCore.Query.QueryCompilationContext (model, logger, entityQueryModelVisitorFactory, requiresMaterializationExpressionVisitorFactory, linqOperatorProvider, contextType, trackQueryResults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="entityQueryModelVisitorFactory" Type="Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="requiresMaterializationExpressionVisitorFactory" Type="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="linqOperatorProvider" Type="Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="contextType" Type="System.Type" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="trackQueryResults" Type="System.Boolean" Index="6" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="logger">To be added.</param>
        <param name="entityQueryModelVisitorFactory">To be added.</param>
        <param name="requiresMaterializationExpressionVisitorFactory">To be added.</param>
        <param name="linqOperatorProvider">To be added.</param>
        <param name="contextType">To be added.</param>
        <param name="trackQueryResults">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotations">
      <MemberSignature Language="C#" Value="public virtual void AddAnnotations (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; annotations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAnnotations(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddAnnotations(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAnnotations (annotations As IEnumerable(Of IQueryAnnotation))" />
      <MemberSignature Language="F#" Value="abstract member AddAnnotations : seq&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; -&gt; unit&#xA;override this.AddAnnotations : seq&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; -&gt; unit" Usage="queryCompilationContext.AddAnnotations annotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="annotations">The query annotations.</param>
        <summary>
                Adds query annotations to the existing list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdateMapping">
      <MemberSignature Language="C#" Value="public virtual void AddOrUpdateMapping (Remotion.Linq.Clauses.IQuerySource querySource, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOrUpdateMapping(class Remotion.Linq.Clauses.IQuerySource querySource, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddOrUpdateMapping(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOrUpdateMapping (querySource As IQuerySource, entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member AddOrUpdateMapping : Remotion.Linq.Clauses.IQuerySource * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.AddOrUpdateMapping : Remotion.Linq.Clauses.IQuerySource * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="queryCompilationContext.AddOrUpdateMapping (querySource, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Gets the entity type mapped to the given query source
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdateMapping">
      <MemberSignature Language="C#" Value="public virtual void AddOrUpdateMapping (Remotion.Linq.Clauses.IQuerySource querySource, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOrUpdateMapping(class Remotion.Linq.Clauses.IQuerySource querySource, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddOrUpdateMapping(Remotion.Linq.Clauses.IQuerySource,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOrUpdateMapping (querySource As IQuerySource, expression As Expression)" />
      <MemberSignature Language="F#" Value="abstract member AddOrUpdateMapping : Remotion.Linq.Clauses.IQuerySource * System.Linq.Expressions.Expression -&gt; unit&#xA;override this.AddOrUpdateMapping : Remotion.Linq.Clauses.IQuerySource * System.Linq.Expressions.Expression -&gt; unit" Usage="queryCompilationContext.AddOrUpdateMapping (querySource, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <param name="expression"> The expression mapped to the query source. </param>
        <summary>
                Adds or updates the expression mapped to a query source.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQuerySourceRequiringMaterialization">
      <MemberSignature Language="C#" Value="public virtual void AddQuerySourceRequiringMaterialization (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddQuerySourceRequiringMaterialization(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddQuerySourceRequiringMaterialization(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddQuerySourceRequiringMaterialization (querySource As IQuerySource)" />
      <MemberSignature Language="F#" Value="abstract member AddQuerySourceRequiringMaterialization : Remotion.Linq.Clauses.IQuerySource -&gt; unit&#xA;override this.AddQuerySourceRequiringMaterialization : Remotion.Linq.Clauses.IQuerySource -&gt; unit" Usage="queryCompilationContext.AddQuerySourceRequiringMaterialization querySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Add a query source to the set of query sources requiring materialization.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual void AddTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddTag (tag As String)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string -&gt; unit&#xA;override this.AddTag : string -&gt; unit" Usage="queryCompilationContext.AddTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to add.</param>
        <summary>
                Adds a tag to <see cref="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Tags" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrackableInclude">
      <MemberSignature Language="C#" Value="public virtual void AddTrackableInclude (Remotion.Linq.Clauses.IQuerySource querySource, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTrackableInclude(class Remotion.Linq.Clauses.IQuerySource querySource, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; navigationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddTrackableInclude(Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddTrackableInclude (querySource As IQuerySource, navigationPath As IReadOnlyList(Of INavigation))" />
      <MemberSignature Language="F#" Value="abstract member AddTrackableInclude : Remotion.Linq.Clauses.IQuerySource * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; -&gt; unit&#xA;override this.AddTrackableInclude : Remotion.Linq.Clauses.IQuerySource * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt; -&gt; unit" Usage="queryCompilationContext.AddTrackableInclude (querySource, navigationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationPath" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <param name="navigationPath"> The included navigation path. </param>
        <summary>
                Adds a trackable include.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneAnnotations">
      <MemberSignature Language="C#" Value="public virtual void CloneAnnotations (Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloneAnnotations(class Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CloneAnnotations(Remotion.Linq.Clauses.QuerySourceMapping,Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloneAnnotations (querySourceMapping As QuerySourceMapping, queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="abstract member CloneAnnotations : Remotion.Linq.Clauses.QuerySourceMapping * Remotion.Linq.QueryModel -&gt; unit&#xA;override this.CloneAnnotations : Remotion.Linq.Clauses.QuerySourceMapping * Remotion.Linq.QueryModel -&gt; unit" Usage="queryCompilationContext.CloneAnnotations (querySourceMapping, queryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySourceMapping" Type="Remotion.Linq.Clauses.QuerySourceMapping" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySourceMapping">A query source mapping.</param>
        <param name="queryModel">A query model.</param>
        <summary>
                Creates cloned annotations targeting a new QueryModel.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextOptions">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions ContextOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions ContextOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.ContextOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContextOptions As IDbContextOptions" />
      <MemberSignature Language="F#" Value="member this.ContextOptions : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.ContextOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The ContextOptions to use during query compilation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public virtual Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContextType As Type" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The CLR type of derived DbContext to use during query compilation.
            </summary>
        <value>
                The type of the context.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryExecutor&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public virtual Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt; CreateQueryExecutor&lt;TResult&gt; (System.Linq.Expressions.Expression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, !!TResult&gt; CreateQueryExecutor&lt;TResult&gt;(class System.Linq.Expressions.Expression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueryExecutor(Of TResult) (query As Expression) As Func(Of QueryContext, TResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateQueryExecutor : System.Linq.Expressions.Expression -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;&#xA;override this.CreateQueryExecutor : System.Linq.Expressions.Expression -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;" Usage="queryCompilationContext.CreateQueryExecutor query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">The result type of this query.</typeparam>
        <param name="query">The query to generate executor for.</param>
        <summary>
                Creates the query executor func which gives results for this query.
            </summary>
        <returns>Returns <see cref="T:System.Func`2" /> which can be invoked to get results of this query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryModelVisitor">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryModelVisitor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueryModelVisitor () As EntityQueryModelVisitor" />
      <MemberSignature Language="F#" Value="abstract member CreateQueryModelVisitor : unit -&gt; Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor&#xA;override this.CreateQueryModelVisitor : unit -&gt; Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" Usage="queryCompilationContext.CreateQueryModelVisitor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Creates query model visitor.
            </summary>
        <returns>
                The new query model visitor.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryModelVisitor">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor (Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor parentEntityQueryModelVisitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor CreateQueryModelVisitor(class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor parentEntityQueryModelVisitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryModelVisitor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueryModelVisitor (parentEntityQueryModelVisitor As EntityQueryModelVisitor) As EntityQueryModelVisitor" />
      <MemberSignature Language="F#" Value="abstract member CreateQueryModelVisitor : Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor -&gt; Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor&#xA;override this.CreateQueryModelVisitor : Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor -&gt; Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" Usage="queryCompilationContext.CreateQueryModelVisitor parentEntityQueryModelVisitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentEntityQueryModelVisitor" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="parentEntityQueryModelVisitor"> The parent entity query model visitor. </param>
        <summary>
                Creates query model visitor.
            </summary>
        <returns>
                The new query model visitor.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As QueryCompilationContextDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.QueryCompilationContextDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineQueryBufferRequirement">
      <MemberSignature Language="C#" Value="public virtual void DetermineQueryBufferRequirement (Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetermineQueryBufferRequirement(class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.DetermineQueryBufferRequirement(Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DetermineQueryBufferRequirement (queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="abstract member DetermineQueryBufferRequirement : Remotion.Linq.QueryModel -&gt; unit&#xA;override this.DetermineQueryBufferRequirement : Remotion.Linq.QueryModel -&gt; unit" Usage="queryCompilationContext.DetermineQueryBufferRequirement queryModel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="queryModel"> The query model. </param>
        <summary>
                Determine if the query requires a query buffer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType FindEntityType (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType FindEntityType(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.FindEntityType(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindEntityType (querySource As IQuerySource) As IEntityType" />
      <MemberSignature Language="F#" Value="abstract member FindEntityType : Remotion.Linq.Clauses.IQuerySource -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType&#xA;override this.FindEntityType : Remotion.Linq.Clauses.IQuerySource -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="queryCompilationContext.FindEntityType querySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource">To be added.</param>
        <summary>
                Gets the entity type mapped to the given query source
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindQuerySourcesRequiringMaterialization">
      <MemberSignature Language="C#" Value="public virtual void FindQuerySourcesRequiringMaterialization (Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindQuerySourcesRequiringMaterialization(class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.FindQuerySourcesRequiringMaterialization(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FindQuerySourcesRequiringMaterialization (queryModelVisitor As EntityQueryModelVisitor, queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="abstract member FindQuerySourcesRequiringMaterialization : Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor * Remotion.Linq.QueryModel -&gt; unit&#xA;override this.FindQuerySourcesRequiringMaterialization : Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor * Remotion.Linq.QueryModel -&gt; unit" Usage="queryCompilationContext.FindQuerySourcesRequiringMaterialization (queryModelVisitor, queryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModelVisitor" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="queryModelVisitor"> The query model visitor. </param>
        <param name="queryModel"> The query model. </param>
        <summary>
                Determines all query sources that require materialization.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackableIncludes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt; GetTrackableIncludes (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt; GetTrackableIncludes(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.GetTrackableIncludes(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrackableIncludes (querySource As IQuerySource) As IReadOnlyList(Of IReadOnlyList(Of INavigation))" />
      <MemberSignature Language="F#" Value="abstract member GetTrackableIncludes : Remotion.Linq.Clauses.IQuerySource -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt;&#xA;override this.GetTrackableIncludes : Remotion.Linq.Clauses.IQuerySource -&gt; System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt;" Usage="queryCompilationContext.GetTrackableIncludes querySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Gets all trackable includes for a given query source.
            </summary>
        <returns>
                The trackable includes.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreAutoIncludes">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreAutoIncludes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreAutoIncludes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IgnoreAutoIncludes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IgnoreAutoIncludes As Boolean" />
      <MemberSignature Language="F#" Value="member this.IgnoreAutoIncludes : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IgnoreAutoIncludes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating whether eager loaded navigations are ignored in this query.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreQueryFilters">
      <MemberSignature Language="C#" Value="public virtual bool IgnoreQueryFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreQueryFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IgnoreQueryFilters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IgnoreQueryFilters As Boolean" />
      <MemberSignature Language="F#" Value="member this.IgnoreQueryFilters : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IgnoreQueryFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating whether query filters are ignored in this query.
            </summary>
        <value>
                true if query filters should be applied, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public virtual bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating whether it is async query.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsyncQuery">
      <MemberSignature Language="C#" Value="public virtual bool IsAsyncQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsyncQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsAsyncQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsAsyncQuery As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAsyncQuery : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsAsyncQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Get a value indicating whether query that is being processed is asynchronous.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffering">
      <MemberSignature Language="C#" Value="public virtual bool IsBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBuffering As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsBuffering : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating whether the underlying server query needs to pre-buffer all data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIncludeQuery">
      <MemberSignature Language="C#" Value="public virtual bool IsIncludeQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIncludeQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsIncludeQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsIncludeQuery As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsIncludeQuery : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsIncludeQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The query has at least one Include operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQueryBufferRequired">
      <MemberSignature Language="C#" Value="public bool IsQueryBufferRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsQueryBufferRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsQueryBufferRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsQueryBufferRequired As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsQueryBufferRequired : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsQueryBufferRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether this query requires a query buffer.
            </summary>
        <value>
                true if this query requires a query buffer, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTracking">
      <MemberSignature Language="C#" Value="public virtual bool IsTracking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTracking" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsTracking" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsTracking As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsTracking : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use QueryTrackingBehavior instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use QueryTrackingBehavior instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating whether it is tracking query.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingQuery">
      <MemberSignature Language="C#" Value="public virtual bool IsTrackingQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsTrackingQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsTrackingQuery As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsTrackingQuery : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsTrackingQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether this is a tracking query.
            </summary>
        <value>
                true if this object is a tracking query, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinqOperatorProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider LinqOperatorProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider LinqOperatorProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.LinqOperatorProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LinqOperatorProvider As ILinqOperatorProvider" />
      <MemberSignature Language="F#" Value="member this.LinqOperatorProvider : Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.LinqOperatorProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the LINQ operator provider.
            </summary>
        <value>
                The LINQ operator provider.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Logging.ILogger Logger { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILogger Logger" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Logger" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Logger As ILogger" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.Extensions.Logging.ILogger" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Logger" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; Logger { get; }" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; Logger" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Logger As IDiagnosticsLogger(Of DbLoggerCategory.Query)" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt;" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Logger" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1">Microsoft.Extensions.Logging.ILogger</ReturnType>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The query logger to use during query compilation.
            </summary>
        <value>
                The logger.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Model" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Model As IModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The model to use during query compilation.
            </summary>
        <value>
                The model.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotTranslatedExpression">
      <MemberSignature Language="C#" Value="public static readonly System.Linq.Expressions.Expression NotTranslatedExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Linq.Expressions.Expression NotTranslatedExpression" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.NotTranslatedExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NotTranslatedExpression As Expression " />
      <MemberSignature Language="F#" Value=" staticval mutable NotTranslatedExpression : System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.NotTranslatedExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
                    Expression representing a not translated expression in query tree during translation phase.
                </para>
          <para>
                    This property is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAnnotations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; QueryAnnotations { get; set; }" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; QueryAnnotations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueryAnnotations As IReadOnlyCollection(Of IQueryAnnotation)" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="member this.QueryAnnotations : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryAnnotations" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; QueryAnnotations { get; }" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryAnnotations As IReadOnlyCollection(Of IQueryAnnotation)" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="member this.QueryAnnotations : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt;" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryAnnotations" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the query annotations.
            </summary>
        <value>
                The query annotations.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContextParameter">
      <MemberSignature Language="C#" Value="public static readonly System.Linq.Expressions.ParameterExpression QueryContextParameter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Linq.Expressions.ParameterExpression QueryContextParameter" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryContextParameter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContextParameter As ParameterExpression " />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContextParameter : System.Linq.Expressions.ParameterExpression" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryContextParameter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
                    ParameterExpression representing <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryContext" /> parameter in query expression.
                </para>
          <para>
                    This property is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryParameterPrefix">
      <MemberSignature Language="C#" Value="public const string QueryParameterPrefix;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string QueryParameterPrefix" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Const QueryParameterPrefix As String " />
      <MemberSignature Language="F#" Value="val mutable QueryParameterPrefix : string" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryParameterPrefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
                    Prefix for all the query parameters generated during parameter extraction in query pipeline.
                </para>
          <para>
                    This property is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySourceMapping">
      <MemberSignature Language="C#" Value="public virtual Remotion.Linq.Clauses.QuerySourceMapping QuerySourceMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Remotion.Linq.Clauses.QuerySourceMapping QuerySourceMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QuerySourceMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuerySourceMapping As QuerySourceMapping" />
      <MemberSignature Language="F#" Value="member this.QuerySourceMapping : Remotion.Linq.Clauses.QuerySourceMapping" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QuerySourceMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Clauses.QuerySourceMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the query source mapping.
            </summary>
        <value>
                The query source mapping.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySourceRequiresMaterialization">
      <MemberSignature Language="C#" Value="public virtual bool QuerySourceRequiresMaterialization (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuerySourceRequiresMaterialization(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QuerySourceRequiresMaterialization(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuerySourceRequiresMaterialization (querySource As IQuerySource) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member QuerySourceRequiresMaterialization : Remotion.Linq.Clauses.IQuerySource -&gt; bool&#xA;override this.QuerySourceRequiresMaterialization : Remotion.Linq.Clauses.IQuerySource -&gt; bool" Usage="queryCompilationContext.QuerySourceRequiresMaterialization querySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Determine whether or not a query source requires materialization.
            </summary>
        <returns>
                true if it requires materialization, false if not.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTrackingBehavior">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.QueryTrackingBehavior QueryTrackingBehavior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.QueryTrackingBehavior QueryTrackingBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryTrackingBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryTrackingBehavior As QueryTrackingBehavior" />
      <MemberSignature Language="F#" Value="member this.QueryTrackingBehavior : Microsoft.EntityFrameworkCore.QueryTrackingBehavior" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryTrackingBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.QueryTrackingBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating <see cref="T:Microsoft.EntityFrameworkCore.QueryTrackingBehavior" /> of the query.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCorrelatedSubqueryMetadata">
      <MemberSignature Language="C#" Value="public virtual void RegisterCorrelatedSubqueryMetadata (Remotion.Linq.Clauses.MainFromClause mainFromClause, bool trackingQuery, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation collectionNavigation, Remotion.Linq.Clauses.IQuerySource parentQuerySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCorrelatedSubqueryMetadata(class Remotion.Linq.Clauses.MainFromClause mainFromClause, bool trackingQuery, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation collectionNavigation, class Remotion.Linq.Clauses.IQuerySource parentQuerySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.RegisterCorrelatedSubqueryMetadata(Remotion.Linq.Clauses.MainFromClause,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterCorrelatedSubqueryMetadata (mainFromClause As MainFromClause, trackingQuery As Boolean, firstNavigation As INavigation, collectionNavigation As INavigation, parentQuerySource As IQuerySource)" />
      <MemberSignature Language="F#" Value="abstract member RegisterCorrelatedSubqueryMetadata : Remotion.Linq.Clauses.MainFromClause * bool * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * Remotion.Linq.Clauses.IQuerySource -&gt; unit&#xA;override this.RegisterCorrelatedSubqueryMetadata : Remotion.Linq.Clauses.MainFromClause * bool * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * Remotion.Linq.Clauses.IQuerySource -&gt; unit" Usage="queryCompilationContext.RegisterCorrelatedSubqueryMetadata (mainFromClause, trackingQuery, firstNavigation, collectionNavigation, parentQuerySource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainFromClause" Type="Remotion.Linq.Clauses.MainFromClause" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="trackingQuery" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="collectionNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parentQuerySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="mainFromClause"> The main from clause.</param>
        <param name="trackingQuery"> Flag indicating whether query should be tracked or not. </param>
        <param name="firstNavigation"> First navigation in the chain leading to collection navigation that is being optimized. </param>
        <param name="collectionNavigation"> Collection navigation that is being optimized. </param>
        <param name="parentQuerySource"> Query source that is origin of the collection navigation. </param>
        <summary>
                Registers a mapping between correlated collection query models and metadata needed to process them.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRuntimeParameter">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.ParameterExpression RegisterRuntimeParameter (string name, System.Linq.Expressions.LambdaExpression valueExtractor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.ParameterExpression RegisterRuntimeParameter(string name, class System.Linq.Expressions.LambdaExpression valueExtractor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.RegisterRuntimeParameter(System.String,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegisterRuntimeParameter (name As String, valueExtractor As LambdaExpression) As ParameterExpression" />
      <MemberSignature Language="F#" Value="abstract member RegisterRuntimeParameter : string * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.ParameterExpression&#xA;override this.RegisterRuntimeParameter : string * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.ParameterExpression" Usage="queryCompilationContext.RegisterRuntimeParameter (name, valueExtractor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="valueExtractor" Type="System.Linq.Expressions.LambdaExpression" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="valueExtractor">To be added.</param>
        <summary>
                Registers a runtime parameter that is being added at some point during the compilation phase.
                A lambda must be provided, which will extract the parameter's value from the QueryContext every time
                the query is executed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ISet&lt;string&gt; Tags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Tags As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.ISet&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The set of tags applied to this query.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackQueryResults">
      <MemberSignature Language="C#" Value="public virtual bool TrackQueryResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackQueryResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.TrackQueryResults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackQueryResults As Boolean" />
      <MemberSignature Language="F#" Value="member this.TrackQueryResults : bool" Usage="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.TrackQueryResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating the default configured tracking behavior.
            </summary>
        <value>
                true if the default is to track query results, false if not.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCorrelatedSubqueryMetadata">
      <MemberSignature Language="C#" Value="public virtual bool TryGetCorrelatedSubqueryMetadata (Remotion.Linq.Clauses.MainFromClause mainFromClause, out Microsoft.EntityFrameworkCore.Query.Internal.CorrelatedSubqueryMetadata correlatedSubqueryMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCorrelatedSubqueryMetadata(class Remotion.Linq.Clauses.MainFromClause mainFromClause, [out] class Microsoft.EntityFrameworkCore.Query.Internal.CorrelatedSubqueryMetadata&amp; correlatedSubqueryMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.TryGetCorrelatedSubqueryMetadata(Remotion.Linq.Clauses.MainFromClause,Microsoft.EntityFrameworkCore.Query.Internal.CorrelatedSubqueryMetadata@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetCorrelatedSubqueryMetadata (mainFromClause As MainFromClause, ByRef correlatedSubqueryMetadata As CorrelatedSubqueryMetadata) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetCorrelatedSubqueryMetadata : Remotion.Linq.Clauses.MainFromClause * CorrelatedSubqueryMetadata -&gt; bool&#xA;override this.TryGetCorrelatedSubqueryMetadata : Remotion.Linq.Clauses.MainFromClause * CorrelatedSubqueryMetadata -&gt; bool" Usage="queryCompilationContext.TryGetCorrelatedSubqueryMetadata (mainFromClause, correlatedSubqueryMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainFromClause" Type="Remotion.Linq.Clauses.MainFromClause" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="correlatedSubqueryMetadata" Type="Microsoft.EntityFrameworkCore.Query.Internal.CorrelatedSubqueryMetadata" RefType="out" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="mainFromClause"> The main from clause.</param>
        <param name="correlatedSubqueryMetadata"> The correlated sub-query metadata. </param>
        <summary>
                Looks up a mapping between correlated collection query models and metadata needed to process them.
            </summary>
        <returns>
          <c>True</c> if correlated sub-query metadata was registered; <c>false</c> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMapping">
      <MemberSignature Language="C#" Value="public virtual void UpdateMapping (Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateMapping(class Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.UpdateMapping(Remotion.Linq.Clauses.QuerySourceMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateMapping (querySourceMapping As QuerySourceMapping)" />
      <MemberSignature Language="F#" Value="abstract member UpdateMapping : Remotion.Linq.Clauses.QuerySourceMapping -&gt; unit&#xA;override this.UpdateMapping : Remotion.Linq.Clauses.QuerySourceMapping -&gt; unit" Usage="queryCompilationContext.UpdateMapping querySourceMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySourceMapping" Type="Remotion.Linq.Clauses.QuerySourceMapping" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySourceMapping"> The new query source mapping </param>
        <summary>
                Updates the query source mappings to the new query sources
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
