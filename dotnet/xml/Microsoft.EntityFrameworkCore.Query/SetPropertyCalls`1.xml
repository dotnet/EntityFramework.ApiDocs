<Type Name="SetPropertyCalls&lt;TSource&gt;" FullName="Microsoft.EntityFrameworkCore.Query.SetPropertyCalls&lt;TSource&gt;">
  <TypeSignature Language="C#" Value="public sealed class SetPropertyCalls&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SetPropertyCalls`1&lt;TSource&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SetPropertyCalls(Of TSource)" />
  <TypeSignature Language="F#" Value="type SetPropertyCalls&lt;'Source&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource">The type of source element on which ExecuteUpdate operation is being applied.</typeparam>
    <summary>
      <para>
                    Supports specifying property and value to be set in ExecuteUpdate method with chaining multiple calls for updating
                    multiple columns.
                </para>
      <para>
                    This type does not have any constructor or implementation since it is used inside LINQ query solely for the purpose of
                    creating expression tree.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                and <see href="https://aka.ms/efcore-docs-how-query-works">How EF Core queries work</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="setPropertyCalls.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object.</param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="setPropertyCalls.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Serves as the default hash function.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SetPropertyCalls&lt;TSource&gt; SetProperty&lt;TProperty&gt; (Func&lt;TSource,TProperty&gt; propertyExpression, Func&lt;TSource,TProperty&gt; valueExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1&lt;!TSource&gt; SetProperty&lt;TProperty&gt;(class System.Func`2&lt;!TSource, !!TProperty&gt; propertyExpression, class System.Func`2&lt;!TSource, !!TProperty&gt; valueExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1.SetProperty``1(System.Func{`0,``0},System.Func{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty(Of TProperty) (propertyExpression As Func(Of TSource, TProperty), valueExpression As Func(Of TSource, TProperty)) As SetPropertyCalls(Of TSource)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : Func&lt;'Source, 'Property&gt; * Func&lt;'Source, 'Property&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SetPropertyCalls&lt;'Source&gt;" Usage="setPropertyCalls.SetProperty (propertyExpression, valueExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SetPropertyCalls&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Func&lt;TSource,TProperty&gt;" />
        <Parameter Name="valueExpression" Type="System.Func&lt;TSource,TProperty&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of property.</typeparam>
        <param name="propertyExpression">A property access expression.</param>
        <param name="valueExpression">A value expression.</param>
        <summary>
                Specifies a property and corresponding value it should be updated to in ExecuteUpdate method.
            </summary>
        <returns>
                The same instance so that multiple calls to
                <see cref="M:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1.SetProperty``1(System.Func{`0,``0},System.Func{`0,``0})" />
                can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SetPropertyCalls&lt;TSource&gt; SetProperty&lt;TProperty&gt; (Func&lt;TSource,TProperty&gt; propertyExpression, TProperty valueExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1&lt;!TSource&gt; SetProperty&lt;TProperty&gt;(class System.Func`2&lt;!TSource, !!TProperty&gt; propertyExpression, !!TProperty valueExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1.SetProperty``1(System.Func{`0,``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty(Of TProperty) (propertyExpression As Func(Of TSource, TProperty), valueExpression As TProperty) As SetPropertyCalls(Of TSource)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : Func&lt;'Source, 'Property&gt; * 'Property -&gt; Microsoft.EntityFrameworkCore.Query.SetPropertyCalls&lt;'Source&gt;" Usage="setPropertyCalls.SetProperty (propertyExpression, valueExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SetPropertyCalls&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Func&lt;TSource,TProperty&gt;" />
        <Parameter Name="valueExpression" Type="TProperty" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of property.</typeparam>
        <param name="propertyExpression">A property access expression.</param>
        <param name="valueExpression">A value expression.</param>
        <summary>
                Specifies a property and corresponding value it should be updated to in ExecuteUpdate method.
            </summary>
        <returns>
                The same instance so that multiple calls to
                <see cref="M:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1.SetProperty``1(System.Func{`0,``0},``0)" /> can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SetPropertyCalls`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="setPropertyCalls.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a string that represents the current object.
            </summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
