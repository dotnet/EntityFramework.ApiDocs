<Type Name="RelationalEvaluatableExpressionFilter" FullName="Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter">
  <TypeSignature Language="C#" Value="public class RelationalEvaluatableExpressionFilter : Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalEvaluatableExpressionFilter extends Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalEvaluatableExpressionFilter&#xA;Inherits EvaluatableExpressionFilter" />
  <TypeSignature Language="F#" Value="type RelationalEvaluatableExpressionFilter = class&#xA;    inherit EvaluatableExpressionFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Represents a filter for evaluatable expressions.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
    <inheritdoc />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalEvaluatableExpressionFilter (Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies dependencies, Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies relationalDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies relationalDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter.#ctor(Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies,Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As EvaluatableExpressionFilterDependencies, relationalDependencies As RelationalEvaluatableExpressionFilterDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter : Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies * Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies -&gt; Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter (dependencies, relationalDependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">The dependencies to use.</param>
        <param name="relationalDependencies">The relational-specific dependencies to use.</param>
        <summary>
          <para>
                    Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter" /> instance.
                </para>
          <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvaluatableExpression">
      <MemberSignature Language="C#" Value="public override bool IsEvaluatableExpression (System.Linq.Expressions.Expression expression, Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEvaluatableExpression(class System.Linq.Expressions.Expression expression, class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter.IsEvaluatableExpression(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEvaluatableExpression (expression As Expression, model As IModel) As Boolean" />
      <MemberSignature Language="F#" Value="override this.IsEvaluatableExpression : System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; bool" Usage="relationalEvaluatableExpressionFilter.IsEvaluatableExpression (expression, model)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="expression">The expression.</param>
        <param name="model">The model.</param>
        <summary>
                Checks whether the given expression can be evaluated.
            </summary>
        <returns>
          <see langword="true" /> if the expression can be evaluated; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RelationalDependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies RelationalDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies RelationalDependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter.RelationalDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property RelationalDependencies As RelationalEvaluatableExpressionFilterDependencies" />
      <MemberSignature Language="F#" Value="member this.RelationalDependencies : Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies" Usage="Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilter.RelationalDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalEvaluatableExpressionFilterDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
