<Type Name="EntityShaperExpression" FullName="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression">
  <TypeSignature Language="C#" Value="public class EntityShaperExpression : System.Linq.Expressions.Expression, Microsoft.EntityFrameworkCore.Query.IPrintableExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityShaperExpression extends System.Linq.Expressions.Expression implements class Microsoft.EntityFrameworkCore.Query.IPrintableExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityShaperExpression&#xA;Inherits Expression&#xA;Implements IPrintableExpression" />
  <TypeSignature Language="F#" Value="type EntityShaperExpression = class&#xA;    inherit Expression&#xA;    interface IPrintableExpression" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IPrintableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    An expression that represents creation of an entity instance in <see cref="P:Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression.ShaperExpression" />.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                and <see href="https://aka.ms/efcore-docs-how-query-works">How EF Core queries work</see> for more information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityShaperExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Linq.Expressions.Expression valueBufferExpression, bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Linq.Expressions.Expression valueBufferExpression, bool nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, valueBufferExpression As Expression, nullable As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.EntityShaperExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Linq.Expressions.Expression * bool -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" Usage="new Microsoft.EntityFrameworkCore.Query.EntityShaperExpression (entityType, valueBufferExpression, nullable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="valueBufferExpression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="nullable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type to shape.</param>
        <param name="valueBufferExpression">An expression of ValueBuffer to get values for properties of the entity.</param>
        <param name="nullable">A bool value indicating whether this entity instance can be null.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntityShaperExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Linq.Expressions.Expression valueBufferExpression, bool nullable, System.Linq.Expressions.LambdaExpression materializationCondition);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Linq.Expressions.Expression valueBufferExpression, bool nullable, class System.Linq.Expressions.LambdaExpression materializationCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (entityType As IEntityType, valueBufferExpression As Expression, nullable As Boolean, materializationCondition As LambdaExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.EntityShaperExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Linq.Expressions.Expression * bool * System.Linq.Expressions.LambdaExpression -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" Usage="new Microsoft.EntityFrameworkCore.Query.EntityShaperExpression (entityType, valueBufferExpression, nullable, materializationCondition)" />
      <MemberSignature Language="C#" Value="protected EntityShaperExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Linq.Expressions.Expression valueBufferExpression, bool nullable, System.Linq.Expressions.LambdaExpression? materializationCondition);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="valueBufferExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="materializationCondition" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type to shape.</param>
        <param name="valueBufferExpression">An expression of ValueBuffer to get values for properties of the entity.</param>
        <param name="nullable">Whether this entity instance can be null.</param>
        <param name="materializationCondition">
                An expression of <see cref="T:System.Func`2" /> to determine which entity type to
                materialize.
            </param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnableToDiscriminateExceptionExpression">
      <MemberSignature Language="C#" Value="protected static System.Linq.Expressions.Expression CreateUnableToDiscriminateExceptionExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Linq.Expressions.Expression discriminatorValue);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Linq.Expressions.Expression CreateUnableToDiscriminateExceptionExpression(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Linq.Expressions.Expression discriminatorValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.CreateUnableToDiscriminateExceptionExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateUnableToDiscriminateExceptionExpression (entityType As IEntityType, discriminatorValue As Expression) As Expression" />
      <MemberSignature Language="F#" Value="static member CreateUnableToDiscriminateExceptionExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.CreateUnableToDiscriminateExceptionExpression (entityType, discriminatorValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="discriminatorValue" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type for which materialization was requested.</param>
        <param name="discriminatorValue">The expression containing value of discriminator.</param>
        <summary>
                Creates an expression to throw an exception when unable to determine entity type
                to materialize based on discriminator value.
            </summary>
        <returns>An expression of <see cref="T:System.Func`2" /> representing materilization condition for the entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityType As IEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.EntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The entity type being shaped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMaterializationCondition">
      <MemberSignature Language="C#" Value="protected virtual System.Linq.Expressions.LambdaExpression GenerateMaterializationCondition (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.LambdaExpression GenerateMaterializationCondition(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, bool nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.GenerateMaterializationCondition(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateMaterializationCondition (entityType As IEntityType, nullable As Boolean) As LambdaExpression" />
      <MemberSignature Language="F#" Value="abstract member GenerateMaterializationCondition : Microsoft.EntityFrameworkCore.Metadata.IEntityType * bool -&gt; System.Linq.Expressions.LambdaExpression&#xA;override this.GenerateMaterializationCondition : Microsoft.EntityFrameworkCore.Metadata.IEntityType * bool -&gt; System.Linq.Expressions.LambdaExpression" Usage="entityShaperExpression.GenerateMaterializationCondition (entityType, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type to create materialization condition for.</param>
        <param name="nullable">Whether this entity instance can be null.</param>
        <summary>
                Creates an expression of <see cref="T:System.Func`2" /> to determine which entity type to materialize.
            </summary>
        <returns>An expression of <see cref="T:System.Func`2" /> representing materilization condition for the entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public virtual bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A value indicating whether this entity instance can be null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeNullable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityShaperExpression MakeNullable (bool nullable = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityShaperExpression MakeNullable(bool nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.MakeNullable(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MakeNullable (Optional nullable As Boolean = true) As EntityShaperExpression" />
      <MemberSignature Language="F#" Value="abstract member MakeNullable : bool -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression&#xA;override this.MakeNullable : bool -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" Usage="entityShaperExpression.MakeNullable nullable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityShaperExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullable" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="nullable">A value indicating if the shaper is nullable.</param>
        <summary>
                Assigns nullability for this shaper, indicating whether it can shape null entity instances or not.
            </summary>
        <returns>This expression if nullability not changed, or an expression with updated nullability.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsNullable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityShaperExpression MarkAsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityShaperExpression MarkAsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.MarkAsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarkAsNullable () As EntityShaperExpression" />
      <MemberSignature Language="F#" Value="abstract member MarkAsNullable : unit -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression&#xA;override this.MarkAsNullable : unit -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" Usage="entityShaperExpression.MarkAsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use MakeNullable() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use MakeNullable() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityShaperExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Marks this shaper as nullable, indicating that it can shape null entity instances.
            </summary>
        <returns>This expression if nullability not changed, or an expression with updated nullability.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaterializationCondition">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.LambdaExpression MaterializationCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.LambdaExpression MaterializationCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.MaterializationCondition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaterializationCondition As LambdaExpression" />
      <MemberSignature Language="F#" Value="member this.MaterializationCondition : System.Linq.Expressions.LambdaExpression" Usage="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.MaterializationCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The materilization condition to use for shaping this entity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print">
      <MemberSignature Language="C#" Value="void IPrintableExpression.Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.Microsoft#EntityFrameworkCore#Query#IPrintableExpression#Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Sub Print (expressionPrinter As ExpressionPrinter) Implements IPrintableExpression.Print" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit&#xA;override this.Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="entityShaperExpression.Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public virtual void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Print (expressionPrinter As ExpressionPrinter)" />
      <MemberSignature Language="F#" Value="abstract member Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit&#xA;override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="entityShaperExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityShaperExpression Update (System.Linq.Expressions.Expression valueBufferExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityShaperExpression Update(class System.Linq.Expressions.Expression valueBufferExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.Update(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (valueBufferExpression As Expression) As EntityShaperExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression&#xA;override this.Update : System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" Usage="entityShaperExpression.Update valueBufferExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityShaperExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBufferExpression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="valueBufferExpression">The <see cref="P:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.ValueBufferExpression" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueBufferExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression ValueBufferExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression ValueBufferExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.ValueBufferExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValueBufferExpression As Expression" />
      <MemberSignature Language="F#" Value="member this.ValueBufferExpression : System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.ValueBufferExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The expression representing a <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> to get values from that are used to create the entity instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="entityShaperExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityShaperExpression WithEntityType (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityShaperExpression WithEntityType(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EntityShaperExpression.WithEntityType(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithEntityType (entityType As IEntityType) As EntityShaperExpression" />
      <MemberSignature Language="F#" Value="abstract member WithEntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression&#xA;override this.WithEntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Query.EntityShaperExpression" Usage="entityShaperExpression.WithEntityType entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityShaperExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">The new entity type to use.</param>
        <summary>
                Changes the entity type being shaped by this entity shaper.
            </summary>
        <returns>This expression if entity type not changed, or an expression with updated entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
