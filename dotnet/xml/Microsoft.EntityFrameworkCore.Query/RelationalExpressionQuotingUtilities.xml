<Type Name="RelationalExpressionQuotingUtilities" FullName="Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities">
  <TypeSignature Language="C#" Value="public static class RelationalExpressionQuotingUtilities" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalExpressionQuotingUtilities extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalExpressionQuotingUtilities" />
  <TypeSignature Language="F#" Value="type RelationalExpressionQuotingUtilities = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9100")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9100")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Utilities used for implementing <see cref="T:Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="QuoteAnnotations">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression QuoteAnnotations (System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;? annotations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression QuoteAnnotations(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteAnnotations(System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuoteAnnotations (annotations As IReadOnlyDictionary(Of String, IAnnotation)) As Expression" />
      <MemberSignature Language="F#" Value="static member QuoteAnnotations : System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteAnnotations annotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" />
      </Parameters>
      <Docs>
        <param name="annotations">To be added.</param>
        <summary>
                Quotes the annotations on a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteOrNull&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression QuoteOrNull&lt;T&gt; (T? expression) where T : Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression QuoteOrNull&lt;(class Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression) T&gt;(!!T expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteOrNull``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuoteOrNull(Of T As IRelationalQuotableExpression) (expression As T) As Expression" />
      <MemberSignature Language="F#" Value="static member QuoteOrNull : 'T -&gt; System.Linq.Expressions.Expression (requires 'T :&gt; Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression)" Usage="Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteOrNull expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="expression">To be added.</param>
        <summary>
                If <paramref name="expression" /> is <see langword="null" />, returns a <see cref="T:System.Linq.Expressions.ConstantExpression" /> with a
                <see langword="null" /> value. Otherwise, calls <see cref="M:Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression.Quote" /> and returns the result.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteTableBase">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression QuoteTableBase (Microsoft.EntityFrameworkCore.Metadata.ITableBase tableBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression QuoteTableBase(class Microsoft.EntityFrameworkCore.Metadata.ITableBase tableBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteTableBase(Microsoft.EntityFrameworkCore.Metadata.ITableBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuoteTableBase (tableBase As ITableBase) As Expression" />
      <MemberSignature Language="F#" Value="static member QuoteTableBase : Microsoft.EntityFrameworkCore.Metadata.ITableBase -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteTableBase tableBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableBase" Type="Microsoft.EntityFrameworkCore.Metadata.ITableBase" />
      </Parameters>
      <Docs>
        <param name="tableBase">To be added.</param>
        <summary>
                Quotes an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ITableBase" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteTags">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression QuoteTags (System.Collections.Generic.ISet&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression QuoteTags(class System.Collections.Generic.ISet`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteTags(System.Collections.Generic.ISet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuoteTags (tags As ISet(Of String)) As Expression" />
      <MemberSignature Language="F#" Value="static member QuoteTags : System.Collections.Generic.ISet&lt;string&gt; -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteTags tags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.ISet&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="tags">To be added.</param>
        <summary>
                Quotes a set of string tags.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteTypeMapping">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression QuoteTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? typeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression QuoteTypeMapping(class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteTypeMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuoteTypeMapping (typeMapping As RelationalTypeMapping) As Expression" />
      <MemberSignature Language="F#" Value="static member QuoteTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.RelationalExpressionQuotingUtilities.QuoteTypeMapping typeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
      </Parameters>
      <Docs>
        <param name="typeMapping">To be added.</param>
        <summary>
                Quotes a relational type mapping.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
