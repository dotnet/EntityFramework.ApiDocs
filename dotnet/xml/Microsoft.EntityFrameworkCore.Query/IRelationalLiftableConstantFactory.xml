<Type Name="IRelationalLiftableConstantFactory" FullName="Microsoft.EntityFrameworkCore.Query.IRelationalLiftableConstantFactory">
  <TypeSignature Language="C#" Value="public interface IRelationalLiftableConstantFactory : Microsoft.EntityFrameworkCore.Query.ILiftableConstantFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRelationalLiftableConstantFactory implements class Microsoft.EntityFrameworkCore.Query.ILiftableConstantFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.IRelationalLiftableConstantFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalLiftableConstantFactory&#xA;Implements ILiftableConstantFactory" />
  <TypeSignature Language="F#" Value="type IRelationalLiftableConstantFactory = interface&#xA;    interface ILiftableConstantFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.ILiftableConstantFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9100")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9100")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an experimental API used by the Entity Framework Core feature and it is not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateLiftableConstant">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression CreateLiftableConstant (object? originalValue, System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext,object&gt;&gt; resolverExpression, string variableName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression CreateLiftableConstant(object originalValue, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext, object&gt;&gt; resolverExpression, string variableName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IRelationalLiftableConstantFactory.CreateLiftableConstant(System.Object,System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext,System.Object}},System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLiftableConstant (originalValue As Object, resolverExpression As Expression(Of Func(Of RelationalMaterializerLiftableConstantContext, Object)), variableName As String, type As Type) As LiftableConstantExpression" />
      <MemberSignature Language="F#" Value="abstract member CreateLiftableConstant : obj * System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext, obj&gt;&gt; * string * Type -&gt; Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" Usage="iRelationalLiftableConstantFactory.CreateLiftableConstant (originalValue, resolverExpression, variableName, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalValue" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resolverExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext,System.Object&gt;&gt;" />
        <Parameter Name="variableName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="originalValue">To be added.</param>
        <param name="resolverExpression">To be added.</param>
        <param name="variableName">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This is an experimental API used by the Entity Framework Core feature and it is not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
