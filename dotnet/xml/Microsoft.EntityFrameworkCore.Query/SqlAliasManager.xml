<Type Name="SqlAliasManager" FullName="Microsoft.EntityFrameworkCore.Query.SqlAliasManager">
  <TypeSignature Language="C#" Value="public class SqlAliasManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlAliasManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlAliasManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlAliasManager" />
  <TypeSignature Language="F#" Value="type SqlAliasManager = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                A stateful manager for SQL aliases, capable of generating uniquified table aliases and rewriting them in post-processing.
                An instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlAliasManager" /> is valid for a single query compilation, and is owned by
                <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlAliasManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlAliasManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableAlias">
      <MemberSignature Language="C#" Value="public virtual string GenerateTableAlias (Microsoft.EntityFrameworkCore.Metadata.ITableBase modelTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateTableAlias(class Microsoft.EntityFrameworkCore.Metadata.ITableBase modelTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlAliasManager.GenerateTableAlias(Microsoft.EntityFrameworkCore.Metadata.ITableBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateTableAlias (modelTable As ITableBase) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateTableAlias : Microsoft.EntityFrameworkCore.Metadata.ITableBase -&gt; string&#xA;override this.GenerateTableAlias : Microsoft.EntityFrameworkCore.Metadata.ITableBase -&gt; string" Usage="sqlAliasManager.GenerateTableAlias modelTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelTable" Type="Microsoft.EntityFrameworkCore.Metadata.ITableBase" />
      </Parameters>
      <Docs>
        <param name="modelTable">A table from the relational model for which to generate the alias.</param>
        <summary>
                Generates an alias based on the given <paramref name="modelTable" />.
                All aliases produced by a given instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlAliasManager" /> are unique.
            </summary>
        <returns>A fully unique alias within the context of this translation process.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableAlias">
      <MemberSignature Language="C#" Value="public virtual string GenerateTableAlias (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateTableAlias(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlAliasManager.GenerateTableAlias(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateTableAlias (name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateTableAlias : string -&gt; string&#xA;override this.GenerateTableAlias : string -&gt; string" Usage="sqlAliasManager.GenerateTableAlias name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
                A name (e.g. of a table) to use as the starting point for the alias; a number postfix will be appended to it as necessary.
            </param>
        <summary>
                Generates an alias based on the given <paramref name="name" />.
                All aliases produced by a given instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlAliasManager" /> are unique.
            </summary>
        <returns>A fully unique alias within the context of this translation process.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostprocessAliases">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression PostprocessAliases (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression PostprocessAliases(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlAliasManager.PostprocessAliases(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PostprocessAliases (expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member PostprocessAliases : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression&#xA;override this.PostprocessAliases : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="sqlAliasManager.PostprocessAliases expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">The SQL tree to post-process.</param>
        <summary>
                Performs a post-processing pass over aliases in the provided SQL tree, closing any gaps.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemapTableAliases">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.Dictionary&lt;string,string&gt;? RemapTableAliases (System.Collections.Generic.IReadOnlySet&lt;string&gt; usedAliases);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; RemapTableAliases(class System.Collections.Generic.IReadOnlySet`1&lt;string&gt; usedAliases) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlAliasManager.RemapTableAliases(System.Collections.Generic.IReadOnlySet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemapTableAliases (usedAliases As IReadOnlySet(Of String)) As Dictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="abstract member RemapTableAliases : System.Collections.Generic.IReadOnlySet&lt;string&gt; -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;&#xA;override this.RemapTableAliases : System.Collections.Generic.IReadOnlySet&lt;string&gt; -&gt; System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="sqlAliasManager.RemapTableAliases usedAliases" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usedAliases" Type="System.Collections.Generic.IReadOnlySet&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="usedAliases">To be added.</param>
        <summary>
                Given the list of table aliases currently in use in the SQL tree, produces a remapping for aliases within that list.
                Can be used to e.g. close gaps for tables which have been pruned, etc.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
