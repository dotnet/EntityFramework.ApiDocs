<Type Name="NavigationExpansionExtensibilityHelper" FullName="Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper">
  <TypeSignature Language="C#" Value="public class NavigationExpansionExtensibilityHelper : Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NavigationExpansionExtensibilityHelper extends System.Object implements class Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class NavigationExpansionExtensibilityHelper&#xA;Implements INavigationExpansionExtensibilityHelper" />
  <TypeSignature Language="F#" Value="type NavigationExpansionExtensibilityHelper = class&#xA;    interface INavigationExpansionExtensibilityHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <inheritdoc />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NavigationExpansionExtensibilityHelper (Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.#ctor(Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As NavigationExpansionExtensibilityHelperDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper : Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies -&gt; Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper" Usage="new Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this class.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreQueryRootsCompatible">
      <MemberSignature Language="C#" Value="public virtual bool AreQueryRootsCompatible (Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression? first, Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression? second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AreQueryRootsCompatible(class Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression first, class Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.AreQueryRootsCompatible(Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression,Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AreQueryRootsCompatible (first As EntityQueryRootExpression, second As EntityQueryRootExpression) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AreQueryRootsCompatible : Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression * Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression -&gt; bool&#xA;override this.AreQueryRootsCompatible : Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression * Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression -&gt; bool" Usage="navigationExpansionExtensibilityHelper.AreQueryRootsCompatible (first, second)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper.AreQueryRootsCompatible(Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression,Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="second" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AreQueryRootsCompatible">
      <MemberSignature Language="C#" Value="public virtual bool AreQueryRootsCompatible (Microsoft.EntityFrameworkCore.Query.QueryRootExpression? first, Microsoft.EntityFrameworkCore.Query.QueryRootExpression? second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AreQueryRootsCompatible(class Microsoft.EntityFrameworkCore.Query.QueryRootExpression first, class Microsoft.EntityFrameworkCore.Query.QueryRootExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.AreQueryRootsCompatible(Microsoft.EntityFrameworkCore.Query.QueryRootExpression,Microsoft.EntityFrameworkCore.Query.QueryRootExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AreQueryRootsCompatible (first As QueryRootExpression, second As QueryRootExpression) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AreQueryRootsCompatible : Microsoft.EntityFrameworkCore.Query.QueryRootExpression * Microsoft.EntityFrameworkCore.Query.QueryRootExpression -&gt; bool&#xA;override this.AreQueryRootsCompatible : Microsoft.EntityFrameworkCore.Query.QueryRootExpression * Microsoft.EntityFrameworkCore.Query.QueryRootExpression -&gt; bool" Usage="navigationExpansionExtensibilityHelper.AreQueryRootsCompatible (first, second)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper.AreQueryRootsCompatible(Microsoft.EntityFrameworkCore.Query.QueryRootExpression,Microsoft.EntityFrameworkCore.Query.QueryRootExpression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Microsoft.EntityFrameworkCore.Query.QueryRootExpression" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="second" Type="Microsoft.EntityFrameworkCore.Query.QueryRootExpression" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CreateQueryRoot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression CreateQueryRoot (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression? source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression CreateQueryRoot(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.CreateQueryRoot(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueryRoot (entityType As IEntityType, source As EntityQueryRootExpression) As EntityQueryRootExpression" />
      <MemberSignature Language="F#" Value="abstract member CreateQueryRoot : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression -&gt; Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression&#xA;override this.CreateQueryRoot : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression -&gt; Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" Usage="navigationExpansionExtensibilityHelper.CreateQueryRoot (entityType, source)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper.CreateQueryRoot(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CreateQueryRoot">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.QueryRootExpression CreateQueryRoot (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Query.QueryRootExpression? source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.QueryRootExpression CreateQueryRoot(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Query.QueryRootExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.CreateQueryRoot(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.QueryRootExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueryRoot (entityType As IEntityType, source As QueryRootExpression) As QueryRootExpression" />
      <MemberSignature Language="F#" Value="abstract member CreateQueryRoot : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Query.QueryRootExpression -&gt; Microsoft.EntityFrameworkCore.Query.QueryRootExpression&#xA;override this.CreateQueryRoot : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Query.QueryRootExpression -&gt; Microsoft.EntityFrameworkCore.Query.QueryRootExpression" Usage="navigationExpansionExtensibilityHelper.CreateQueryRoot (entityType, source)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper.CreateQueryRoot(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.QueryRootExpression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.QueryRootExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Query.QueryRootExpression" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As NavigationExpansionExtensibilityHelperDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies" Usage="Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelperDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateQueryRootCreation">
      <MemberSignature Language="C#" Value="public virtual void ValidateQueryRootCreation (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression? source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateQueryRootCreation(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.NavigationExpansionExtensibilityHelper.ValidateQueryRootCreation(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateQueryRootCreation (entityType As IEntityType, source As EntityQueryRootExpression)" />
      <MemberSignature Language="F#" Value="abstract member ValidateQueryRootCreation : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression -&gt; unit&#xA;override this.ValidateQueryRootCreation : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression -&gt; unit" Usage="navigationExpansionExtensibilityHelper.ValidateQueryRootCreation (entityType, source)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.INavigationExpansionExtensibilityHelper.ValidateQueryRootCreation(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
