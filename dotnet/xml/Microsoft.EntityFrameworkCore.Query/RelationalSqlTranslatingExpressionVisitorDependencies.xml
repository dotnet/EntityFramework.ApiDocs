<Type Name="RelationalSqlTranslatingExpressionVisitorDependencies" FullName="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies">
  <TypeSignature Language="C#" Value="public sealed class RelationalSqlTranslatingExpressionVisitorDependencies" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RelationalSqlTranslatingExpressionVisitorDependencies extends System.Object" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RelationalSqlTranslatingExpressionVisitorDependencies" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type RelationalSqlTranslatingExpressionVisitorDependencies = class" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="C#" Value="public sealed class RelationalSqlTranslatingExpressionVisitorDependencies : IEquatable&lt;Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RelationalSqlTranslatingExpressionVisitorDependencies extends System.Object implements class System.IEquatable`1&lt;class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RelationalSqlTranslatingExpressionVisitorDependencies&#xA;Implements IEquatable(Of RelationalSqlTranslatingExpressionVisitorDependencies)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type RelationalSqlTranslatingExpressionVisitorDependencies = class&#xA;    interface IEquatable&lt;RelationalSqlTranslatingExpressionVisitorDependencies&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>System.IEquatable&lt;Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorFactory" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the C# 'with' operator. Do not call the constructor at any point in this process.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalSqlTranslatingExpressionVisitorDependencies (Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, class Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, class Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider,Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sqlExpressionFactory As ISqlExpressionFactory, memberTranslatorProvider As IMemberTranslatorProvider, methodCallTranslatorProvider As IMethodCallTranslatorProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory * Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider * Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies (sqlExpressionFactory, memberTranslatorProvider, methodCallTranslatorProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="memberTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="methodCallTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="memberTranslatorProvider">To be added.</param>
        <param name="methodCallTranslatorProvider">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorFactory" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalSqlTranslatingExpressionVisitorDependencies (Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, class Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, class Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider,Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sqlExpressionFactory As ISqlExpressionFactory, typeMappingSource As IRelationalTypeMappingSource, memberTranslatorProvider As IMemberTranslatorProvider, methodCallTranslatorProvider As IMethodCallTranslatorProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource * Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider * Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies (sqlExpressionFactory, typeMappingSource, memberTranslatorProvider, methodCallTranslatorProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="memberTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="methodCallTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider" Index="3" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="typeMappingSource">To be added.</param>
        <param name="memberTranslatorProvider">To be added.</param>
        <param name="methodCallTranslatorProvider">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorFactory" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalSqlTranslatingExpressionVisitorDependencies (Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, class Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, class Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider,Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sqlExpressionFactory As ISqlExpressionFactory, model As IModel, typeMappingSource As IRelationalTypeMappingSource, memberTranslatorProvider As IMemberTranslatorProvider, methodCallTranslatorProvider As IMethodCallTranslatorProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory * Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource * Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider * Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies (sqlExpressionFactory, model, typeMappingSource, memberTranslatorProvider, methodCallTranslatorProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="memberTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider" Index="3" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="methodCallTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider" Index="4" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="model">To be added.</param>
        <param name="typeMappingSource">To be added.</param>
        <param name="memberTranslatorProvider">To be added.</param>
        <param name="methodCallTranslatorProvider">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorFactory" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalSqlTranslatingExpressionVisitorDependencies (Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider, Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider aggregateMethodCallTranslatorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, class Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider, class Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider, class Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider aggregateMethodCallTranslatorProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider,Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider,Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sqlExpressionFactory As ISqlExpressionFactory, model As IModel, typeMappingSource As IRelationalTypeMappingSource, memberTranslatorProvider As IMemberTranslatorProvider, methodCallTranslatorProvider As IMethodCallTranslatorProvider, aggregateMethodCallTranslatorProvider As IAggregateMethodCallTranslatorProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory * Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource * Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider * Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider * Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies (sqlExpressionFactory, model, typeMappingSource, memberTranslatorProvider, methodCallTranslatorProvider, aggregateMethodCallTranslatorProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="memberTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="methodCallTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="aggregateMethodCallTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="model">To be added.</param>
        <param name="typeMappingSource">To be added.</param>
        <param name="memberTranslatorProvider">To be added.</param>
        <param name="methodCallTranslatorProvider">To be added.</param>
        <param name="aggregateMethodCallTranslatorProvider">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>
                Do not call this constructor directly from either provider or application code as it may change
                as new dependencies are added. Instead, use this type in your constructor so that an instance
                will be created and injected automatically by the dependency injection container. To create
                an instance with some dependent services replaced, first resolve the object from the dependency
                injection container, then replace selected services using the C# 'with' operator. Do not call
                the constructor at any point in this process.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Function &lt;Clone&gt;$ () As RelationalSqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.&lt;Clone&gt;$ : unit -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="relationalSqlTranslatingExpressionVisitorDependencies.&lt;Clone&gt;$ " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AggregateMethodCallTranslatorProvider">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider AggregateMethodCallTranslatorProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider AggregateMethodCallTranslatorProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.AggregateMethodCallTranslatorProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AggregateMethodCallTranslatorProvider As IAggregateMethodCallTranslatorProvider" />
      <MemberSignature Language="F#" Value="member this.AggregateMethodCallTranslatorProvider : Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.AggregateMethodCallTranslatorProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslatorProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The aggregate method-call translation provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.Equals(Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As RelationalSqlTranslatingExpressionVisitorDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies -&gt; bool" Usage="relationalSqlTranslatingExpressionVisitorDependencies.Equals other" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="relationalSqlTranslatingExpressionVisitorDependencies.Equals obj" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="relationalSqlTranslatingExpressionVisitorDependencies.GetHashCode " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberTranslatorProvider">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider MemberTranslatorProvider { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider MemberTranslatorProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.MemberTranslatorProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberTranslatorProvider As IMemberTranslatorProvider" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.MemberTranslatorProvider : Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.MemberTranslatorProvider" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider MemberTranslatorProvider { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property MemberTranslatorProvider As IMemberTranslatorProvider" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.MemberTranslatorProvider : Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider with get, set" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.MemberTranslatorProvider" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The member translation provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodCallTranslatorProvider">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider MethodCallTranslatorProvider { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider MethodCallTranslatorProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.MethodCallTranslatorProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodCallTranslatorProvider As IMethodCallTranslatorProvider" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.MethodCallTranslatorProvider : Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.MethodCallTranslatorProvider" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider MethodCallTranslatorProvider { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property MethodCallTranslatorProvider As IMethodCallTranslatorProvider" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.MethodCallTranslatorProvider : Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider with get, set" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.MethodCallTranslatorProvider" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The scalar method-call translation provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IModel Model { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.Model" />
      <MemberSignature Language="VB.NET" Value="Public Property Model As IModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IModel with get, set" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies? left, Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies left, class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.op_Equality(Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As RelationalSqlTranslatingExpressionVisitorDependencies, right As RelationalSqlTranslatingExpressionVisitorDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies * Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies -&gt; bool" Usage="left = right" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies? left, Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies left, class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.op_Inequality(Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As RelationalSqlTranslatingExpressionVisitorDependencies, right As RelationalSqlTranslatingExpressionVisitorDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies * Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.op_Inequality (left, right)" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlExpressionFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory SqlExpressionFactory { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory SqlExpressionFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.SqlExpressionFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SqlExpressionFactory As ISqlExpressionFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.SqlExpressionFactory : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.SqlExpressionFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory SqlExpressionFactory { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlExpressionFactory As ISqlExpressionFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.SqlExpressionFactory : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory with get, set" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.SqlExpressionFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The expression factory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="relationalSqlTranslatingExpressionVisitorDependencies.ToString " FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMappingSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.TypeMappingSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeMappingSource As IRelationalTypeMappingSource" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.TypeMappingSource" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource { get; init; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeMappingSource As IRelationalTypeMappingSource" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource with get, set" Usage="Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.TypeMappingSource" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The relational type mapping source.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider memberTranslatorProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (memberTranslatorProvider As IMemberTranslatorProvider) As RelationalSqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="relationalSqlTranslatingExpressionVisitorDependencies.With memberTranslatorProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMemberTranslatorProvider" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="memberTranslatorProvider"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider methodCallTranslatorProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (methodCallTranslatorProvider As IMethodCallTranslatorProvider) As RelationalSqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="relationalSqlTranslatingExpressionVisitorDependencies.With methodCallTranslatorProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodCallTranslatorProvider" Type="Microsoft.EntityFrameworkCore.Query.IMethodCallTranslatorProvider" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="methodCallTranslatorProvider"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (sqlExpressionFactory As ISqlExpressionFactory) As RelationalSqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="relationalSqlTranslatingExpressionVisitorDependencies.With sqlExpressionFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="sqlExpressionFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (typeMappingSource As IRelationalTypeMappingSource) As RelationalSqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies" Usage="relationalSqlTranslatingExpressionVisitorDependencies.With typeMappingSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
