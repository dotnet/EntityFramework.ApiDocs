<Type Name="IncludeExpression" FullName="Microsoft.EntityFrameworkCore.Query.IncludeExpression">
  <TypeSignature Language="C#" Value="public class IncludeExpression : System.Linq.Expressions.Expression, Microsoft.EntityFrameworkCore.Query.IPrintableExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IncludeExpression extends System.Linq.Expressions.Expression implements class Microsoft.EntityFrameworkCore.Query.IPrintableExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.IncludeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class IncludeExpression&#xA;Inherits Expression&#xA;Implements IPrintableExpression" />
  <TypeSignature Language="F#" Value="type IncludeExpression = class&#xA;    inherit Expression&#xA;    interface IPrintableExpression" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IPrintableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    An expression that represents include operation in <see cref="P:Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression.ShaperExpression" />.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                and <see href="https://aka.ms/efcore-docs-how-query-works">How EF Core queries work</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IncludeExpression (System.Linq.Expressions.Expression entityExpression, System.Linq.Expressions.Expression navigationExpression, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression entityExpression, class System.Linq.Expressions.Expression navigationExpression, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IncludeExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityExpression As Expression, navigationExpression As Expression, navigation As INavigation)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.IncludeExpression : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Query.IncludeExpression" Usage="new Microsoft.EntityFrameworkCore.Query.IncludeExpression (entityExpression, navigationExpression, navigation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigationExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityExpression">To be added.</param>
        <param name="navigationExpression">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IncludeExpression (System.Linq.Expressions.Expression entityExpression, System.Linq.Expressions.Expression navigationExpression, Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression entityExpression, class System.Linq.Expressions.Expression navigationExpression, class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IncludeExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityExpression As Expression, navigationExpression As Expression, navigation As INavigationBase)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.IncludeExpression : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; Microsoft.EntityFrameworkCore.Query.IncludeExpression" Usage="new Microsoft.EntityFrameworkCore.Query.IncludeExpression (entityExpression, navigationExpression, navigation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityExpression">An expression to get entity which is performing include.</param>
        <param name="navigationExpression">An expression to get included navigation element.</param>
        <param name="navigation">The navigation for this include operation.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.IncludeExpression" /> class. The navigation will be set
                as loaded after completing the Include.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IncludeExpression (System.Linq.Expressions.Expression entityExpression, System.Linq.Expressions.Expression navigationExpression, Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation, bool setLoaded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression entityExpression, class System.Linq.Expressions.Expression navigationExpression, class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation, bool setLoaded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IncludeExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.INavigationBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityExpression As Expression, navigationExpression As Expression, navigation As INavigationBase, setLoaded As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.IncludeExpression : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Metadata.INavigationBase * bool -&gt; Microsoft.EntityFrameworkCore.Query.IncludeExpression" Usage="new Microsoft.EntityFrameworkCore.Query.IncludeExpression (entityExpression, navigationExpression, navigation, setLoaded)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="entityExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="setLoaded" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityExpression">To be added.</param>
        <param name="navigationExpression">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="setLoaded">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression EntityExpression { get; set; }" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression EntityExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.EntityExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EntityExpression As Expression" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="member this.EntityExpression : System.Linq.Expressions.Expression with get, set" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.EntityExpression" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression EntityExpression { get; }" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityExpression As Expression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.EntityExpression : System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.EntityExpression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The expression representing entity performing this include.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print">
      <MemberSignature Language="C#" Value="void IPrintableExpression.Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IncludeExpression.Microsoft#EntityFrameworkCore#Query#IPrintableExpression#Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Sub Print (expressionPrinter As ExpressionPrinter) Implements IPrintableExpression.Print" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit&#xA;override this.Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="includeExpression.Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Navigation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.INavigation Navigation { get; set; }" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.INavigation Navigation" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.Navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Navigation As INavigation" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="member this.Navigation : Microsoft.EntityFrameworkCore.Metadata.INavigation with get, set" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.Navigation" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.INavigationBase Navigation { get; }" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.INavigationBase Navigation" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Navigation As INavigationBase" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Navigation : Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.Navigation" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.INavigation</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.INavigationBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The navigation associated with this include operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression NavigationExpression { get; set; }" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression NavigationExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.NavigationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NavigationExpression As Expression" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="member this.NavigationExpression : System.Linq.Expressions.Expression with get, set" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.NavigationExpression" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression NavigationExpression { get; }" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NavigationExpression As Expression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.NavigationExpression : System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.NavigationExpression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The expression representing included navigation element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public virtual void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IncludeExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Print (expressionPrinter As ExpressionPrinter)" />
      <MemberSignature Language="F#" Value="abstract member Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit&#xA;override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="includeExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLoaded">
      <MemberSignature Language="C#" Value="public virtual bool SetLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetLoaded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.SetLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SetLoaded As Boolean" />
      <MemberSignature Language="F#" Value="member this.SetLoaded : bool" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.SetLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="Microsoft.EntityFrameworkCore.Query.IncludeExpression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.IncludeExpression Update (System.Linq.Expressions.Expression entityExpression, System.Linq.Expressions.Expression navigationExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.IncludeExpression Update(class System.Linq.Expressions.Expression entityExpression, class System.Linq.Expressions.Expression navigationExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IncludeExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (entityExpression As Expression, navigationExpression As Expression) As IncludeExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Query.IncludeExpression&#xA;override this.Update : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Query.IncludeExpression" Usage="includeExpression.Update (entityExpression, navigationExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.IncludeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityExpression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="navigationExpression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="entityExpression">The <see cref="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.EntityExpression" /> property of the result.</param>
        <param name="navigationExpression">The <see cref="P:Microsoft.EntityFrameworkCore.Query.IncludeExpression.NavigationExpression" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IncludeExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="includeExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
