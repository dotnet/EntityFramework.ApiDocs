<Type Name="RelationalLiftableConstantFactory" FullName="Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory">
  <TypeSignature Language="C#" Value="public class RelationalLiftableConstantFactory : Microsoft.EntityFrameworkCore.Query.LiftableConstantFactory, Microsoft.EntityFrameworkCore.Query.IRelationalLiftableConstantFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalLiftableConstantFactory extends Microsoft.EntityFrameworkCore.Query.LiftableConstantFactory implements class Microsoft.EntityFrameworkCore.Query.ILiftableConstantFactory, class Microsoft.EntityFrameworkCore.Query.IRelationalLiftableConstantFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalLiftableConstantFactory&#xA;Inherits LiftableConstantFactory&#xA;Implements IRelationalLiftableConstantFactory" />
  <TypeSignature Language="F#" Value="type RelationalLiftableConstantFactory = class&#xA;    inherit LiftableConstantFactory&#xA;    interface IRelationalLiftableConstantFactory&#xA;    interface ILiftableConstantFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.LiftableConstantFactory</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.ILiftableConstantFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IRelationalLiftableConstantFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9100")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9100")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an experimental API used by the Entity Framework Core feature and it is not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalLiftableConstantFactory (Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionDependencies dependencies, Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies relationalDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies relationalDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory.#ctor(Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionDependencies,Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As LiftableConstantExpressionDependencies, relationalDependencies As RelationalLiftableConstantExpressionDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory : Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionDependencies * Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies -&gt; Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory (dependencies, relationalDependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="relationalDependencies">To be added.</param>
        <summary>
                This is an experimental API used by the Entity Framework Core feature and it is not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLiftableConstant">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression CreateLiftableConstant (object? originalValue, System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext,object&gt;&gt; resolverExpression, string variableName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression CreateLiftableConstant(object originalValue, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext, object&gt;&gt; resolverExpression, string variableName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory.CreateLiftableConstant(System.Object,System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext,System.Object}},System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateLiftableConstant (originalValue As Object, resolverExpression As Expression(Of Func(Of RelationalMaterializerLiftableConstantContext, Object)), variableName As String, type As Type) As LiftableConstantExpression" />
      <MemberSignature Language="F#" Value="override this.CreateLiftableConstant : obj * System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext, obj&gt;&gt; * string * Type -&gt; Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" Usage="relationalLiftableConstantFactory.CreateLiftableConstant (originalValue, resolverExpression, variableName, type)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IRelationalLiftableConstantFactory.CreateLiftableConstant(System.Object,System.Linq.Expressions.Expression{System.Func{Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext,System.Object}},System.String,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalValue" Type="System.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resolverExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.RelationalMaterializerLiftableConstantContext,System.Object&gt;&gt;" />
        <Parameter Name="variableName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="originalValue">To be added.</param>
        <param name="resolverExpression">To be added.</param>
        <param name="variableName">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This is an experimental API used by the Entity Framework Core feature and it is not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalDependencies">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies RelationalDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies RelationalDependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory.RelationalDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RelationalDependencies As RelationalLiftableConstantExpressionDependencies" />
      <MemberSignature Language="F#" Value="member this.RelationalDependencies : Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies" Usage="Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantFactory.RelationalDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalLiftableConstantExpressionDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an experimental API used by the Entity Framework Core feature and it is not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
