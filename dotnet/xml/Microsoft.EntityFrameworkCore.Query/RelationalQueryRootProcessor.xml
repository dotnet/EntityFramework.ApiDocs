<Type Name="RelationalQueryRootProcessor" FullName="Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor">
  <TypeSignature Language="C#" Value="public class RelationalQueryRootProcessor : Microsoft.EntityFrameworkCore.Query.QueryRootProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalQueryRootProcessor extends Microsoft.EntityFrameworkCore.Query.QueryRootProcessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalQueryRootProcessor&#xA;Inherits QueryRootProcessor" />
  <TypeSignature Language="F#" Value="type RelationalQueryRootProcessor = class&#xA;    inherit QueryRootProcessor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.QueryRootProcessor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <inheritdoc />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalQueryRootProcessor (Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies dependencies, Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies relationalDependencies, Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies relationalDependencies, class Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor.#ctor(Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryTranslationPreprocessorDependencies, relationalDependencies As RelationalQueryTranslationPreprocessorDependencies, queryCompilationContext As QueryCompilationContext)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor : Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies * Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies * Microsoft.EntityFrameworkCore.Query.QueryCompilationContext -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor (dependencies, relationalDependencies, queryCompilationContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessorDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryTranslationPreprocessorDependencies" />
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this class.</param>
        <param name="relationalDependencies">Parameter object containing relational dependencies for this class.</param>
        <param name="queryCompilationContext">The query compilation context object to use.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldConvertToInlineQueryRoot">
      <MemberSignature Language="C#" Value="protected override bool ShouldConvertToInlineQueryRoot (System.Linq.Expressions.NewArrayExpression newArrayExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldConvertToInlineQueryRoot(class System.Linq.Expressions.NewArrayExpression newArrayExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor.ShouldConvertToInlineQueryRoot(System.Linq.Expressions.NewArrayExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldConvertToInlineQueryRoot (newArrayExpression As NewArrayExpression) As Boolean" />
      <MemberSignature Language="F#" Value="override this.ShouldConvertToInlineQueryRoot : System.Linq.Expressions.NewArrayExpression -&gt; bool" Usage="relationalQueryRootProcessor.ShouldConvertToInlineQueryRoot newArrayExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newArrayExpression" Type="System.Linq.Expressions.NewArrayExpression" />
      </Parameters>
      <Docs>
        <param name="newArrayExpression">To be added.</param>
        <summary>
                Indicates that a <see cref="T:System.Linq.Expressions.ConstantExpression" /> can be converted to a <see cref="T:Microsoft.EntityFrameworkCore.Query.InlineQueryRootExpression" />;
                the latter will end up in <see cref="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitInlineQueryRoot(Microsoft.EntityFrameworkCore.Query.InlineQueryRootExpression)" /> for
                translation to a SQL <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldConvertToParameterQueryRoot">
      <MemberSignature Language="C#" Value="protected override bool ShouldConvertToParameterQueryRoot (System.Linq.Expressions.ParameterExpression constantExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldConvertToParameterQueryRoot(class System.Linq.Expressions.ParameterExpression constantExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor.ShouldConvertToParameterQueryRoot(System.Linq.Expressions.ParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldConvertToParameterQueryRoot (constantExpression As ParameterExpression) As Boolean" />
      <MemberSignature Language="F#" Value="override this.ShouldConvertToParameterQueryRoot : System.Linq.Expressions.ParameterExpression -&gt; bool" Usage="relationalQueryRootProcessor.ShouldConvertToParameterQueryRoot constantExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantExpression" Type="System.Linq.Expressions.ParameterExpression" />
      </Parameters>
      <Docs>
        <param name="constantExpression">To be added.</param>
        <summary>
                Indicates that a <see cref="T:System.Linq.Expressions.ParameterExpression" /> can be converted to a <see cref="T:Microsoft.EntityFrameworkCore.Query.ParameterQueryRootExpression" />;
                the latter will end up in <see cref="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslatePrimitiveCollection(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String)" /> for
                translation to a provider-specific SQL expansion mechanism, e.g. <c>OPENJSON</c> on SQL Server.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (node As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="relationalQueryRootProcessor.VisitExtension node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="VisitMethodCall">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression methodCallExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMethodCall(class System.Linq.Expressions.MethodCallExpression methodCallExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryRootProcessor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMethodCall (methodCallExpression As MethodCallExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; System.Linq.Expressions.Expression" Usage="relationalQueryRootProcessor.VisitMethodCall methodCallExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodCallExpression" Type="System.Linq.Expressions.MethodCallExpression" />
      </Parameters>
      <Docs>
        <param name="methodCallExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
