<Type Name="EvaluatableExpressionFilter" FullName="Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter">
  <TypeSignature Language="C#" Value="public class EvaluatableExpressionFilter : Microsoft.EntityFrameworkCore.Query.IEvaluatableExpressionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EvaluatableExpressionFilter extends System.Object implements class Microsoft.EntityFrameworkCore.Query.IEvaluatableExpressionFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EvaluatableExpressionFilter&#xA;Implements IEvaluatableExpressionFilter" />
  <TypeSignature Language="F#" Value="type EvaluatableExpressionFilter = class&#xA;    interface IEvaluatableExpressionFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IEvaluatableExpressionFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Represents a filter for evaluatable expressions.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                and <see href="https://aka.ms/efcore-docs-how-query-works">How EF Core queries work</see> for more information.
            </remarks>
    <inheritdoc />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EvaluatableExpressionFilter (Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter.#ctor(Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As EvaluatableExpressionFilterDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter : Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies -&gt; Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter" Usage="new Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">The dependencies to use.</param>
        <summary>
          <para>
                    Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter" /> instance.
                </para>
          <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As EvaluatableExpressionFilterDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies" Usage="Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilterDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvaluatableExpression">
      <MemberSignature Language="C#" Value="public virtual bool IsEvaluatableExpression (System.Linq.Expressions.Expression expression, Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEvaluatableExpression(class System.Linq.Expressions.Expression expression, class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.EvaluatableExpressionFilter.IsEvaluatableExpression(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEvaluatableExpression (expression As Expression, model As IModel) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsEvaluatableExpression : System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; bool&#xA;override this.IsEvaluatableExpression : System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; bool" Usage="evaluatableExpressionFilter.IsEvaluatableExpression (expression, model)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IEvaluatableExpressionFilter.IsEvaluatableExpression(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.IModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="expression">The expression.</param>
        <param name="model">The model.</param>
        <summary>
                Checks whether the given expression can be evaluated.
            </summary>
        <returns>
          <see langword="true" /> if the expression can be evaluated; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
