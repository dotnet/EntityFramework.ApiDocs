<Type Name="LiftableConstantExpressionHelpers" FullName="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers">
  <TypeSignature Language="C#" Value="public static class LiftableConstantExpressionHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LiftableConstantExpressionHelpers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers" />
  <TypeSignature Language="VB.NET" Value="Public Class LiftableConstantExpressionHelpers" />
  <TypeSignature Language="F#" Value="type LiftableConstantExpressionHelpers = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9100")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9100")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildClrCollectionAccessor">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression BuildClrCollectionAccessor (Microsoft.EntityFrameworkCore.Metadata.INavigationBase? navigation, System.Linq.Expressions.ParameterExpression liftableConstantContextParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression BuildClrCollectionAccessor(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation, class System.Linq.Expressions.ParameterExpression liftableConstantContextParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildClrCollectionAccessor(Microsoft.EntityFrameworkCore.Metadata.INavigationBase,System.Linq.Expressions.ParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildClrCollectionAccessor (navigation As INavigationBase, liftableConstantContextParameter As ParameterExpression) As Expression" />
      <MemberSignature Language="F#" Value="static member BuildClrCollectionAccessor : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * System.Linq.Expressions.ParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildClrCollectionAccessor (navigation, liftableConstantContextParameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" />
        <Parameter Name="liftableConstantContextParameter" Type="System.Linq.Expressions.ParameterExpression" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="liftableConstantContextParameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildClrCollectionAccessorLambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,object&gt;&gt; BuildClrCollectionAccessorLambda (Microsoft.EntityFrameworkCore.Metadata.INavigationBase? navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, object&gt;&gt; BuildClrCollectionAccessorLambda(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildClrCollectionAccessorLambda(Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildClrCollectionAccessorLambda (navigation As INavigationBase) As Expression(Of Func(Of MaterializerLiftableConstantContext, Object))" />
      <MemberSignature Language="F#" Value="static member BuildClrCollectionAccessorLambda : Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, obj&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildClrCollectionAccessorLambda navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildMemberAccessForEntityOrComplexType">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression BuildMemberAccessForEntityOrComplexType (Microsoft.EntityFrameworkCore.Metadata.ITypeBase targetType, System.Linq.Expressions.ParameterExpression liftableConstantContextParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression BuildMemberAccessForEntityOrComplexType(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase targetType, class System.Linq.Expressions.ParameterExpression liftableConstantContextParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessForEntityOrComplexType(Microsoft.EntityFrameworkCore.Metadata.ITypeBase,System.Linq.Expressions.ParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildMemberAccessForEntityOrComplexType (targetType As ITypeBase, liftableConstantContextParameter As ParameterExpression) As Expression" />
      <MemberSignature Language="F#" Value="static member BuildMemberAccessForEntityOrComplexType : Microsoft.EntityFrameworkCore.Metadata.ITypeBase * System.Linq.Expressions.ParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessForEntityOrComplexType (targetType, liftableConstantContextParameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" />
        <Parameter Name="liftableConstantContextParameter" Type="System.Linq.Expressions.ParameterExpression" />
      </Parameters>
      <Docs>
        <param name="targetType">To be added.</param>
        <param name="liftableConstantContextParameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildMemberAccessForProperty">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression BuildMemberAccessForProperty (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? property, System.Linq.Expressions.ParameterExpression liftableConstantContextParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression BuildMemberAccessForProperty(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property, class System.Linq.Expressions.ParameterExpression liftableConstantContextParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessForProperty(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Linq.Expressions.ParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildMemberAccessForProperty (property As IPropertyBase, liftableConstantContextParameter As ParameterExpression) As Expression" />
      <MemberSignature Language="F#" Value="static member BuildMemberAccessForProperty : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * System.Linq.Expressions.ParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessForProperty (property, liftableConstantContextParameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="liftableConstantContextParameter" Type="System.Linq.Expressions.ParameterExpression" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="liftableConstantContextParameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildMemberAccessLambdaForEntityOrComplexType">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,object&gt;&gt; BuildMemberAccessLambdaForEntityOrComplexType (Microsoft.EntityFrameworkCore.Metadata.ITypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, object&gt;&gt; BuildMemberAccessLambdaForEntityOrComplexType(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessLambdaForEntityOrComplexType(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildMemberAccessLambdaForEntityOrComplexType (type As ITypeBase) As Expression(Of Func(Of MaterializerLiftableConstantContext, Object))" />
      <MemberSignature Language="F#" Value="static member BuildMemberAccessLambdaForEntityOrComplexType : Microsoft.EntityFrameworkCore.Metadata.ITypeBase -&gt; System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, obj&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessLambdaForEntityOrComplexType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildMemberAccessLambdaForProperty">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,object&gt;&gt; BuildMemberAccessLambdaForProperty (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, object&gt;&gt; BuildMemberAccessLambdaForProperty(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessLambdaForProperty(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildMemberAccessLambdaForProperty (property As IPropertyBase) As Expression(Of Func(Of MaterializerLiftableConstantContext, Object))" />
      <MemberSignature Language="F#" Value="static member BuildMemberAccessLambdaForProperty : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, obj&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildMemberAccessLambdaForProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNavigationAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression BuildNavigationAccess (Microsoft.EntityFrameworkCore.Metadata.INavigationBase? navigation, System.Linq.Expressions.ParameterExpression liftableConstantContextParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression BuildNavigationAccess(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation, class System.Linq.Expressions.ParameterExpression liftableConstantContextParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildNavigationAccess(Microsoft.EntityFrameworkCore.Metadata.INavigationBase,System.Linq.Expressions.ParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildNavigationAccess (navigation As INavigationBase, liftableConstantContextParameter As ParameterExpression) As Expression" />
      <MemberSignature Language="F#" Value="static member BuildNavigationAccess : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * System.Linq.Expressions.ParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildNavigationAccess (navigation, liftableConstantContextParameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" />
        <Parameter Name="liftableConstantContextParameter" Type="System.Linq.Expressions.ParameterExpression" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="liftableConstantContextParameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNavigationAccessLambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,object&gt;&gt; BuildNavigationAccessLambda (Microsoft.EntityFrameworkCore.Metadata.INavigationBase? navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, object&gt;&gt; BuildNavigationAccessLambda(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildNavigationAccessLambda(Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildNavigationAccessLambda (navigation As INavigationBase) As Expression(Of Func(Of MaterializerLiftableConstantContext, Object))" />
      <MemberSignature Language="F#" Value="static member BuildNavigationAccessLambda : Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext, obj&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.BuildNavigationAccessLambda navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.EntityFrameworkCore.Query.MaterializerLiftableConstantContext,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteral">
      <MemberSignature Language="C#" Value="public static bool IsLiteral (object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.IsLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLiteral (value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLiteral : obj -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpressionHelpers.IsLiteral value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
