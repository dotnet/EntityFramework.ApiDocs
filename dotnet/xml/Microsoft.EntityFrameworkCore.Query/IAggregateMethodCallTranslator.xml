<Type Name="IAggregateMethodCallTranslator" FullName="Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslator">
  <TypeSignature Language="C#" Value="public interface IAggregateMethodCallTranslator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAggregateMethodCallTranslator" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAggregateMethodCallTranslator" />
  <TypeSignature Language="F#" Value="type IAggregateMethodCallTranslator = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAggregateMethodCallTranslator" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A SQL translator for LINQ <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expression representing an aggregate function.
                </para>
      <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression? Translate (System.Reflection.MethodInfo method, Microsoft.EntityFrameworkCore.Query.EnumerableExpression source, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; arguments, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Translate(class System.Reflection.MethodInfo method, class Microsoft.EntityFrameworkCore.Query.EnumerableExpression source, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; arguments, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.IAggregateMethodCallTranslator.Translate(System.Reflection.MethodInfo,Microsoft.EntityFrameworkCore.Query.EnumerableExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (method As MethodInfo, source As EnumerableExpression, arguments As IReadOnlyList(Of SqlExpression), logger As IDiagnosticsLogger(Of DbLoggerCategory.Query)) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member Translate : System.Reflection.MethodInfo * Microsoft.EntityFrameworkCore.Query.EnumerableExpression * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="iAggregateMethodCallTranslator.Translate (method, source, arguments, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Query.EnumerableExpression" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;" />
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" />
      </Parameters>
      <Docs>
        <param name="method">The method info from <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />.</param>
        <param name="source">The source on which the aggregate method is applied.</param>
        <param name="arguments">SQL representations of scalar <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />.</param>
        <param name="logger">The query logger to use.</param>
        <summary>
                Translates a LINQ <see cref="T:System.Linq.Expressions.MethodCallExpression" /> to a SQL equivalent.
            </summary>
        <returns>A SQL translation of the <see cref="T:System.Linq.Expressions.MethodCallExpression" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
