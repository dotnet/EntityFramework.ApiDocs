<Type Name="LiftableConstantProcessor" FullName="Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor">
  <TypeSignature Language="C#" Value="public class LiftableConstantProcessor : System.Linq.Expressions.ExpressionVisitor, Microsoft.EntityFrameworkCore.Query.ILiftableConstantProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiftableConstantProcessor extends System.Linq.Expressions.ExpressionVisitor implements class Microsoft.EntityFrameworkCore.Query.ILiftableConstantProcessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Class LiftableConstantProcessor&#xA;Inherits ExpressionVisitor&#xA;Implements ILiftableConstantProcessor" />
  <TypeSignature Language="F#" Value="type LiftableConstantProcessor = class&#xA;    inherit ExpressionVisitor&#xA;    interface ILiftableConstantProcessor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.ExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.ILiftableConstantProcessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9100")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9100")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an experimental API used by the Entity Framework Core feature and it is not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiftableConstantProcessor (Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.#ctor(Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ShapedQueryCompilingExpressionVisitorDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor : Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies -&gt; Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor" Usage="new Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineConstant">
      <MemberSignature Language="C#" Value="protected virtual System.Linq.Expressions.ConstantExpression InlineConstant (Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression liftableConstant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.ConstantExpression InlineConstant(class Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression liftableConstant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.InlineConstant(Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InlineConstant (liftableConstant As LiftableConstantExpression) As ConstantExpression" />
      <MemberSignature Language="F#" Value="abstract member InlineConstant : Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression -&gt; System.Linq.Expressions.ConstantExpression&#xA;override this.InlineConstant : Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression -&gt; System.Linq.Expressions.ConstantExpression" Usage="liftableConstantProcessor.InlineConstant liftableConstant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="liftableConstant" Type="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" />
      </Parameters>
      <Docs>
        <param name="liftableConstant">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineConstants">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression InlineConstants (System.Linq.Expressions.Expression expression, bool supportsPrecompiledQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression InlineConstants(class System.Linq.Expressions.Expression expression, bool supportsPrecompiledQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.InlineConstants(System.Linq.Expressions.Expression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InlineConstants (expression As Expression, supportsPrecompiledQuery As Boolean) As Expression" />
      <MemberSignature Language="F#" Value="abstract member InlineConstants : System.Linq.Expressions.Expression * bool -&gt; System.Linq.Expressions.Expression&#xA;override this.InlineConstants : System.Linq.Expressions.Expression * bool -&gt; System.Linq.Expressions.Expression" Usage="liftableConstantProcessor.InlineConstants (expression, supportsPrecompiledQuery)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.ILiftableConstantProcessor.InlineConstants(System.Linq.Expressions.Expression,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="supportsPrecompiledQuery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expression">An expression containing <see cref="T:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" /> nodes.</param>
        <param name="supportsPrecompiledQuery">A value indicating whether the provider supports precompiled queries.</param>
        <summary>
                Inlines all liftable constants as simple <see cref="T:System.Linq.Expressions.ConstantExpression" /> nodes in the tree, containing the result of
                evaluating the liftable constants' resolvers.
            </summary>
        <returns>
                An expression tree containing <see cref="T:System.Linq.Expressions.ConstantExpression" /> nodes instead of <see cref="T:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" /> nodes.
            </returns>
        <remarks>
          <para>
                    Liftable constant inlining is performed in the regular, non-precompiled query pipeline flow.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LiftConstant">
      <MemberSignature Language="C#" Value="protected virtual System.Linq.Expressions.ParameterExpression LiftConstant (Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression liftableConstant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.ParameterExpression LiftConstant(class Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression liftableConstant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.LiftConstant(Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LiftConstant (liftableConstant As LiftableConstantExpression) As ParameterExpression" />
      <MemberSignature Language="F#" Value="abstract member LiftConstant : Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression -&gt; System.Linq.Expressions.ParameterExpression&#xA;override this.LiftConstant : Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression -&gt; System.Linq.Expressions.ParameterExpression" Usage="liftableConstantProcessor.LiftConstant liftableConstant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="liftableConstant" Type="Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" />
      </Parameters>
      <Docs>
        <param name="liftableConstant">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiftConstants">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression LiftConstants (System.Linq.Expressions.Expression expression, System.Linq.Expressions.ParameterExpression contextParameter, System.Collections.Generic.HashSet&lt;string&gt; variableNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression LiftConstants(class System.Linq.Expressions.Expression expression, class System.Linq.Expressions.ParameterExpression contextParameter, class System.Collections.Generic.HashSet`1&lt;string&gt; variableNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.LiftConstants(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Collections.Generic.HashSet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LiftConstants (expression As Expression, contextParameter As ParameterExpression, variableNames As HashSet(Of String)) As Expression" />
      <MemberSignature Language="F#" Value="abstract member LiftConstants : System.Linq.Expressions.Expression * System.Linq.Expressions.ParameterExpression * System.Collections.Generic.HashSet&lt;string&gt; -&gt; System.Linq.Expressions.Expression&#xA;override this.LiftConstants : System.Linq.Expressions.Expression * System.Linq.Expressions.ParameterExpression * System.Collections.Generic.HashSet&lt;string&gt; -&gt; System.Linq.Expressions.Expression" Usage="liftableConstantProcessor.LiftConstants (expression, contextParameter, variableNames)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.ILiftableConstantProcessor.LiftConstants(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Collections.Generic.HashSet{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="contextParameter" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="variableNames" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="expression">An expression containing <see cref="T:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" /> nodes.</param>
        <param name="contextParameter">
                The <see cref="T:System.Linq.Expressions.ParameterExpression" /> to be embedded in the lifted constant nodes' resolvers, instead of their lambda
                parameter.
            </param>
        <param name="variableNames">
                A set of variables already in use, for uniquification. Any generates variables will be added to this set.
            </param>
        <summary>
                Lifts all <see cref="T:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" /> nodes, embedding <see cref="T:System.Linq.Expressions.ParameterExpression" /> in their place and
                exposing the parameter and resolver via <see cref="P:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.LiftedConstants" />.
            </summary>
        <returns>
                An expression tree containing <see cref="T:System.Linq.Expressions.ParameterExpression" /> nodes instead of <see cref="T:Microsoft.EntityFrameworkCore.Query.LiftableConstantExpression" /> nodes.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiftedConstants">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;(System.Linq.Expressions.ParameterExpression Parameter, System.Linq.Expressions.Expression Expression)&gt; LiftedConstants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype System.ValueTuple`2&lt;class System.Linq.Expressions.ParameterExpression, class System.Linq.Expressions.Expression&gt;&gt; LiftedConstants" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.LiftedConstants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiftedConstants As IReadOnlyList(Of ValueTuple(Of ParameterExpression, Expression))" />
      <MemberSignature Language="F#" Value="member this.LiftedConstants : System.Collections.Generic.IReadOnlyList&lt;ValueTuple&lt;System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.LiftedConstants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Parameter", "Expression" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Parameter", "Expression" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.ValueTuple&lt;System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Exposes all constants that have been lifted during the last invocation of <see cref="P:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.LiftedConstants" />.
            </summary>
        <value>To be added.</value>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression binaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitBinary(class System.Linq.Expressions.BinaryExpression binaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitBinary (binaryExpression As BinaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitBinary : System.Linq.Expressions.BinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="liftableConstantProcessor.VisitBinary binaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryExpression" Type="System.Linq.Expressions.BinaryExpression" />
      </Parameters>
      <Docs>
        <param name="binaryExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.LiftableConstantProcessor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (node As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="liftableConstantProcessor.VisitExtension node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
