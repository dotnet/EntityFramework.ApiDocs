<Type Name="SqlNullabilityProcessor" FullName="Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor">
  <TypeSignature Language="C#" Value="public class SqlNullabilityProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlNullabilityProcessor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlNullabilityProcessor" />
  <TypeSignature Language="F#" Value="type SqlNullabilityProcessor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A class that processes a SQL tree based on nullability of nodes to apply null semantics in use and
                    optimize it based on parameter values.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlNullabilityProcessor (Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies dependencies, bool useRelationalNulls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies dependencies, bool useRelationalNulls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As RelationalParameterBasedSqlProcessorDependencies, useRelationalNulls As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor : Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor" Usage="new Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor (dependencies, useRelationalNulls)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies" />
        <Parameter Name="useRelationalNulls" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this class.</param>
        <param name="useRelationalNulls">A bool value indicating whether relational null semantics are in use.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNonNullableColumn">
      <MemberSignature Language="C#" Value="protected virtual void AddNonNullableColumn (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression columnExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddNonNullableColumn(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression columnExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.AddNonNullableColumn(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddNonNullableColumn (columnExpression As ColumnExpression)" />
      <MemberSignature Language="F#" Value="abstract member AddNonNullableColumn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression -&gt; unit&#xA;override this.AddNonNullableColumn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression -&gt; unit" Usage="sqlNullabilityProcessor.AddNonNullableColumn columnExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" />
      </Parameters>
      <Docs>
        <param name="columnExpression">A column expression to add.</param>
        <summary>
                Adds a column to non nullable columns list to further optimizations can take the column as non-nullable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As RelationalParameterBasedSqlProcessorDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies" Usage="Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalParameterBasedSqlProcessorDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotCache">
      <MemberSignature Language="C#" Value="protected virtual void DoNotCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoNotCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.DoNotCache" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DoNotCache ()" />
      <MemberSignature Language="F#" Value="abstract member DoNotCache : unit -&gt; unit&#xA;override this.DoNotCache : unit -&gt; unit" Usage="sqlNullabilityProcessor.DoNotCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Marks the select expression being processed as cannot be cached.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimizeNonNullableNotExpression">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression OptimizeNonNullableNotExpression (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression sqlUnaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression OptimizeNonNullableNotExpression(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression sqlUnaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.OptimizeNonNullableNotExpression(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OptimizeNonNullableNotExpression (sqlUnaryExpression As SqlUnaryExpression) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member OptimizeNonNullableNotExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.OptimizeNonNullableNotExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.OptimizeNonNullableNotExpression sqlUnaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlUnaryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="sqlUnaryExpression">The expression to simplify.</param>
        <summary>
                Attempts to simplify a unary not operation on a non-nullable operand.
            </summary>
        <returns>The simplified expression, or the original expression if it cannot be simplified.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterValues">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; ParameterValues { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; ParameterValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.ParameterValues" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ParameterValues As IReadOnlyDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.ParameterValues : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.ParameterValues" />
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IReadOnlyDictionary&lt;string,object?&gt; ParameterValues { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dictionary of current parameter values in use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferExistsToInWithCoalesce">
      <MemberSignature Language="C#" Value="protected virtual bool PreferExistsToInWithCoalesce { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferExistsToInWithCoalesce" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.PreferExistsToInWithCoalesce" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PreferExistsToInWithCoalesce As Boolean" />
      <MemberSignature Language="F#" Value="member this.PreferExistsToInWithCoalesce : bool" Usage="Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.PreferExistsToInWithCoalesce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Determines whether an <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression" /> will be transformed to an <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression" /> when it would
                otherwise require complex compensation for null semantics.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression Process (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, out bool canCache);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression Process(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, [out] bool&amp; canCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Process(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Process (selectExpression As SelectExpression, parameterValues As IReadOnlyDictionary(Of String, Object), ByRef canCache As Boolean) As SelectExpression" />
      <MemberSignature Language="F#" Value="abstract member Process : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&#xA;override this.Process : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Usage="sqlNullabilityProcessor.Process (selectExpression, parameterValues, canCache)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression Process (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, System.Collections.Generic.IReadOnlyDictionary&lt;string,object?&gt; parameterValues, out bool canCache);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="canCache" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="selectExpression">A select expression to process.</param>
        <param name="parameterValues">A dictionary of parameter values in use.</param>
        <param name="canCache">A bool value indicating whether the select expression can be cached.</param>
        <summary>
                Processes a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" /> to apply null semantics and optimize it.
            </summary>
        <returns>An optimized select expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression Process (System.Linq.Expressions.Expression queryExpression, System.Collections.Generic.IReadOnlyDictionary&lt;string,object?&gt; parameterValues, out bool canCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Process(class System.Linq.Expressions.Expression queryExpression, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, [out] bool&amp; canCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Process(System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Process (queryExpression As Expression, parameterValues As IReadOnlyDictionary(Of String, Object), ByRef canCache As Boolean) As Expression" />
      <MemberSignature Language="F#" Value="abstract member Process : System.Linq.Expressions.Expression * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool -&gt; System.Linq.Expressions.Expression&#xA;override this.Process : System.Linq.Expressions.Expression * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool -&gt; System.Linq.Expressions.Expression" Usage="sqlNullabilityProcessor.Process (queryExpression, parameterValues, canCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="canCache" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="queryExpression">A query expression to process.</param>
        <param name="parameterValues">A dictionary of parameter values in use.</param>
        <param name="canCache">A bool value indicating whether the query expression can be cached.</param>
        <summary>
                Processes a query expression to apply null semantics and optimize it.
            </summary>
        <returns>An optimized query expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseRelationalNulls">
      <MemberSignature Language="C#" Value="protected virtual bool UseRelationalNulls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseRelationalNulls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.UseRelationalNulls" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UseRelationalNulls As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseRelationalNulls : bool" Usage="Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.UseRelationalNulls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A bool value indicating whether relational null semantics are in use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression Visit (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression Visit(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Visit(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Visit (selectExpression As SelectExpression) As SelectExpression" />
      <MemberSignature Language="F#" Value="abstract member Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&#xA;override this.Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Usage="sqlNullabilityProcessor.Visit selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">A select expression to visit.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />.
            </summary>
        <returns>An optimized select expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Visit (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase tableExpressionBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Visit(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase tableExpressionBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Visit(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Visit (tableExpressionBase As TableExpressionBase) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="abstract member Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase&#xA;override this.Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="sqlNullabilityProcessor.Visit tableExpressionBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableExpressionBase" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" />
      </Parameters>
      <Docs>
        <param name="tableExpressionBase">A table expression base to visit.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" />.
            </summary>
        <returns>An optimized table expression base.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Visit (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression sqlExpression, out bool nullable);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Visit(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression sqlExpression, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Visit(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Visit (sqlExpression As SqlExpression, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.Visit (sqlExpression, nullable)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression? Visit (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression? sqlExpression, out bool nullable);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">A sql expression to visit.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Visit (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression sqlExpression, bool allowOptimizedExpansion, out bool nullable);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Visit(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression sqlExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.Visit(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Visit (sqlExpression As SqlExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.Visit : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.Visit (sqlExpression, allowOptimizedExpansion, nullable)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression? Visit (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression? sqlExpression, bool allowOptimizedExpansion, out bool nullable);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">A sql expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAtTimeZone">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitAtTimeZone (Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression atTimeZoneExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitAtTimeZone(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression atTimeZoneExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitAtTimeZone(Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitAtTimeZone (atTimeZoneExpression As AtTimeZoneExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitAtTimeZone : Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitAtTimeZone : Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitAtTimeZone (atTimeZoneExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atTimeZoneExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.AtTimeZoneExpression" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="atTimeZoneExpression">To be added.</param>
        <param name="allowOptimizedExpansion">To be added.</param>
        <param name="nullable">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCase">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitCase (Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression caseExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitCase(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression caseExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitCase(Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitCase (caseExpression As CaseExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitCase : Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitCase : Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitCase (caseExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caseExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="caseExpression">A case expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCollate">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitCollate (Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression collateExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitCollate(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression collateExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitCollate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitCollate (collateExpression As CollateExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitCollate : Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitCollate : Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitCollate (collateExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collateExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collateExpression">A collate expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.CollateExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitColumn">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitColumn (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression columnExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitColumn(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression columnExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitColumn(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitColumn (columnExpression As ColumnExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitColumn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitColumn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitColumn (columnExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnExpression">A column expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCustomSqlExpression">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitCustomSqlExpression (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression sqlExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitCustomSqlExpression(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression sqlExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitCustomSqlExpression(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitCustomSqlExpression (sqlExpression As SqlExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitCustomSqlExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitCustomSqlExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitCustomSqlExpression (sqlExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">A sql expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a custom <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" /> added by providers and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDistinct">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitDistinct (Microsoft.EntityFrameworkCore.Query.SqlExpressions.DistinctExpression distinctExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitDistinct(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.DistinctExpression distinctExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitDistinct(Microsoft.EntityFrameworkCore.Query.SqlExpressions.DistinctExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitDistinct (distinctExpression As DistinctExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitDistinct : Microsoft.EntityFrameworkCore.Query.SqlExpressions.DistinctExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitDistinct : Microsoft.EntityFrameworkCore.Query.SqlExpressions.DistinctExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitDistinct (distinctExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distinctExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.DistinctExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="distinctExpression">A collate expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DistinctExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExists">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitExists (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression existsExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitExists(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression existsExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitExists(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExists (existsExpression As ExistsExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitExists : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitExists : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitExists (existsExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existsExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="existsExpression">An exists expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits an <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIn">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitIn (Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression inExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitIn(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression inExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitIn(Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitIn (inExpression As InExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitIn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitIn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitIn (inExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inExpression">An in expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits an <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitJsonScalar">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitJsonScalar (Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression jsonScalarExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitJsonScalar(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression jsonScalarExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitJsonScalar(Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitJsonScalar (jsonScalarExpression As JsonScalarExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitJsonScalar : Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitJsonScalar : Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitJsonScalar (jsonScalarExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonScalarExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="jsonScalarExpression">A json scalar expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLike">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitLike (Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression likeExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitLike(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression likeExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitLike(Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitLike (likeExpression As LikeExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitLike : Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitLike : Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitLike (likeExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="likeExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="likeExpression">A like expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRowNumber">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitRowNumber (Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression rowNumberExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitRowNumber(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression rowNumberExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitRowNumber (rowNumberExpression As RowNumberExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitRowNumber : Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitRowNumber : Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitRowNumber (rowNumberExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNumberExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowNumberExpression">A row number expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRowValue">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitRowValue (Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression rowValueExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitRowValue(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression rowValueExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitRowValue(Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitRowValue (rowValueExpression As RowValueExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitRowValue : Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitRowValue : Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitRowValue (rowValueExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowValueExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="rowValueExpression">A row value expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitScalarSubquery">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitScalarSubquery (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression scalarSubqueryExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitScalarSubquery(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression scalarSubqueryExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitScalarSubquery(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitScalarSubquery (scalarSubqueryExpression As ScalarSubqueryExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitScalarSubquery : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitScalarSubquery : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitScalarSubquery (scalarSubqueryExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalarSubqueryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="scalarSubqueryExpression">A scalar subquery expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlBinary">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlBinary (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression sqlBinaryExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlBinary(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression sqlBinaryExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitSqlBinary(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSqlBinary (sqlBinaryExpression As SqlBinaryExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlBinary : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitSqlBinary : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitSqlBinary (sqlBinaryExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlBinaryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlBinaryExpression">A sql binary expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlConstant">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlConstant (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression sqlConstantExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlConstant(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression sqlConstantExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitSqlConstant(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSqlConstant (sqlConstantExpression As SqlConstantExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlConstant : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitSqlConstant : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitSqlConstant (sqlConstantExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlConstantExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlConstantExpression">A sql constant expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFragment">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlFragment (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression sqlFragmentExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlFragment(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression sqlFragmentExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitSqlFragment(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSqlFragment (sqlFragmentExpression As SqlFragmentExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlFragment : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitSqlFragment : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitSqlFragment (sqlFragmentExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFragmentExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlFragmentExpression">A sql fragment expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFunction">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlFunction (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression sqlFunctionExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlFunction(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression sqlFunctionExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSqlFunction (sqlFunctionExpression As SqlFunctionExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlFunction : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitSqlFunction : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitSqlFunction (sqlFunctionExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFunctionExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlFunctionExpression">A sql function expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlParameter">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlParameter (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression sqlParameterExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlParameter(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression sqlParameterExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitSqlParameter(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSqlParameter (sqlParameterExpression As SqlParameterExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlParameter : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitSqlParameter : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitSqlParameter (sqlParameterExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlParameterExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlParameterExpression">A sql parameter expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlUnary">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlUnary (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression sqlUnaryExpression, bool allowOptimizedExpansion, out bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression VisitSqlUnary(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression sqlUnaryExpression, bool allowOptimizedExpansion, [out] bool&amp; nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlNullabilityProcessor.VisitSqlUnary(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSqlUnary (sqlUnaryExpression As SqlUnaryExpression, allowOptimizedExpansion As Boolean, ByRef nullable As Boolean) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlUnary : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&#xA;override this.VisitSqlUnary : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="sqlNullabilityProcessor.VisitSqlUnary (sqlUnaryExpression, allowOptimizedExpansion, nullable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlUnaryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression" />
        <Parameter Name="allowOptimizedExpansion" Type="System.Boolean" />
        <Parameter Name="nullable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sqlUnaryExpression">A sql unary expression to visit.</param>
        <param name="allowOptimizedExpansion">A bool value indicating if optimized expansion which considers null value as false value is allowed.</param>
        <param name="nullable">A bool value indicating whether the sql expression is nullable.</param>
        <summary>
                Visits a <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression" /> and computes its nullability.
            </summary>
        <returns>An optimized sql expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
