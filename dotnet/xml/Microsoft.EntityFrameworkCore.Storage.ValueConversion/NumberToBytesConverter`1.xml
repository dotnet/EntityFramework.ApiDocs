<Type Name="NumberToBytesConverter&lt;TNumber&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;TNumber&gt;">
  <TypeSignature Language="C#" Value="public class NumberToBytesConverter&lt;TNumber&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TNumber,byte[]&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumberToBytesConverter`1&lt;TNumber&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TNumber, unsigned int8[]&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class NumberToBytesConverter(Of TNumber)&#xA;Inherits ValueConverter(Of TNumber, Byte())" />
  <TypeSignature Language="F#" Value="type NumberToBytesConverter&lt;'Number&gt; = class&#xA;    inherit ValueConverter&lt;'Number, byte[]&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TNumber" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TNumber,System.Byte[]&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">TNumber</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProvider">System.Byte[]</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TNumber">To be added.</typeparam>
    <summary>
                Converts numeric values to and from arrays of bytes.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberToBytesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                Creates a new instance of this converter.
            </summary>
        <remarks>
          <para>
                    This converter supports <see cref="T:System.Double" />, <see cref="T:System.Single" />, <see cref="T:System.Decimal" />,
                    <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Int16" />, <see cref="T:System.Byte" />,
                    <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" />, <see cref="T:System.UInt16" />, <see cref="T:System.SByte" />,
                    and <see cref="T:System.Char" />.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberToBytesConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = default);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional mappingHints As ConverterMappingHints = Nothing)" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt; mappingHints" />
      <MemberSignature Language="C#" Value="public NumberToBytesConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints? mappingHints);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mappingHints As ConverterMappingHints)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="mappingHints">
                Hints that can be used by the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" /> to create data types with appropriate
                facets for the converted data.
            </param>
        <summary>
                Creates a new instance of this converter.
            </summary>
        <remarks>
          <para>
                    This converter supports <see cref="T:System.Double" />, <see cref="T:System.Single" />, <see cref="T:System.Decimal" />,
                    <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Int16" />, <see cref="T:System.Byte" />,
                    <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" />, <see cref="T:System.UInt16" />, <see cref="T:System.SByte" />,
                    and <see cref="T:System.Char" />.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesToDecimal">
      <MemberSignature Language="C#" Value="public static decimal BytesToDecimal (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal BytesToDecimal(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.BytesToDecimal(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BytesToDecimal (bytes As Byte()) As Decimal" />
      <MemberSignature Language="F#" Value="static member BytesToDecimal : byte[] -&gt; decimal" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.BytesToDecimal bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalToBytes">
      <MemberSignature Language="C#" Value="public static byte[] DecimalToBytes (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecimalToBytes(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.DecimalToBytes(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecimalToBytes (value As Decimal) As Byte()" />
      <MemberSignature Language="F#" Value="static member DecimalToBytes : decimal -&gt; byte[]" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.DecimalToBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.DefaultInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInfo As ValueConverterInfo" />
      <MemberSignature Language="F#" Value="static member DefaultInfo : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.DefaultInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" /> for the default use of this converter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseInt">
      <MemberSignature Language="C#" Value="public static byte[] ReverseInt (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReverseInt(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.ReverseInt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseInt (bytes As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="static member ReverseInt : byte[] -&gt; byte[]" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.ReverseInt bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseLong">
      <MemberSignature Language="C#" Value="public static byte[] ReverseLong (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReverseLong(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.ReverseLong(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseLong (bytes As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="static member ReverseLong : byte[] -&gt; byte[]" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.ReverseLong bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseShort">
      <MemberSignature Language="C#" Value="public static byte[] ReverseShort (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReverseShort(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.ReverseShort(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReverseShort (bytes As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="static member ReverseShort : byte[] -&gt; byte[]" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.ReverseShort bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBytes">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;Func&lt;TNumber,byte[]&gt;&gt; ToBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TNumber, unsigned int8[]&gt;&gt; ToBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.ToBytes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBytes () As Expression(Of Func(Of TNumber, Byte()))" />
      <MemberSignature Language="F#" Value="static member ToBytes : unit -&gt; System.Linq.Expressions.Expression&lt;Func&lt;'Number, byte[]&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.ToBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TNumber,System.Byte[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToNumber">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;Func&lt;byte[],TNumber&gt;&gt; ToNumber ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;unsigned int8[], !TNumber&gt;&gt; ToNumber() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter`1.ToNumber" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToNumber () As Expression(Of Func(Of Byte(), TNumber))" />
      <MemberSignature Language="F#" Value="static member ToNumber : unit -&gt; System.Linq.Expressions.Expression&lt;Func&lt;byte[], 'Number&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.NumberToBytesConverter&lt;'Number&gt;.ToNumber " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.Byte[],TNumber&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
