<Type Name="DateTimeOffsetToBinaryConverter" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter">
  <TypeSignature Language="C#" Value="public class DateTimeOffsetToBinaryConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;DateTimeOffset,long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimeOffsetToBinaryConverter extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;valuetype System.DateTimeOffset, int64&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimeOffsetToBinaryConverter&#xA;Inherits ValueConverter(Of DateTimeOffset, Long)" />
  <TypeSignature Language="F#" Value="type DateTimeOffsetToBinaryConverter = class&#xA;    inherit ValueConverter&lt;DateTimeOffset, int64&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;System.DateTimeOffset,System.Int64&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">System.DateTimeOffset</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProvider">System.Int64</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Converts <see cref="T:System.DateTime" /> to and from binary representation in a long.
                The DateTime is truncated beyond 0.1 millisecond precision.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffsetToBinaryConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                Creates a new instance of this converter.
            </summary>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffsetToBinaryConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = default);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional mappingHints As ConverterMappingHints = Nothing)" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter mappingHints" />
      <MemberSignature Language="C#" Value="public DateTimeOffsetToBinaryConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints? mappingHints);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mappingHints As ConverterMappingHints)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="mappingHints">
                Hints that can be used by the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" /> to create data types with appropriate
                facets for the converted data.
            </param>
        <summary>
                Creates a new instance of this converter.
            </summary>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.DefaultInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInfo As ValueConverterInfo" />
      <MemberSignature Language="F#" Value="static member DefaultInfo : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.DefaultInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" /> for the default use of this converter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (long v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(int64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.ToDateTimeOffset(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (v As Long) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ToDateTimeOffset : int64 -&gt; DateTimeOffset" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.ToDateTimeOffset v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int64" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLong">
      <MemberSignature Language="C#" Value="public static long ToLong (DateTimeOffset v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToLong(valuetype System.DateTimeOffset v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.ToLong(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLong (v As DateTimeOffset) As Long" />
      <MemberSignature Language="F#" Value="static member ToLong : DateTimeOffset -&gt; int64" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.DateTimeOffsetToBinaryConverter.ToLong v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
