<Type Name="BoolToTwoValuesConverter&lt;TProvider&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.BoolToTwoValuesConverter&lt;TProvider&gt;">
  <TypeSignature Language="C#" Value="public class BoolToTwoValuesConverter&lt;TProvider&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;bool,TProvider&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoolToTwoValuesConverter`1&lt;TProvider&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;bool, !TProvider&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.BoolToTwoValuesConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class BoolToTwoValuesConverter(Of TProvider)&#xA;Inherits ValueConverter(Of Boolean, TProvider)" />
  <TypeSignature Language="F#" Value="type BoolToTwoValuesConverter&lt;'Provider&gt; = class&#xA;    inherit ValueConverter&lt;bool, 'Provider&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TProvider" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;System.Boolean,TProvider&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">System.Boolean</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProvider">TProvider</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TProvider">To be added.</typeparam>
    <summary>
                Converts <see cref="T:System.Boolean" /> values to and from two different values.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoolToTwoValuesConverter (TProvider falseValue, TProvider trueValue, System.Linq.Expressions.Expression&lt;Func&lt;TProvider,bool&gt;&gt; fromProvider = default, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = default);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TProvider falseValue, !TProvider trueValue, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TProvider, bool&gt;&gt; fromProvider, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.BoolToTwoValuesConverter`1.#ctor(`0,`0,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (falseValue As TProvider, trueValue As TProvider, Optional fromProvider As Expression(Of Func(Of TProvider, Boolean)) = Nothing, Optional mappingHints As ConverterMappingHints = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.BoolToTwoValuesConverter&lt;'Provider&gt; : 'Provider * 'Provider * System.Linq.Expressions.Expression&lt;Func&lt;'Provider, bool&gt;&gt; * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.BoolToTwoValuesConverter&lt;'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.BoolToTwoValuesConverter&lt;'Provider&gt; (falseValue, trueValue, fromProvider, mappingHints)" />
      <MemberSignature Language="C#" Value="public BoolToTwoValuesConverter (TProvider falseValue, TProvider trueValue, System.Linq.Expressions.Expression&lt;Func&lt;TProvider,bool&gt;&gt;? fromProvider = default, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints? mappingHints = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="falseValue" Type="TProvider" />
        <Parameter Name="trueValue" Type="TProvider" />
        <Parameter Name="fromProvider" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TProvider,System.Boolean&gt;&gt;" />
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="falseValue">The value to convert to for <see langword="false" />.</param>
        <param name="trueValue">The value to convert to for <see langword="true" />.</param>
        <param name="fromProvider">Optional custom translator from store.</param>
        <param name="mappingHints">
                Hints that can be used by the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" /> to create data types with appropriate
                facets for the converted data.
            </param>
        <summary>
                Creates a new instance of this converter that will convert a <see langword="false" /> false
                to one value and a <see langword="true" /> to another.
            </summary>
        <remarks>
          <para>
                    Use <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.BoolToZeroOneConverter`1" /> for converting a <see cref="T:System.Boolean" /> to zero/one.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
