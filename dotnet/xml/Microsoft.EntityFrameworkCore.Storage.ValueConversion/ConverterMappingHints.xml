<Type Name="ConverterMappingHints" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints">
  <TypeSignature Language="C#" Value="public class ConverterMappingHints" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConverterMappingHints extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
  <TypeSignature Language="VB.NET" Value="Public Class ConverterMappingHints" />
  <TypeSignature Language="F#" Value="type ConverterMappingHints = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Specifies hints used by the type mapper when mapping using a <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConverterMappingHints (int? size = default, int? precision = default, int? scale = default, bool? unicode = default, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory = default);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale, valuetype System.Nullable`1&lt;bool&gt; unicode, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional size As Nullable(Of Integer) = Nothing, Optional precision As Nullable(Of Integer) = Nothing, Optional scale As Nullable(Of Integer) = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional valueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints (size, precision, scale, unicode, valueGeneratorFactory)" />
      <MemberSignature Language="C#" Value="public ConverterMappingHints (int? size = default, int? precision = default, int? scale = default, bool? unicode = default, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? valueGeneratorFactory = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="valueGeneratorFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="size">The suggested size of the mapped data type.</param>
        <param name="precision">The suggested precision of the mapped data type.</param>
        <param name="scale">The suggested scale of the mapped data type.</param>
        <param name="unicode">Whether or not the mapped data type should support Unicode.</param>
        <param name="valueGeneratorFactory">An optional factory for creating a specific <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" />.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" /> instance. Any hint contained in the instance
                can be <see langword="null" /> to indicate it has not been specified.
            </summary>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public virtual bool? IsUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsUnicode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.IsUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsUnicode As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsUnicode : Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.IsUnicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Whether or not the mapped data type should support Unicode.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideWith">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints OverrideWith (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints? hints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints OverrideWith(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints hints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.OverrideWith(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OverrideWith (hints As ConverterMappingHints) As ConverterMappingHints" />
      <MemberSignature Language="F#" Value="abstract member OverrideWith : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints&#xA;override this.OverrideWith : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" Usage="converterMappingHints.OverrideWith hints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="hints">The hints to add.</param>
        <summary>
                Adds hints from the given object to this one. Hints that are already specified are overridden.
            </summary>
        <returns>The combined hints.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public virtual int? Precision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Precision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Precision As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Precision : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The suggested precision of the mapped data type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public virtual int? Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Scale" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scale As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Scale : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The suggested scale of the mapped data type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual int? Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Size" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Size As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Size : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The suggested size of the mapped data type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGeneratorFactory">
      <MemberSignature Language="C#" Value="public virtual Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; ValueGeneratorFactory { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; ValueGeneratorFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.ValueGeneratorFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator)" />
      <MemberSignature Language="F#" Value="member this.ValueGeneratorFactory : Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.ValueGeneratorFactory" />
      <MemberSignature Language="C#" Value="public virtual Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;? ValueGeneratorFactory { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An optional factory for creating a specific <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> to use for model
                values when this converter is being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints With (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints hints);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints With(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints hints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints.With(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function With (hints As ConverterMappingHints) As ConverterMappingHints" />
      <MemberSignature Language="F#" Value="abstract member With : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints&#xA;override this.With : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" Usage="converterMappingHints.With hints" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints With (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints? hints);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="hints">The hints to add.</param>
        <summary>
                Adds hints from the given object to this one. Hints that are already specified are not overridden.
            </summary>
        <returns>The combined hints.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
