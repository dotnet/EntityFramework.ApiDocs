<Type Name="CollectionToJsonStringConverter&lt;TElement&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter&lt;TElement&gt;">
  <TypeSignature Language="C#" Value="public class CollectionToJsonStringConverter&lt;TElement&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;System.Collections.Generic.IEnumerable&lt;TElement&gt;,string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionToJsonStringConverter`1&lt;TElement&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, string&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionToJsonStringConverter(Of TElement)&#xA;Inherits ValueConverter(Of IEnumerable(Of TElement), String)" />
  <TypeSignature Language="F#" Value="type CollectionToJsonStringConverter&lt;'Element&gt; = class&#xA;    inherit ValueConverter&lt;seq&lt;'Element&gt;, string&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;System.Collections.Generic.IEnumerable&lt;TElement&gt;,System.String&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">System.Collections.Generic.IEnumerable&lt;TElement&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProvider">System.String</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TElement">To be added.</typeparam>
    <summary>
                A value converter that converts a .NET primitive collection into a JSON string.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionToJsonStringConverter (Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter collectionJsonReaderWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter collectionJsonReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter`1.#ctor(Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collectionJsonReaderWriter As JsonValueReaderWriter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter&lt;'Element&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter&lt;'Element&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter&lt;'Element&gt; collectionJsonReaderWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collectionJsonReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
      </Parameters>
      <Docs>
        <param name="collectionJsonReaderWriter">The reader/writer to use.</param>
        <summary>
                Creates a new instance of this converter.
            </summary>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-converters">EF Core value converters</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonReaderWriter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter JsonReaderWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter JsonReaderWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter`1.JsonReaderWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JsonReaderWriter As JsonValueReaderWriter" />
      <MemberSignature Language="F#" Value="member this.JsonReaderWriter : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.CollectionToJsonStringConverter&lt;'Element&gt;.JsonReaderWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The reader/writer to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
