<Type Name="ResultTransformingExpressionVisitor&lt;TResult&gt;" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;TResult&gt;">
  <TypeSignature Language="C#" Value="public class ResultTransformingExpressionVisitor&lt;TResult&gt; : Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResultTransformingExpressionVisitor`1&lt;TResult&gt; extends Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ResultTransformingExpressionVisitor(Of TResult)&#xA;Inherits ExpressionVisitorBase" />
  <TypeSignature Language="F#" Value="type ResultTransformingExpressionVisitor&lt;'Result&gt; = class&#xA;    inherit ExpressionVisitorBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResultTransformingExpressionVisitor (Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext relationalQueryCompilationContext, bool throwOnNullResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext relationalQueryCompilationContext, bool throwOnNullResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationalQueryCompilationContext As RelationalQueryCompilationContext, throwOnNullResult As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt; : Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext * bool -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt; (relationalQueryCompilationContext, throwOnNullResult)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationalQueryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="throwOnNullResult" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationalQueryCompilationContext">To be added.</param>
        <param name="throwOnNullResult">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResultTransformingExpressionVisitor (Remotion.Linq.Clauses.IQuerySource outerQuerySource, Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext relationalQueryCompilationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Remotion.Linq.Clauses.IQuerySource outerQuerySource, class Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext relationalQueryCompilationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerQuerySource As IQuerySource, relationalQueryCompilationContext As RelationalQueryCompilationContext)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt; : Remotion.Linq.Clauses.IQuerySource * Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt; (outerQuerySource, relationalQueryCompilationContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerQuerySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="relationalQueryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="outerQuerySource">To be added.</param>
        <param name="relationalQueryCompilationContext">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResultTransformingExpressionVisitor (Remotion.Linq.Clauses.IQuerySource outerQuerySource, Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext relationalQueryCompilationContext, bool throwOnNullResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Remotion.Linq.Clauses.IQuerySource outerQuerySource, class Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext relationalQueryCompilationContext, bool throwOnNullResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerQuerySource As IQuerySource, relationalQueryCompilationContext As RelationalQueryCompilationContext, throwOnNullResult As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt; : Remotion.Linq.Clauses.IQuerySource * Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext * bool -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor&lt;'Result&gt; (outerQuerySource, relationalQueryCompilationContext, throwOnNullResult)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerQuerySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="relationalQueryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="throwOnNullResult" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="outerQuerySource">To be added.</param>
        <param name="relationalQueryCompilationContext">To be added.</param>
        <param name="throwOnNullResult">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodCall">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMethodCall(class System.Linq.Expressions.MethodCallExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMethodCall (node As MethodCallExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; System.Linq.Expressions.Expression" Usage="resultTransformingExpressionVisitor.VisitMethodCall node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MethodCallExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
