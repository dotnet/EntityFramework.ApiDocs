<Type Name="HistoryRepository" FullName="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository">
  <TypeSignature Language="C#" Value="public abstract class HistoryRepository : Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HistoryRepository extends System.Object implements class Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HistoryRepository&#xA;Implements IHistoryRepository" />
  <TypeSignature Language="F#" Value="type HistoryRepository = class&#xA;    interface IHistoryRepository" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A base class for the repository used to access the '__EFMigrationsHistory' table that tracks metadata
                about EF Core Migrations such as which migrations have been applied.
            </summary>
    <remarks>
      <para>
                    Database providers must inherit from this class to implement provider-specific functionality.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HistoryRepository (Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (dependencies As HistoryRepositoryDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.HistoryRepository : Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies -&gt; Microsoft.EntityFrameworkCore.Migrations.HistoryRepository" Usage="new Microsoft.EntityFrameworkCore.Migrations.HistoryRepository dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this service.</param>
        <summary>
                Initializes a new instance of this class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HistoryRepository (Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options, Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer modelDiffer, Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator migrationsSqlGenerator, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider annotations, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options, class Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer modelDiffer, class Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator migrationsSqlGenerator, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider annotations, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (databaseCreator As IDatabaseCreator, rawSqlCommandBuilder As IRawSqlCommandBuilder, connection As IRelationalConnection, options As IDbContextOptions, modelDiffer As IMigrationsModelDiffer, migrationsSqlGenerator As IMigrationsSqlGenerator, annotations As IRelationalAnnotationProvider, sqlGenerationHelper As ISqlGenerationHelper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.HistoryRepository : Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions * Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer * Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper -&gt; Microsoft.EntityFrameworkCore.Migrations.HistoryRepository" Usage="new Microsoft.EntityFrameworkCore.Migrations.HistoryRepository (databaseCreator, rawSqlCommandBuilder, connection, options, modelDiffer, migrationsSqlGenerator, annotations, sqlGenerationHelper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="databaseCreator" Type="Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="modelDiffer" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="migrationsSqlGenerator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="annotations" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="6" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="7" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="databaseCreator">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="options">To be added.</param>
        <param name="modelDiffer">To be added.</param>
        <param name="migrationsSqlGenerator">To be added.</param>
        <param name="annotations">To be added.</param>
        <param name="sqlGenerationHelper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureTable">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureTable (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt; history);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureTable(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt; history) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ConfigureTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.EntityFrameworkCore.Migrations.HistoryRow})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureTable (history As EntityTypeBuilder(Of HistoryRow))" />
      <MemberSignature Language="F#" Value="abstract member ConfigureTable : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt; -&gt; unit&#xA;override this.ConfigureTable : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt; -&gt; unit" Usage="historyRepository.ConfigureTable history" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="history" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;" />
      </Parameters>
      <Docs>
        <param name="history">A builder for the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRow" /> entity type.</param>
        <summary>
                Configures the entity type mapped to the history table.
            </summary>
        <remarks>
                Database providers can override this to add or replace configuration.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableName">
      <MemberSignature Language="C#" Value="public const string DefaultTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTableName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.DefaultTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTableName As String " />
      <MemberSignature Language="F#" Value="val mutable DefaultTableName : string" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.DefaultTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The default name for the Migrations history table.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As HistoryRepositoryDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual bool Exists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Exists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Exists : unit -&gt; bool&#xA;override this.Exists : unit -&gt; bool" Usage="historyRepository.Exists " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.Exists</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Checks whether or not the history table exists.
            </summary>
        <returns>
          <see langword="true" /> if the table already exists, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="historyRepository.ExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.ExistsAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Checks whether or not the history table exists.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains
                <see langword="true" /> if the table already exists, <see langword="false" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsSql">
      <MemberSignature Language="C#" Value="protected abstract string ExistsSql { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExistsSql" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ExistsSql As String" />
      <MemberSignature Language="F#" Value="member this.ExistsSql : string" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Overridden by database providers to generate SQL that tests for existence of the history table.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedMigrations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt; GetAppliedMigrations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt; GetAppliedMigrations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppliedMigrations () As IReadOnlyList(Of HistoryRow)" />
      <MemberSignature Language="F#" Value="abstract member GetAppliedMigrations : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;&#xA;override this.GetAppliedMigrations : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;" Usage="historyRepository.GetAppliedMigrations " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetAppliedMigrations</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Queries the history table for all migrations that have been applied.
            </summary>
        <returns>The list of applied migrations, as <see cref="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRow" /> entities.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedMigrationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;&gt; GetAppliedMigrationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;&gt; GetAppliedMigrationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppliedMigrationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IReadOnlyList(Of HistoryRow))" />
      <MemberSignature Language="F#" Value="abstract member GetAppliedMigrationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;&gt;&#xA;override this.GetAppliedMigrationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;&gt;" Usage="historyRepository.GetAppliedMigrationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetAppliedMigrationsAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Migrations.HistoryRow&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Queries the history table for all migrations that have been applied.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains
                the list of applied migrations, as <see cref="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRow" /> entities.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedMigrationsSql">
      <MemberSignature Language="C#" Value="protected virtual string GetAppliedMigrationsSql { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GetAppliedMigrationsSql" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsSql" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property GetAppliedMigrationsSql As String" />
      <MemberSignature Language="F#" Value="member this.GetAppliedMigrationsSql : string" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrationsSql" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Generates SQL to query for the migrations that have been applied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBeginIfExistsScript">
      <MemberSignature Language="C#" Value="public abstract string GetBeginIfExistsScript (string migrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetBeginIfExistsScript(string migrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfExistsScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBeginIfExistsScript (migrationId As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GetBeginIfExistsScript : string -&gt; string" Usage="historyRepository.GetBeginIfExistsScript migrationId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetBeginIfExistsScript(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="migrationId">The migration identifier.</param>
        <summary>
                Overridden by database providers to generate a SQL Script that will <c>BEGIN</c> a block
                of SQL if and only if the migration with the given identifier already exists in the history table.
            </summary>
        <returns>The generated SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBeginIfNotExistsScript">
      <MemberSignature Language="C#" Value="public abstract string GetBeginIfNotExistsScript (string migrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetBeginIfNotExistsScript(string migrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetBeginIfNotExistsScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBeginIfNotExistsScript (migrationId As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GetBeginIfNotExistsScript : string -&gt; string" Usage="historyRepository.GetBeginIfNotExistsScript migrationId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetBeginIfNotExistsScript(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="migrationId">The migration identifier.</param>
        <summary>
                Overridden by database providers to generate a SQL Script that will <c>BEGIN</c> a block
                of SQL if and only if the migration with the given identifier does not already exist in the history table.
            </summary>
        <returns>The generated SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateIfNotExistsScript">
      <MemberSignature Language="C#" Value="public abstract string GetCreateIfNotExistsScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCreateIfNotExistsScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateIfNotExistsScript" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCreateIfNotExistsScript () As String" />
      <MemberSignature Language="F#" Value="abstract member GetCreateIfNotExistsScript : unit -&gt; string" Usage="historyRepository.GetCreateIfNotExistsScript " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetCreateIfNotExistsScript</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Overridden by a database provider to generate a SQL script that will create the history table
                if and only if it does not already exist.
            </summary>
        <returns>The SQL script.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateScript">
      <MemberSignature Language="C#" Value="public virtual string GetCreateScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCreateScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetCreateScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateScript () As String" />
      <MemberSignature Language="F#" Value="abstract member GetCreateScript : unit -&gt; string&#xA;override this.GetCreateScript : unit -&gt; string" Usage="historyRepository.GetCreateScript " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetCreateScript</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Generates a SQL script that will create the history table.
            </summary>
        <returns>The SQL script.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteScript">
      <MemberSignature Language="C#" Value="public virtual string GetDeleteScript (string migrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDeleteScript(string migrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetDeleteScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeleteScript (migrationId As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GetDeleteScript : string -&gt; string&#xA;override this.GetDeleteScript : string -&gt; string" Usage="historyRepository.GetDeleteScript migrationId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetDeleteScript(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="migrationId">The migration identifier of the row to delete.</param>
        <summary>
                Generates a SQL script to delete a row from the history table.
            </summary>
        <returns>The generated SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndIfScript">
      <MemberSignature Language="C#" Value="public abstract string GetEndIfScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEndIfScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetEndIfScript" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEndIfScript () As String" />
      <MemberSignature Language="F#" Value="abstract member GetEndIfScript : unit -&gt; string" Usage="historyRepository.GetEndIfScript " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetEndIfScript</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Overridden by database providers to generate a SQL script to <c>END</c> the SQL block.
            </summary>
        <returns>The generated SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertScript">
      <MemberSignature Language="C#" Value="public virtual string GetInsertScript (Microsoft.EntityFrameworkCore.Migrations.HistoryRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetInsertScript(class Microsoft.EntityFrameworkCore.Migrations.HistoryRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInsertScript (row As HistoryRow) As String" />
      <MemberSignature Language="F#" Value="abstract member GetInsertScript : Microsoft.EntityFrameworkCore.Migrations.HistoryRow -&gt; string&#xA;override this.GetInsertScript : Microsoft.EntityFrameworkCore.Migrations.HistoryRow -&gt; string" Usage="historyRepository.GetInsertScript row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="Microsoft.EntityFrameworkCore.Migrations.HistoryRow" />
      </Parameters>
      <Docs>
        <param name="row">The row to insert, represented as a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.HistoryRow" /> entity.</param>
        <summary>
                Generates a SQL script to insert a row into the history table.
            </summary>
        <returns>The generated SQL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretExistsResult">
      <MemberSignature Language="C#" Value="protected abstract bool InterpretExistsResult (object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool InterpretExistsResult(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function InterpretExistsResult (value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member InterpretExistsResult : obj -&gt; bool" Usage="historyRepository.InterpretExistsResult value" />
      <MemberSignature Language="C#" Value="protected abstract bool InterpretExistsResult (object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                Interprets the result of executing <see cref="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsSql" />.
            </summary>
        <returns>
          <see langword="true" /> if the table already exists, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationIdColumnName">
      <MemberSignature Language="C#" Value="protected virtual string MigrationIdColumnName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MigrationIdColumnName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.MigrationIdColumnName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MigrationIdColumnName As String" />
      <MemberSignature Language="F#" Value="member this.MigrationIdColumnName : string" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.MigrationIdColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the column that holds the Migration identifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductVersionColumnName">
      <MemberSignature Language="C#" Value="protected virtual string ProductVersionColumnName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersionColumnName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ProductVersionColumnName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ProductVersionColumnName As String" />
      <MemberSignature Language="F#" Value="member this.ProductVersionColumnName : string" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ProductVersionColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the column that contains the Entity Framework product version.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlGenerationHelper">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.SqlGenerationHelper" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SqlGenerationHelper As ISqlGenerationHelper" />
      <MemberSignature Language="F#" Value="member this.SqlGenerationHelper : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.SqlGenerationHelper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A helper class for generation of SQL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="protected virtual string TableName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TableName As String" />
      <MemberSignature Language="F#" Value="member this.TableName : string" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                THe history table name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableSchema">
      <MemberSignature Language="C#" Value="protected virtual string TableSchema { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableSchema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TableSchema As String" />
      <MemberSignature Language="F#" Value="member this.TableSchema : string" Usage="Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.TableSchema" />
      <MemberSignature Language="C#" Value="protected virtual string? TableSchema { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The schema that contains the history table, or <see langword="null" /> if the default schema should be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
