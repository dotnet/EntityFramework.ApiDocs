<Type Name="MigrationBuilder" FullName="Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder">
  <TypeSignature Language="C#" Value="public class MigrationBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MigrationBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class MigrationBuilder" />
  <TypeSignature Language="F#" Value="type MigrationBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A builder providing a fluent-like API for building <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" />s.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MigrationBuilder (string activeProvider);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string activeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (activeProvider As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder : string -&gt; Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" Usage="new Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder activeProvider" />
      <MemberSignature Language="C#" Value="public MigrationBuilder (string? activeProvider);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activeProvider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activeProvider">The name of the database provider being used.</param>
        <summary>
                Creates a new instance of the builder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProvider">
      <MemberSignature Language="C#" Value="public virtual string ActiveProvider { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActiveProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.ActiveProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActiveProvider As String" />
      <MemberSignature Language="F#" Value="member this.ActiveProvider : string" Usage="Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.ActiveProvider" />
      <MemberSignature Language="C#" Value="public virtual string? ActiveProvider { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the database provider being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCheckConstraint">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt; AddCheckConstraint (string name, string table, string sql, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt; AddCheckConstraint(string name, string table, string sql, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddCheckConstraint(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddCheckConstraint (name As String, table As String, sql As String, Optional schema As String = Nothing) As OperationBuilder(Of AddCheckConstraintOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddCheckConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt;&#xA;override this.AddCheckConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt;" Usage="migrationBuilder.AddCheckConstraint (name, table, sql, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt; AddCheckConstraint (string name, string table, string sql, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sql" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The check constraint name.</param>
        <param name="table">The name of the table for the check constraint.</param>
        <param name="sql">The constraint sql for the check constraint.</param>
        <param name="schema">The schema that contains the check constraint, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation" /> to add a new check constraint to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing) As OperationBuilder(Of AddColumnOperation)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="abstract member AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;&#xA;override this.AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;" Usage="migrationBuilder.AddColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt; (string name, string table, string type, bool? unicode, int? maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql);" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddColumn(Of T) (name As String, table As String, type As String, unicode As Nullable(Of Boolean), maxLength As Nullable(Of Integer), rowVersion As Boolean, schema As String, nullable As Boolean, defaultValue As Object, defaultValueSql As String, computedColumnSql As String) As OperationBuilder(Of AddColumnOperation)" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The CLR type that the column is mapped to. </typeparam>
        <param name="name"> The column name. </param>
        <param name="table"> The name of the table that contains the column. </param>
        <param name="type"> The store/database type of the column. </param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> if the default schema should be used. </param>
        <param name="nullable"> Indicates whether or not the column can store <c>NULL</c> values. </param>
        <param name="defaultValue"> The default value for the column. </param>
        <param name="defaultValueSql"> The SQL expression to use for the column's default constraint. </param>
        <param name="computedColumnSql"> The SQL expression to use to compute the column value. </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation" /> to add a new column to a table.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default, bool? fixedLength = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, valuetype System.Nullable`1&lt;bool&gt; fixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing, Optional fixedLength As Nullable(Of Boolean) = Nothing) As OperationBuilder(Of AddColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;&#xA;override this.AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;" Usage="migrationBuilder.AddColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql, fixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="11" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The CLR type that the column is mapped to. </typeparam>
        <param name="name"> The column name. </param>
        <param name="table"> The name of the table that contains the column. </param>
        <param name="type"> The store/database type of the column. </param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> if the default schema should be used. </param>
        <param name="nullable"> Indicates whether or not the column can store <c>NULL</c> values. </param>
        <param name="defaultValue"> The default value for the column. </param>
        <param name="defaultValueSql"> The SQL expression to use for the column's default constraint. </param>
        <param name="computedColumnSql"> The SQL expression to use to compute the column value. </param>
        <param name="fixedLength"> Indicates whether or not the column is constrained to fixed-length data. </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation" /> to add a new column to a table.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default, bool? fixedLength = default, string comment = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, valuetype System.Nullable`1&lt;bool&gt; fixedLength, string comment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing, Optional fixedLength As Nullable(Of Boolean) = Nothing, Optional comment As String = Nothing) As OperationBuilder(Of AddColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Nullable&lt;bool&gt; * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;&#xA;override this.AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Nullable&lt;bool&gt; * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;" Usage="migrationBuilder.AddColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql, fixedLength, comment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="11" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="comment" Type="System.String" Index="12" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The CLR type that the column is mapped to. </typeparam>
        <param name="name"> The column name. </param>
        <param name="table"> The name of the table that contains the column. </param>
        <param name="type"> The store/database type of the column. </param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> if the default schema should be used. </param>
        <param name="nullable"> Indicates whether or not the column can store <c>NULL</c> values. </param>
        <param name="defaultValue"> The default value for the column. </param>
        <param name="defaultValueSql"> The SQL expression to use for the column's default constraint. </param>
        <param name="computedColumnSql"> The SQL expression to use to compute the column value. </param>
        <param name="fixedLength"> Indicates whether or not the column is constrained to fixed-length data. </param>
        <param name="comment"> A comment to associate with the column. </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation" /> to add a new column to a table.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default, bool? fixedLength = default, string comment = default, string collation = default, int? precision = default, int? scale = default, bool? stored = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, valuetype System.Nullable`1&lt;bool&gt; fixedLength, string comment, string collation, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale, valuetype System.Nullable`1&lt;bool&gt; stored) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing, Optional fixedLength As Nullable(Of Boolean) = Nothing, Optional comment As String = Nothing, Optional collation As String = Nothing, Optional precision As Nullable(Of Integer) = Nothing, Optional scale As Nullable(Of Integer) = Nothing, Optional stored As Nullable(Of Boolean) = Nothing) As OperationBuilder(Of AddColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Nullable&lt;bool&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;&#xA;override this.AddColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Nullable&lt;bool&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;" Usage="migrationBuilder.AddColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql, fixedLength, comment, collation, precision, scale, stored)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt; AddColumn&lt;T&gt; (string name, string table, string? type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string? schema = default, bool nullable = false, object? defaultValue = default, string? defaultValueSql = default, string? computedColumnSql = default, bool? fixedLength = default, string? comment = default, string? collation = default, int? precision = default, int? scale = default, bool? stored = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="comment" Type="System.String" Index="12" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="collation" Type="System.String" Index="13" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="14" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="15" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="stored" Type="System.Nullable&lt;System.Boolean&gt;" Index="16" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The CLR type that the column is mapped to.</typeparam>
        <param name="name">The column name.</param>
        <param name="table">The name of the table that contains the column.</param>
        <param name="type">The store/database type of the column.</param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> if the default schema should be used.</param>
        <param name="nullable">Indicates whether or not the column can store <see langword="null" /> values.</param>
        <param name="defaultValue">The default value for the column.</param>
        <param name="defaultValueSql">The SQL expression to use for the column's default constraint.</param>
        <param name="computedColumnSql">The SQL expression to use to compute the column value.</param>
        <param name="fixedLength">Indicates whether or not the column is constrained to fixed-length data.</param>
        <param name="comment">A comment to associate with the column.</param>
        <param name="collation">A collation to apply to the column.</param>
        <param name="precision">
                The maximum number of digits that is allowed in this column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="scale">
                The maximum number of decimal places that is allowed in this column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="stored">Whether the value of the computed column is stored in the database or not.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation" /> to add a new column to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt; AddForeignKey (string name, string table, string column, string principalTable, string schema = default, string principalSchema = default, string principalColumn = default, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onUpdate = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onDelete = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt; AddForeignKey(string name, string table, string column, string principalTable, string schema, string principalSchema, string principalColumn, valuetype Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onUpdate, valuetype Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onDelete) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddForeignKey(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.ReferentialAction,Microsoft.EntityFrameworkCore.Migrations.ReferentialAction)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddForeignKey (name As String, table As String, column As String, principalTable As String, Optional schema As String = Nothing, Optional principalSchema As String = Nothing, Optional principalColumn As String = Nothing, Optional onUpdate As ReferentialAction = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction, Optional onDelete As ReferentialAction = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction) As OperationBuilder(Of AddForeignKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddForeignKey : string * string * string * string * string * string * string * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt;&#xA;override this.AddForeignKey : string * string * string * string * string * string * string * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt;" Usage="migrationBuilder.AddForeignKey (name, table, column, principalTable, schema, principalSchema, principalColumn, onUpdate, onDelete)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt; AddForeignKey (string name, string table, string column, string principalTable, string? schema = default, string? principalSchema = default, string? principalColumn = default, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onUpdate = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onDelete = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="column" Type="System.String" />
        <Parameter Name="principalTable" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="principalSchema" Type="System.String" />
        <Parameter Name="principalColumn" Type="System.String" />
        <Parameter Name="onUpdate" Type="Microsoft.EntityFrameworkCore.Migrations.ReferentialAction" />
        <Parameter Name="onDelete" Type="Microsoft.EntityFrameworkCore.Migrations.ReferentialAction" />
      </Parameters>
      <Docs>
        <param name="name">The foreign key constraint name.</param>
        <param name="table">The table that contains the foreign key.</param>
        <param name="column">The column that is constrained.</param>
        <param name="principalTable">The table to which the foreign key is constrained.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> if the default schema should be used.</param>
        <param name="principalSchema">
                The schema that contains principal table, or <see langword="null" /> if the default schema should be used.
            </param>
        <param name="principalColumn">
                The column to which the foreign key column is constrained, or <see langword="null" /> to constrain to the primary key
                column.
            </param>
        <param name="onUpdate">The action to take on updates.</param>
        <param name="onDelete">The action to take on deletes.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation" /> to add a new foreign key to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt; AddForeignKey (string name, string table, string[] columns, string principalTable, string schema = default, string principalSchema = default, string[] principalColumns = default, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onUpdate = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onDelete = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt; AddForeignKey(string name, string table, string[] columns, string principalTable, string schema, string principalSchema, string[] principalColumns, valuetype Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onUpdate, valuetype Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onDelete) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddForeignKey(System.String,System.String,System.String[],System.String,System.String,System.String,System.String[],Microsoft.EntityFrameworkCore.Migrations.ReferentialAction,Microsoft.EntityFrameworkCore.Migrations.ReferentialAction)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddForeignKey (name As String, table As String, columns As String(), principalTable As String, Optional schema As String = Nothing, Optional principalSchema As String = Nothing, Optional principalColumns As String() = Nothing, Optional onUpdate As ReferentialAction = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction, Optional onDelete As ReferentialAction = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction) As OperationBuilder(Of AddForeignKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddForeignKey : string * string * string[] * string * string * string * string[] * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt;&#xA;override this.AddForeignKey : string * string * string[] * string * string * string * string[] * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction * Microsoft.EntityFrameworkCore.Migrations.ReferentialAction -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt;" Usage="migrationBuilder.AddForeignKey (name, table, columns, principalTable, schema, principalSchema, principalColumns, onUpdate, onDelete)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt; AddForeignKey (string name, string table, string[] columns, string principalTable, string? schema = default, string? principalSchema = default, string[]? principalColumns = default, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onUpdate = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction, Microsoft.EntityFrameworkCore.Migrations.ReferentialAction onDelete = Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.NoAction);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="principalTable" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="principalSchema" Type="System.String" />
        <Parameter Name="principalColumns" Type="System.String[]" />
        <Parameter Name="onUpdate" Type="Microsoft.EntityFrameworkCore.Migrations.ReferentialAction" />
        <Parameter Name="onDelete" Type="Microsoft.EntityFrameworkCore.Migrations.ReferentialAction" />
      </Parameters>
      <Docs>
        <param name="name">The foreign key constraint name.</param>
        <param name="table">The table that contains the foreign key.</param>
        <param name="columns">The ordered list of columns that are constrained.</param>
        <param name="principalTable">The table to which the foreign key is constrained.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> if the default schema should be used.</param>
        <param name="principalSchema">
                The schema that contains principal table, or <see langword="null" /> if the default schema should be used.
            </param>
        <param name="principalColumns">
                The columns to which the foreign key columns are constrained, or <see langword="null" /> to constrain to the primary key
                columns.
            </param>
        <param name="onUpdate">The action to take on updates.</param>
        <param name="onDelete">The action to take on deletes.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation" /> to add a new composite (multi-column) foreign key to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrimaryKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt; AddPrimaryKey (string name, string table, string column, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt; AddPrimaryKey(string name, string table, string column, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddPrimaryKey(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPrimaryKey (name As String, table As String, column As String, Optional schema As String = Nothing) As OperationBuilder(Of AddPrimaryKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddPrimaryKey : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt;&#xA;override this.AddPrimaryKey : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt;" Usage="migrationBuilder.AddPrimaryKey (name, table, column, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt; AddPrimaryKey (string name, string table, string column, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="column" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The primary key constraint name.</param>
        <param name="table">The table that will contain the primary key.</param>
        <param name="column">The column that constitutes the primary key.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation" /> to add a new primary key to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrimaryKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt; AddPrimaryKey (string name, string table, string[] columns, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt; AddPrimaryKey(string name, string table, string[] columns, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddPrimaryKey(System.String,System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPrimaryKey (name As String, table As String, columns As String(), Optional schema As String = Nothing) As OperationBuilder(Of AddPrimaryKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddPrimaryKey : string * string * string[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt;&#xA;override this.AddPrimaryKey : string * string * string[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt;" Usage="migrationBuilder.AddPrimaryKey (name, table, columns, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt; AddPrimaryKey (string name, string table, string[] columns, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The primary key constraint name.</param>
        <param name="table">The table that will contain the primary key.</param>
        <param name="columns">The ordered list of columns that constitute the primary key.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddPrimaryKeyOperation" /> to add a new composite (multi-column) primary key to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUniqueConstraint">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt; AddUniqueConstraint (string name, string table, string column, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt; AddUniqueConstraint(string name, string table, string column, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddUniqueConstraint(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddUniqueConstraint (name As String, table As String, column As String, Optional schema As String = Nothing) As OperationBuilder(Of AddUniqueConstraintOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddUniqueConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt;&#xA;override this.AddUniqueConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt;" Usage="migrationBuilder.AddUniqueConstraint (name, table, column, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt; AddUniqueConstraint (string name, string table, string column, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="column" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The constraint name.</param>
        <param name="table">The table that will contain the constraint.</param>
        <param name="column">The column that is constrained.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation" /> to add a new unique constraint to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUniqueConstraint">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt; AddUniqueConstraint (string name, string table, string[] columns, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt; AddUniqueConstraint(string name, string table, string[] columns, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddUniqueConstraint(System.String,System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddUniqueConstraint (name As String, table As String, columns As String(), Optional schema As String = Nothing) As OperationBuilder(Of AddUniqueConstraintOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddUniqueConstraint : string * string * string[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt;&#xA;override this.AddUniqueConstraint : string * string * string[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt;" Usage="migrationBuilder.AddUniqueConstraint (name, table, columns, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt; AddUniqueConstraint (string name, string table, string[] columns, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The constraint name.</param>
        <param name="table">The table that will contain the constraint.</param>
        <param name="columns">The ordered list of columns that are constrained.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddUniqueConstraintOperation" /> to add a new composite (multi-column) unique constraint to a table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing) As OperationBuilder(Of AlterColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;&#xA;override this.AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;" Usage="migrationBuilder.AlterColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="name">To be added.</param>
        <param name="table">To be added.</param>
        <param name="type">To be added.</param>
        <param name="unicode">To be added.</param>
        <param name="maxLength">To be added.</param>
        <param name="rowVersion">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="nullable">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="defaultValueSql">To be added.</param>
        <param name="computedColumnSql">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default, Type oldClrType = default, string oldType = default, bool? oldUnicode = default, int? oldMaxLength = default, bool oldRowVersion = false, bool oldNullable = false, object oldDefaultValue = default, string oldDefaultValueSql = default, string oldComputedColumnSql = default);" FrameworkAlternate="efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, class System.Type oldClrType, string oldType, valuetype System.Nullable`1&lt;bool&gt; oldUnicode, valuetype System.Nullable`1&lt;int32&gt; oldMaxLength, bool oldRowVersion, bool oldNullable, object oldDefaultValue, string oldDefaultValueSql, string oldComputedColumnSql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Type,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing, Optional oldClrType As Type = Nothing, Optional oldType As String = Nothing, Optional oldUnicode As Nullable(Of Boolean) = Nothing, Optional oldMaxLength As Nullable(Of Integer) = Nothing, Optional oldRowVersion As Boolean = false, Optional oldNullable As Boolean = false, Optional oldDefaultValue As Object = Nothing, Optional oldDefaultValueSql As String = Nothing, Optional oldComputedColumnSql As String = Nothing) As AlterOperationBuilder(Of AlterColumnOperation)" FrameworkAlternate="efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="abstract member AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;&#xA;override this.AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;" Usage="migrationBuilder.AlterColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql, oldClrType, oldType, oldUnicode, oldMaxLength, oldRowVersion, oldNullable, oldDefaultValue, oldDefaultValueSql, oldComputedColumnSql)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt; (string name, string table, string type, bool? unicode, int? maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, Type oldClrType, string oldType, bool? oldUnicode, int? oldMaxLength, bool oldRowVersion, bool oldNullable, object oldDefaultValue, string oldDefaultValueSql, string oldComputedColumnSql);" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterColumn(Of T) (name As String, table As String, type As String, unicode As Nullable(Of Boolean), maxLength As Nullable(Of Integer), rowVersion As Boolean, schema As String, nullable As Boolean, defaultValue As Object, defaultValueSql As String, computedColumnSql As String, oldClrType As Type, oldType As String, oldUnicode As Nullable(Of Boolean), oldMaxLength As Nullable(Of Integer), oldRowVersion As Boolean, oldNullable As Boolean, oldDefaultValue As Object, oldDefaultValueSql As String, oldComputedColumnSql As String) As AlterOperationBuilder(Of AlterColumnOperation)" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldClrType" Type="System.Type" Index="11" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldType" Type="System.String" Index="12" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldUnicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="13" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldMaxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="14" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldRowVersion" Type="System.Boolean" Index="15" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldNullable" Type="System.Boolean" Index="16" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldDefaultValue" Type="System.Object" Index="17" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldDefaultValueSql" Type="System.String" Index="18" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldComputedColumnSql" Type="System.String" Index="19" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The CLR type that the column is mapped to. </typeparam>
        <param name="name"> The column name. </param>
        <param name="table"> The name of the table that contains the column. </param>
        <param name="type"> The store/database type of the column. </param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> if the default schema should be used. </param>
        <param name="nullable"> Indicates whether or not the column can store <c>NULL</c> values. </param>
        <param name="defaultValue"> The default value for the column. </param>
        <param name="defaultValueSql"> The SQL expression to use for the column's default constraint. </param>
        <param name="computedColumnSql"> The SQL expression to use to compute the column value. </param>
        <param name="oldClrType">
                The CLR type that the column was previously mapped to. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldType">
                The previous store/database type of the column. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldUnicode">
                Indicates whether or not the column could previously contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="oldMaxLength">
                The previous maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="oldRowVersion">
                Indicates whether or not the column previously acted as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldNullable">
                Indicates whether or not the column could previously store <c>NULL</c> values. Can be <c>null</c>, in which case previous value is
                considered unknown.
            </param>
        <param name="oldDefaultValue">
                The previous default value for the column. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldDefaultValueSql">
                The previous SQL expression used for the column's default constraint. Can be <c>null</c>, in which case previous value is considered
                unknown.
            </param>
        <param name="oldComputedColumnSql">
                The previous SQL expression used to compute the column value. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation" /> to alter an existing column.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default, Type oldClrType = default, string oldType = default, bool? oldUnicode = default, int? oldMaxLength = default, bool oldRowVersion = false, bool oldNullable = false, object oldDefaultValue = default, string oldDefaultValueSql = default, string oldComputedColumnSql = default, bool? fixedLength = default, bool? oldFixedLength = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, class System.Type oldClrType, string oldType, valuetype System.Nullable`1&lt;bool&gt; oldUnicode, valuetype System.Nullable`1&lt;int32&gt; oldMaxLength, bool oldRowVersion, bool oldNullable, object oldDefaultValue, string oldDefaultValueSql, string oldComputedColumnSql, valuetype System.Nullable`1&lt;bool&gt; fixedLength, valuetype System.Nullable`1&lt;bool&gt; oldFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Type,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing, Optional oldClrType As Type = Nothing, Optional oldType As String = Nothing, Optional oldUnicode As Nullable(Of Boolean) = Nothing, Optional oldMaxLength As Nullable(Of Integer) = Nothing, Optional oldRowVersion As Boolean = false, Optional oldNullable As Boolean = false, Optional oldDefaultValue As Object = Nothing, Optional oldDefaultValueSql As String = Nothing, Optional oldComputedColumnSql As String = Nothing, Optional fixedLength As Nullable(Of Boolean) = Nothing, Optional oldFixedLength As Nullable(Of Boolean) = Nothing) As AlterOperationBuilder(Of AlterColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;&#xA;override this.AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;" Usage="migrationBuilder.AlterColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql, oldClrType, oldType, oldUnicode, oldMaxLength, oldRowVersion, oldNullable, oldDefaultValue, oldDefaultValueSql, oldComputedColumnSql, fixedLength, oldFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldClrType" Type="System.Type" Index="11" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldType" Type="System.String" Index="12" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldUnicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="13" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldMaxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="14" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldRowVersion" Type="System.Boolean" Index="15" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldNullable" Type="System.Boolean" Index="16" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldDefaultValue" Type="System.Object" Index="17" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldDefaultValueSql" Type="System.String" Index="18" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldComputedColumnSql" Type="System.String" Index="19" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="20" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="oldFixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="21" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The CLR type that the column is mapped to. </typeparam>
        <param name="name"> The column name. </param>
        <param name="table"> The name of the table that contains the column. </param>
        <param name="type"> The store/database type of the column. </param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> if the default schema should be used. </param>
        <param name="nullable"> Indicates whether or not the column can store <c>NULL</c> values. </param>
        <param name="defaultValue"> The default value for the column. </param>
        <param name="defaultValueSql"> The SQL expression to use for the column's default constraint. </param>
        <param name="computedColumnSql"> The SQL expression to use to compute the column value. </param>
        <param name="oldClrType">
                The CLR type that the column was previously mapped to. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldType">
                The previous store/database type of the column. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldUnicode">
                Indicates whether or not the column could previously contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="oldMaxLength">
                The previous maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="oldRowVersion">
                Indicates whether or not the column previously acted as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldNullable">
                Indicates whether or not the column could previously store <c>NULL</c> values. Can be <c>null</c>, in which case previous value is
                considered unknown.
            </param>
        <param name="oldDefaultValue">
                The previous default value for the column. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldDefaultValueSql">
                The previous SQL expression used for the column's default constraint. Can be <c>null</c>, in which case previous value is considered
                unknown.
            </param>
        <param name="oldComputedColumnSql">
                The previous SQL expression used to compute the column value. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="fixedLength"> Indicates whether or not the column is constrained to fixed-length data. </param>
        <param name="oldFixedLength"> Indicates whether or not the column was previously constrained to fixed-length data. </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation" /> to alter an existing column.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default, Type oldClrType = default, string oldType = default, bool? oldUnicode = default, int? oldMaxLength = default, bool oldRowVersion = false, bool oldNullable = false, object oldDefaultValue = default, string oldDefaultValueSql = default, string oldComputedColumnSql = default, bool? fixedLength = default, bool? oldFixedLength = default, string comment = default, string oldComment = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, class System.Type oldClrType, string oldType, valuetype System.Nullable`1&lt;bool&gt; oldUnicode, valuetype System.Nullable`1&lt;int32&gt; oldMaxLength, bool oldRowVersion, bool oldNullable, object oldDefaultValue, string oldDefaultValueSql, string oldComputedColumnSql, valuetype System.Nullable`1&lt;bool&gt; fixedLength, valuetype System.Nullable`1&lt;bool&gt; oldFixedLength, string comment, string oldComment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Type,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing, Optional oldClrType As Type = Nothing, Optional oldType As String = Nothing, Optional oldUnicode As Nullable(Of Boolean) = Nothing, Optional oldMaxLength As Nullable(Of Integer) = Nothing, Optional oldRowVersion As Boolean = false, Optional oldNullable As Boolean = false, Optional oldDefaultValue As Object = Nothing, Optional oldDefaultValueSql As String = Nothing, Optional oldComputedColumnSql As String = Nothing, Optional fixedLength As Nullable(Of Boolean) = Nothing, Optional oldFixedLength As Nullable(Of Boolean) = Nothing, Optional comment As String = Nothing, Optional oldComment As String = Nothing) As AlterOperationBuilder(Of AlterColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;&#xA;override this.AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;" Usage="migrationBuilder.AlterColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql, oldClrType, oldType, oldUnicode, oldMaxLength, oldRowVersion, oldNullable, oldDefaultValue, oldDefaultValueSql, oldComputedColumnSql, fixedLength, oldFixedLength, comment, oldComment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldClrType" Type="System.Type" Index="11" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldType" Type="System.String" Index="12" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldUnicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="13" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldMaxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="14" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldRowVersion" Type="System.Boolean" Index="15" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldNullable" Type="System.Boolean" Index="16" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldDefaultValue" Type="System.Object" Index="17" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldDefaultValueSql" Type="System.String" Index="18" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldComputedColumnSql" Type="System.String" Index="19" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="20" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldFixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="21" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="comment" Type="System.String" Index="22" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldComment" Type="System.String" Index="23" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The CLR type that the column is mapped to. </typeparam>
        <param name="name"> The column name. </param>
        <param name="table"> The name of the table that contains the column. </param>
        <param name="type"> The store/database type of the column. </param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> if the default schema should be used. </param>
        <param name="nullable"> Indicates whether or not the column can store <c>NULL</c> values. </param>
        <param name="defaultValue"> The default value for the column. </param>
        <param name="defaultValueSql"> The SQL expression to use for the column's default constraint. </param>
        <param name="computedColumnSql"> The SQL expression to use to compute the column value. </param>
        <param name="oldClrType">
                The CLR type that the column was previously mapped to. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldType">
                The previous store/database type of the column. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldUnicode">
                Indicates whether or not the column could previously contain Unicode data, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="oldMaxLength">
                The previous maximum length of data that can be stored in the column, or <c>null</c> if not specified or not applicable.
            </param>
        <param name="oldRowVersion">
                Indicates whether or not the column previously acted as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldNullable">
                Indicates whether or not the column could previously store <c>NULL</c> values. Can be <c>null</c>, in which case previous value is
                considered unknown.
            </param>
        <param name="oldDefaultValue">
                The previous default value for the column. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="oldDefaultValueSql">
                The previous SQL expression used for the column's default constraint. Can be <c>null</c>, in which case previous value is considered
                unknown.
            </param>
        <param name="oldComputedColumnSql">
                The previous SQL expression used to compute the column value. Can be <c>null</c>, in which case previous value is considered unknown.
            </param>
        <param name="fixedLength"> Indicates whether or not the column is constrained to fixed-length data. </param>
        <param name="oldFixedLength"> Indicates whether or not the column was previously constrained to fixed-length data. </param>
        <param name="comment"> A comment to associate with the column. </param>
        <param name="oldComment"> The previous comment to associate with the column. </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation" /> to alter an existing column.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterColumn&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt; (string name, string table, string type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string schema = default, bool nullable = false, object defaultValue = default, string defaultValueSql = default, string computedColumnSql = default, Type oldClrType = default, string oldType = default, bool? oldUnicode = default, int? oldMaxLength = default, bool oldRowVersion = false, bool oldNullable = false, object oldDefaultValue = default, string oldDefaultValueSql = default, string oldComputedColumnSql = default, bool? fixedLength = default, bool? oldFixedLength = default, string comment = default, string oldComment = default, string collation = default, string oldCollation = default, int? precision = default, int? oldPrecision = default, int? scale = default, int? oldScale = default, bool? stored = default, bool? oldStored = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt;(string name, string table, string type, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; maxLength, bool rowVersion, string schema, bool nullable, object defaultValue, string defaultValueSql, string computedColumnSql, class System.Type oldClrType, string oldType, valuetype System.Nullable`1&lt;bool&gt; oldUnicode, valuetype System.Nullable`1&lt;int32&gt; oldMaxLength, bool oldRowVersion, bool oldNullable, object oldDefaultValue, string oldDefaultValueSql, string oldComputedColumnSql, valuetype System.Nullable`1&lt;bool&gt; fixedLength, valuetype System.Nullable`1&lt;bool&gt; oldFixedLength, string comment, string oldComment, string collation, string oldCollation, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; oldPrecision, valuetype System.Nullable`1&lt;int32&gt; scale, valuetype System.Nullable`1&lt;int32&gt; oldScale, valuetype System.Nullable`1&lt;bool&gt; stored, valuetype System.Nullable`1&lt;bool&gt; oldStored) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterColumn``1(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Type,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterColumn(Of T) (name As String, table As String, Optional type As String = Nothing, Optional unicode As Nullable(Of Boolean) = Nothing, Optional maxLength As Nullable(Of Integer) = Nothing, Optional rowVersion As Boolean = false, Optional schema As String = Nothing, Optional nullable As Boolean = false, Optional defaultValue As Object = Nothing, Optional defaultValueSql As String = Nothing, Optional computedColumnSql As String = Nothing, Optional oldClrType As Type = Nothing, Optional oldType As String = Nothing, Optional oldUnicode As Nullable(Of Boolean) = Nothing, Optional oldMaxLength As Nullable(Of Integer) = Nothing, Optional oldRowVersion As Boolean = false, Optional oldNullable As Boolean = false, Optional oldDefaultValue As Object = Nothing, Optional oldDefaultValueSql As String = Nothing, Optional oldComputedColumnSql As String = Nothing, Optional fixedLength As Nullable(Of Boolean) = Nothing, Optional oldFixedLength As Nullable(Of Boolean) = Nothing, Optional comment As String = Nothing, Optional oldComment As String = Nothing, Optional collation As String = Nothing, Optional oldCollation As String = Nothing, Optional precision As Nullable(Of Integer) = Nothing, Optional oldPrecision As Nullable(Of Integer) = Nothing, Optional scale As Nullable(Of Integer) = Nothing, Optional oldScale As Nullable(Of Integer) = Nothing, Optional stored As Nullable(Of Boolean) = Nothing, Optional oldStored As Nullable(Of Boolean) = Nothing) As AlterOperationBuilder(Of AlterColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;&#xA;override this.AlterColumn : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * string * bool * obj * string * string * Type * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * bool * bool * obj * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;" Usage="migrationBuilder.AlterColumn (name, table, type, unicode, maxLength, rowVersion, schema, nullable, defaultValue, defaultValueSql, computedColumnSql, oldClrType, oldType, oldUnicode, oldMaxLength, oldRowVersion, oldNullable, oldDefaultValue, oldDefaultValueSql, oldComputedColumnSql, fixedLength, oldFixedLength, comment, oldComment, collation, oldCollation, precision, oldPrecision, scale, oldScale, stored, oldStored)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt; AlterColumn&lt;T&gt; (string name, string table, string? type = default, bool? unicode = default, int? maxLength = default, bool rowVersion = false, string? schema = default, bool nullable = false, object? defaultValue = default, string? defaultValueSql = default, string? computedColumnSql = default, Type? oldClrType = default, string? oldType = default, bool? oldUnicode = default, int? oldMaxLength = default, bool oldRowVersion = false, bool oldNullable = false, object? oldDefaultValue = default, string? oldDefaultValueSql = default, string? oldComputedColumnSql = default, bool? fixedLength = default, bool? oldFixedLength = default, string? comment = default, string? oldComment = default, string? collation = default, string? oldCollation = default, int? precision = default, int? oldPrecision = default, int? scale = default, int? oldScale = default, bool? stored = default, bool? oldStored = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="type" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="rowVersion" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="defaultValue" Type="System.Object" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="defaultValueSql" Type="System.String" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="computedColumnSql" Type="System.String" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldClrType" Type="System.Type" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldType" Type="System.String" Index="12" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldUnicode" Type="System.Nullable&lt;System.Boolean&gt;" Index="13" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldMaxLength" Type="System.Nullable&lt;System.Int32&gt;" Index="14" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldRowVersion" Type="System.Boolean" Index="15" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldNullable" Type="System.Boolean" Index="16" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldDefaultValue" Type="System.Object" Index="17" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldDefaultValueSql" Type="System.String" Index="18" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldComputedColumnSql" Type="System.String" Index="19" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="20" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldFixedLength" Type="System.Nullable&lt;System.Boolean&gt;" Index="21" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="comment" Type="System.String" Index="22" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldComment" Type="System.String" Index="23" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="collation" Type="System.String" Index="24" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldCollation" Type="System.String" Index="25" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="26" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldPrecision" Type="System.Nullable&lt;System.Int32&gt;" Index="27" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="28" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldScale" Type="System.Nullable&lt;System.Int32&gt;" Index="29" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="stored" Type="System.Nullable&lt;System.Boolean&gt;" Index="30" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldStored" Type="System.Nullable&lt;System.Boolean&gt;" Index="31" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">The CLR type that the column is mapped to.</typeparam>
        <param name="name">The column name.</param>
        <param name="table">The name of the table that contains the column.</param>
        <param name="type">The store/database type of the column.</param>
        <param name="unicode">
                Indicates whether or not the column can contain Unicode data, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="maxLength">
                The maximum length of data that can be stored in the column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="rowVersion">
                Indicates whether or not the column acts as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> if the default schema should be used.</param>
        <param name="nullable">Indicates whether or not the column can store <see langword="null" /> values.</param>
        <param name="defaultValue">The default value for the column.</param>
        <param name="defaultValueSql">The SQL expression to use for the column's default constraint.</param>
        <param name="computedColumnSql">The SQL expression to use to compute the column value.</param>
        <param name="oldClrType">
                The CLR type that the column was previously mapped to. Can be <see langword="null" />, in which case previous value is considered
                unknown.
            </param>
        <param name="oldType">
                The previous store/database type of the column. Can be <see langword="null" />, in which case previous value is considered unknown.
            </param>
        <param name="oldUnicode">
                Indicates whether or not the column could previously contain Unicode data, or <see langword="null" /> if not specified or not
                applicable.
            </param>
        <param name="oldMaxLength">
                The previous maximum length of data that can be stored in the column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="oldRowVersion">
                Indicates whether or not the column previously acted as an automatic concurrency token, such as a rowversion/timestamp column
                in SQL Server. Can be <see langword="null" />, in which case previous value is considered unknown.
            </param>
        <param name="oldNullable">
                Indicates whether or not the column could previously store <see langword="null" /> values. Can be <see langword="null" />, in which
                case previous value is
                considered unknown.
            </param>
        <param name="oldDefaultValue">
                The previous default value for the column. Can be <see langword="null" />, in which case previous value is considered unknown.
            </param>
        <param name="oldDefaultValueSql">
                The previous SQL expression used for the column's default constraint. Can be <see langword="null" />, in which case previous value is
                considered
                unknown.
            </param>
        <param name="oldComputedColumnSql">
                The previous SQL expression used to compute the column value. Can be <see langword="null" />, in which case previous value is
                considered unknown.
            </param>
        <param name="fixedLength">Indicates whether or not the column is constrained to fixed-length data.</param>
        <param name="oldFixedLength">Indicates whether or not the column was previously constrained to fixed-length data.</param>
        <param name="comment">A comment to associate with the column.</param>
        <param name="oldComment">The previous comment to associate with the column.</param>
        <param name="collation">A collation to apply to the column.</param>
        <param name="oldCollation">The previous collation to apply to the column.</param>
        <param name="precision">
                The maximum number of digits that is allowed in this column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="oldPrecision">
                The previous maximum number of digits that is allowed in this column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="scale">
                The maximum number of decimal places that is allowed in this column, or <see langword="null" /> if not specified or not applicable.
            </param>
        <param name="oldScale">
                The previous maximum number of decimal places that is allowed in this column, or <see langword="null" /> if not specified or not
                applicable.
            </param>
        <param name="stored">Whether the value of the computed column is stored in the database or not.</param>
        <param name="oldStored">Whether the value of the previous computed column was stored in the database or not.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation" /> to alter an existing column.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterDatabase">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt; AlterDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt; AlterDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterDatabase () As AlterOperationBuilder(Of AlterDatabaseOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterDatabase : unit -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt;&#xA;override this.AlterDatabase : unit -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt;" Usage="migrationBuilder.AlterDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation" /> to alter an existing database.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterDatabase">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt; AlterDatabase (string collation = default, string oldCollation = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt; AlterDatabase(string collation, string oldCollation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterDatabase(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterDatabase (Optional collation As String = Nothing, Optional oldCollation As String = Nothing) As AlterOperationBuilder(Of AlterDatabaseOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterDatabase : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt;&#xA;override this.AlterDatabase : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt;" Usage="migrationBuilder.AlterDatabase (collation, oldCollation)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt; AlterDatabase (string? collation = default, string? oldCollation = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collation" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldCollation" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="collation">A collation to apply to the column.</param>
        <param name="oldCollation">The previous collation to apply to the column.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation" /> to alter an existing database.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterSequence">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt; AlterSequence (string name, string schema = default, int incrementBy = 1, long? minValue = default, long? maxValue = default, bool cyclic = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt; AlterSequence(string name, string schema, int32 incrementBy, valuetype System.Nullable`1&lt;int64&gt; minValue, valuetype System.Nullable`1&lt;int64&gt; maxValue, bool cyclic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterSequence(System.String,System.String,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterSequence (name As String, Optional schema As String = Nothing, Optional incrementBy As Integer = 1, Optional minValue As Nullable(Of Long) = Nothing, Optional maxValue As Nullable(Of Long) = Nothing, Optional cyclic As Boolean = false) As OperationBuilder(Of AlterSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterSequence : string * string * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt;&#xA;override this.AlterSequence : string * string * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt;" Usage="migrationBuilder.AlterSequence (name, schema, incrementBy, minValue, maxValue, cyclic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="incrementBy" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="minValue" Type="System.Nullable&lt;System.Int64&gt;" Index="3" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="maxValue" Type="System.Nullable&lt;System.Int64&gt;" Index="4" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="cyclic" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="incrementBy">To be added.</param>
        <param name="minValue">To be added.</param>
        <param name="maxValue">To be added.</param>
        <param name="cyclic">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterSequence">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt; AlterSequence (string name, string schema = default, int incrementBy = 1, long? minValue = default, long? maxValue = default, bool cyclic = false, int oldIncrementBy = 1, long? oldMinValue = default, long? oldMaxValue = default, bool oldCyclic = false);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt; AlterSequence(string name, string schema, int32 incrementBy, valuetype System.Nullable`1&lt;int64&gt; minValue, valuetype System.Nullable`1&lt;int64&gt; maxValue, bool cyclic, int32 oldIncrementBy, valuetype System.Nullable`1&lt;int64&gt; oldMinValue, valuetype System.Nullable`1&lt;int64&gt; oldMaxValue, bool oldCyclic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterSequence(System.String,System.String,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterSequence (name As String, Optional schema As String = Nothing, Optional incrementBy As Integer = 1, Optional minValue As Nullable(Of Long) = Nothing, Optional maxValue As Nullable(Of Long) = Nothing, Optional cyclic As Boolean = false, Optional oldIncrementBy As Integer = 1, Optional oldMinValue As Nullable(Of Long) = Nothing, Optional oldMaxValue As Nullable(Of Long) = Nothing, Optional oldCyclic As Boolean = false) As AlterOperationBuilder(Of AlterSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterSequence : string * string * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt;&#xA;override this.AlterSequence : string * string * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt;" Usage="migrationBuilder.AlterSequence (name, schema, incrementBy, minValue, maxValue, cyclic, oldIncrementBy, oldMinValue, oldMaxValue, oldCyclic)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt; AlterSequence (string name, string? schema = default, int incrementBy = 1, long? minValue = default, long? maxValue = default, bool cyclic = false, int oldIncrementBy = 1, long? oldMinValue = default, long? oldMaxValue = default, bool oldCyclic = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="incrementBy" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="minValue" Type="System.Nullable&lt;System.Int64&gt;" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="maxValue" Type="System.Nullable&lt;System.Int64&gt;" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cyclic" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldIncrementBy" Type="System.Int32" Index="6" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldMinValue" Type="System.Nullable&lt;System.Int64&gt;" Index="7" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldMaxValue" Type="System.Nullable&lt;System.Int64&gt;" Index="8" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldCyclic" Type="System.Boolean" Index="9" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <param name="incrementBy">The amount to increment by when generating the next value in the sequence, defaulting to 1.</param>
        <param name="minValue">The minimum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="maxValue">The maximum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="cyclic">Indicates whether or not the sequence will re-start when the maximum value is reached.</param>
        <param name="oldIncrementBy">The previous amount to increment by when generating the next value in the sequence, defaulting to 1.</param>
        <param name="oldMinValue">The previous minimum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="oldMaxValue">The previous maximum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="oldCyclic">Indicates whether or not the sequence would previously re-start when the maximum value is reached.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterSequenceOperation" /> to alter an existing sequence.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt; AlterTable (string name, string schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt; AlterTable(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterTable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterTable (name As String, Optional schema As String = Nothing) As AlterOperationBuilder(Of AlterTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterTable : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt;&#xA;override this.AlterTable : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt;" Usage="migrationBuilder.AlterTable (name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="name"> The table name. </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> to use the default schema. </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation" /> to alter an existing table.
            </summary>
        <returns> A builder to allow annotations to be added to the operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt; AlterTable (string name, string schema = default, string comment = default, string oldComment = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt; AlterTable(string name, string schema, string comment, string oldComment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AlterTable(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AlterTable (name As String, Optional schema As String = Nothing, Optional comment As String = Nothing, Optional oldComment As String = Nothing) As AlterOperationBuilder(Of AlterTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member AlterTable : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt;&#xA;override this.AlterTable : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt;" Usage="migrationBuilder.AlterTable (name, schema, comment, oldComment)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt; AlterTable (string name, string? schema = default, string? comment = default, string? oldComment = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.AlterOperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="comment" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldComment" Type="System.String" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The table name.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <param name="comment">A comment to associate with the table.</param>
        <param name="oldComment">The previous comment to associate with the table.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterTableOperation" /> to alter an existing table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCheckConstraint">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateCheckConstraintOperation&gt; CreateCheckConstraint (string name, string table, string sql, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateCheckConstraintOperation&gt; CreateCheckConstraint(string name, string table, string sql, string schema) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateCheckConstraint(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCheckConstraint (name As String, table As String, sql As String, Optional schema As String = Nothing) As OperationBuilder(Of CreateCheckConstraintOperation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member CreateCheckConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateCheckConstraintOperation&gt;&#xA;override this.CreateCheckConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateCheckConstraintOperation&gt;" Usage="migrationBuilder.CreateCheckConstraint (name, table, sql, schema)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt; CreateCheckConstraint (string name, string table, string sql, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt; CreateCheckConstraint(string name, string table, string sql, string schema) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCheckConstraint (name As String, table As String, sql As String, Optional schema As String = Nothing) As OperationBuilder(Of AddCheckConstraintOperation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member CreateCheckConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt;&#xA;override this.CreateCheckConstraint : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt;" Usage="migrationBuilder.CreateCheckConstraint (name, table, sql, schema)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt; CreateCheckConstraint (string name, string table, string sql, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateCheckConstraintOperation&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sql" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The check constraint name.</param>
        <param name="table">The name of the table for the check constraint.</param>
        <param name="sql">The constraint sql for the check constraint.</param>
        <param name="schema">The schema that contains the check constraint, or <see langword="null" /> to use the default schema.</param>
        <summary>
          <para>
                    Warning, this API is obsolete. Use <see cref="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.AddCheckConstraint(System.String,System.String,System.String,System.String)" /> instead.
                </para>
          <para>
                    Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddCheckConstraintOperation" /> to create a new check constraint.
                </para>
        </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string column, string schema = default, bool unique = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex(string name, string table, string column, string schema, bool unique) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (name As String, table As String, column As String, Optional schema As String = Nothing, Optional unique As Boolean = false) As OperationBuilder(Of CreateIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : string * string * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;&#xA;override this.CreateIndex : string * string * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;" Usage="migrationBuilder.CreateIndex (name, table, column, schema, unique)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="column" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="unique" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="table">To be added.</param>
        <param name="column">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="unique">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string[] columns, string schema = default, bool unique = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex(string name, string table, string[] columns, string schema, bool unique) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String[],System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (name As String, table As String, columns As String(), Optional schema As String = Nothing, Optional unique As Boolean = false) As OperationBuilder(Of CreateIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : string * string * string[] * string * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;&#xA;override this.CreateIndex : string * string * string[] * string * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;" Usage="migrationBuilder.CreateIndex (name, table, columns, schema, unique)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="columns" Type="System.String[]" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="unique" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="table">To be added.</param>
        <param name="columns">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="unique">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string column, string schema = default, bool unique = false, string filter = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex(string name, string table, string column, string schema, bool unique, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (name As String, table As String, column As String, Optional schema As String = Nothing, Optional unique As Boolean = false, Optional filter As String = Nothing) As OperationBuilder(Of CreateIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : string * string * string * string * bool * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;&#xA;override this.CreateIndex : string * string * string * string * bool * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;" Usage="migrationBuilder.CreateIndex (name, table, column, schema, unique, filter)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string column, string? schema = default, bool unique = false, string? filter = default);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="column" Type="System.String" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="unique" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="filter" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="name">The index name.</param>
        <param name="table">The table that contains the index.</param>
        <param name="column">The column that is indexed.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <param name="unique">Indicates whether or not the index enforces uniqueness.</param>
        <param name="filter">The filter to apply to the index, or <see langword="null" /> for no filter.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation" /> to create a new index.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string[] columns, string schema = default, bool unique = false, string filter = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex(string name, string table, string[] columns, string schema, bool unique, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String[],System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (name As String, table As String, columns As String(), Optional schema As String = Nothing, Optional unique As Boolean = false, Optional filter As String = Nothing) As OperationBuilder(Of CreateIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : string * string * string[] * string * bool * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;&#xA;override this.CreateIndex : string * string * string[] * string * bool * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;" Usage="migrationBuilder.CreateIndex (name, table, columns, schema, unique, filter)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string[] columns, string? schema = default, bool unique = false, string? filter = default);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="columns" Type="System.String[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="unique" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="filter" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="name">The index name.</param>
        <param name="table">The table that contains the index.</param>
        <param name="columns">The ordered list of columns that are indexed.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <param name="unique">Indicates whether or not the index enforces uniqueness.</param>
        <param name="filter">The filter to apply to the index, or <see langword="null" /> for no filter.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation" /> to create a new composite (multi-column) index.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string column, string? schema = default, bool unique = false, string? filter = default, bool[]? descending = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex(string name, string table, string column, string schema, bool unique, string filter, bool[] descending) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (name As String, table As String, column As String, Optional schema As String = Nothing, Optional unique As Boolean = false, Optional filter As String = Nothing, Optional descending As Boolean() = Nothing) As OperationBuilder(Of CreateIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : string * string * string * string * bool * string * bool[] -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;&#xA;override this.CreateIndex : string * string * string * string * bool * string * bool[] -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;" Usage="migrationBuilder.CreateIndex (name, table, column, schema, unique, filter, descending)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="unique" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="filter" Type="System.String" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="descending" Type="System.Boolean[]" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The index name.</param>
        <param name="table">The table that contains the index.</param>
        <param name="column">The column that is indexed.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <param name="unique">Indicates whether or not the index enforces uniqueness.</param>
        <param name="filter">The filter to apply to the index, or <see langword="null" /> for no filter.</param>
        <param name="descending">
                A set of values indicating whether each corresponding index column has descending sort order.
                If <see langword="null" />, all columns will have ascending order.
                If an empty array, all columns will have descending order.
            </param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation" /> to create a new index.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex (string name, string table, string[] columns, string? schema = default, bool unique = false, string? filter = default, bool[]? descending = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt; CreateIndex(string name, string table, string[] columns, string schema, bool unique, string filter, bool[] descending) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String[],System.String,System.Boolean,System.String,System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (name As String, table As String, columns As String(), Optional schema As String = Nothing, Optional unique As Boolean = false, Optional filter As String = Nothing, Optional descending As Boolean() = Nothing) As OperationBuilder(Of CreateIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : string * string * string[] * string * bool * string * bool[] -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;&#xA;override this.CreateIndex : string * string * string[] * string * bool * string * bool[] -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;" Usage="migrationBuilder.CreateIndex (name, table, columns, schema, unique, filter, descending)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="unique" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="filter" Type="System.String" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="descending" Type="System.Boolean[]" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The index name.</param>
        <param name="table">The table that contains the index.</param>
        <param name="columns">The ordered list of columns that are indexed.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <param name="unique">Indicates whether or not the index enforces uniqueness.</param>
        <param name="filter">The filter to apply to the index, or <see langword="null" /> for no filter.</param>
        <param name="descending">
                A set of values indicating whether each corresponding index column has descending sort order.
                If <see langword="null" />, all columns will have ascending order.
            </param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation" /> to create a new composite (multi-column) index.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSequence">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt; CreateSequence (string name, string schema = default, long startValue = 1, int incrementBy = 1, long? minValue = default, long? maxValue = default, bool cyclic = false);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt; CreateSequence(string name, string schema, int64 startValue, int32 incrementBy, valuetype System.Nullable`1&lt;int64&gt; minValue, valuetype System.Nullable`1&lt;int64&gt; maxValue, bool cyclic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateSequence(System.String,System.String,System.Int64,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSequence (name As String, Optional schema As String = Nothing, Optional startValue As Long = 1, Optional incrementBy As Integer = 1, Optional minValue As Nullable(Of Long) = Nothing, Optional maxValue As Nullable(Of Long) = Nothing, Optional cyclic As Boolean = false) As OperationBuilder(Of CreateSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateSequence : string * string * int64 * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt;&#xA;override this.CreateSequence : string * string * int64 * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt;" Usage="migrationBuilder.CreateSequence (name, schema, startValue, incrementBy, minValue, maxValue, cyclic)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt; CreateSequence (string name, string? schema = default, long startValue = 1, int incrementBy = 1, long? minValue = default, long? maxValue = default, bool cyclic = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="startValue" Type="System.Int64" />
        <Parameter Name="incrementBy" Type="System.Int32" />
        <Parameter Name="minValue" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="maxValue" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cyclic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <param name="startValue">The value at which the sequence will start, defaulting to 1.</param>
        <param name="incrementBy">The amount to increment by when generating the next value in the sequence, defaulting to 1.</param>
        <param name="minValue">The minimum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="maxValue">The maximum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="cyclic">Indicates whether or not the sequence will re-start when the maximum value is reached.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation" /> to create a new sequence.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSequence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt; CreateSequence&lt;T&gt; (string name, string schema = default, long startValue = 1, int incrementBy = 1, long? minValue = default, long? maxValue = default, bool cyclic = false);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt; CreateSequence&lt;T&gt;(string name, string schema, int64 startValue, int32 incrementBy, valuetype System.Nullable`1&lt;int64&gt; minValue, valuetype System.Nullable`1&lt;int64&gt; maxValue, bool cyclic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateSequence``1(System.String,System.String,System.Int64,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSequence(Of T) (name As String, Optional schema As String = Nothing, Optional startValue As Long = 1, Optional incrementBy As Integer = 1, Optional minValue As Nullable(Of Long) = Nothing, Optional maxValue As Nullable(Of Long) = Nothing, Optional cyclic As Boolean = false) As OperationBuilder(Of CreateSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateSequence : string * string * int64 * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt;&#xA;override this.CreateSequence : string * string * int64 * int * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt;" Usage="migrationBuilder.CreateSequence (name, schema, startValue, incrementBy, minValue, maxValue, cyclic)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt; CreateSequence&lt;T&gt; (string name, string? schema = default, long startValue = 1, int incrementBy = 1, long? minValue = default, long? maxValue = default, bool cyclic = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="startValue" Type="System.Int64" />
        <Parameter Name="incrementBy" Type="System.Int32" />
        <Parameter Name="minValue" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="maxValue" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cyclic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">The CLR type of the values generated by the sequence.</typeparam>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <param name="startValue">The value at which the sequence will start, defaulting to 1.</param>
        <param name="incrementBy">The amount to increment by when generating the next value in the sequence, defaulting to 1.</param>
        <param name="minValue">The minimum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="maxValue">The maximum value of the sequence, or <see langword="null" /> if not specified.</param>
        <param name="cyclic">Indicates whether or not the sequence will re-start when the maximum value is reached.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateSequenceOperation" /> to create a new sequence.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable&lt;TColumns&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt; CreateTable&lt;TColumns&gt; (string name, Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder,TColumns&gt; columns, string schema = default, Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt;&gt; constraints = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder`1&lt;!!TColumns&gt; CreateTable&lt;TColumns&gt;(string name, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, !!TColumns&gt; columns, string schema, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder`1&lt;!!TColumns&gt;&gt; constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateTable``1(System.String,System.Func{Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder,``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTable(Of TColumns) (name As String, columns As Func(Of ColumnsBuilder, TColumns), Optional schema As String = Nothing, Optional constraints As Action(Of CreateTableBuilder(Of TColumns)) = Nothing) As CreateTableBuilder(Of TColumns)" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : string * Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, 'Columns&gt; * string * Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;&#xA;override this.CreateTable : string * Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, 'Columns&gt; * string * Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;" Usage="migrationBuilder.CreateTable (name, columns, schema, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TColumns" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="columns" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder,TColumns&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="constraints" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt;&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="TColumns"> Type of a typically anonymous type for building columns. </typeparam>
        <param name="name"> The name of the table. </param>
        <param name="columns">
                A delegate using a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder" /> to create an anonymous type configuring the columns of the table.
            </param>
        <param name="schema"> The schema that contains the table, or <c>null</c> to use the default schema. </param>
        <param name="constraints">
                A delegate allowing constraints to be applied over the columns configured by the 'columns' delegate above.
            </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation" /> to create a new table.
            </summary>
        <returns> A <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder`1" /> to allow further configuration to be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable&lt;TColumns&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt; CreateTable&lt;TColumns&gt; (string name, Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder,TColumns&gt; columns, string schema = default, Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt;&gt; constraints = default, string comment = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder`1&lt;!!TColumns&gt; CreateTable&lt;TColumns&gt;(string name, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, !!TColumns&gt; columns, string schema, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder`1&lt;!!TColumns&gt;&gt; constraints, string comment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateTable``1(System.String,System.Func{Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder,``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder{``0}},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTable(Of TColumns) (name As String, columns As Func(Of ColumnsBuilder, TColumns), Optional schema As String = Nothing, Optional constraints As Action(Of CreateTableBuilder(Of TColumns)) = Nothing, Optional comment As String = Nothing) As CreateTableBuilder(Of TColumns)" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : string * Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, 'Columns&gt; * string * Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;&gt; * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;&#xA;override this.CreateTable : string * Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, 'Columns&gt; * string * Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;&gt; * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;'Columns&gt;" Usage="migrationBuilder.CreateTable (name, columns, schema, constraints, comment)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt; CreateTable&lt;TColumns&gt; (string name, Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder,TColumns&gt; columns, string? schema = default, Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt;&gt;? constraints = default, string? comment = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TColumns" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder,TColumns&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="constraints" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder&lt;TColumns&gt;&gt;" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="comment" Type="System.String" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TColumns">Type of a typically anonymous type for building columns.</typeparam>
        <param name="name">The name of the table.</param>
        <param name="columns">
                A delegate using a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder" /> to create an anonymous type configuring the columns of the table.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <param name="constraints">
                A delegate allowing constraints to be applied over the columns configured by the 'columns' delegate above.
            </param>
        <param name="comment">A comment to be applied to the table.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation" /> to create a new table.
            </summary>
        <returns>A <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder`1" /> to allow further configuration to be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, object keyValue, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string keyColumn, object keyValue, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumn As String, keyValue As Object, Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumn, keyValue, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, object? keyValue, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValue" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumn">The name of the key column used to select the row to delete.</param>
        <param name="keyValue">The key value of the row to delete.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete a single row of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, object[] keyValues, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string keyColumn, object[] keyValues, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String,System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumn As String, keyValues As Object(), Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumn, keyValues, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, object[] keyValues, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumn">The name of the key column used to select the row to delete.</param>
        <param name="keyValues">The key values of the rows to delete, one value per row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete multiple rows of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, object[,] keyValues, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string[] keyColumns, object[,] keyValues, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String[],System.Object[0:,0:],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumns As String(), keyValues As Object(,), Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumns, keyValues, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, object?[,] keyValues, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[,]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumns">The names of the key columns used to select the rows to delete.</param>
        <param name="keyValues">
                The key values of the rows to delete, where each element of the outer array represents a row, and each inner array contains values for
                each of the key columns in 'keyColumns'.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete multiple rows of seed data from
                a table with a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, object[] keyValues, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string[] keyColumns, object[] keyValues, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String[],System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumns As String(), keyValues As Object(), Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumns, keyValues, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, object?[] keyValues, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumns">The names of the key columns used to select the row to delete.</param>
        <param name="keyValues">The key values of the row to delete, one value for each column in 'keyColumns'.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete a single row of seed data from
                a table with a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, string keyColumnType, object keyValue, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string keyColumn, string keyColumnType, object keyValue, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumn As String, keyColumnType As String, keyValue As Object, Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumn, keyColumnType, keyValue, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, string keyColumnType, object? keyValue, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumnType" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValue" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumn">The name of the key column used to select the row to delete.</param>
        <param name="keyColumnType">
                The store type for the column that will be used to identify the rows that should be deleted.
            </param>
        <param name="keyValue">The key value of the row to delete.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete a single row of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, string keyColumnType, object[] keyValues, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string keyColumn, string keyColumnType, object[] keyValues, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String,System.String,System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumn As String, keyColumnType As String, keyValues As Object(), Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumn, keyColumnType, keyValues, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string keyColumn, string keyColumnType, object[] keyValues, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumnType" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumn">The name of the key column used to select the row to delete.</param>
        <param name="keyColumnType">
                The store type for the column that will be used to identify the rows that should be deleted.
            </param>
        <param name="keyValues">The key values of the rows to delete, one value per row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete multiple rows of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, string[] keyColumnTypes, object[,] keyValues, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string[] keyColumns, string[] keyColumnTypes, object[,] keyValues, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String[],System.String[],System.Object[0:,0:],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumns As String(), keyColumnTypes As String(), keyValues As Object(,), Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumns, keyColumnTypes, keyValues, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, string[] keyColumnTypes, object?[,] keyValues, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumnTypes" Type="System.String[]" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[,]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumns">The names of the key columns used to select the rows to delete.</param>
        <param name="keyColumnTypes">
                The store types for the columns that will be used to identify the rows that should be deleted.
            </param>
        <param name="keyValues">
                The key values of the rows to delete, where each element of the outer array represents a row, and each inner array contains values for
                each of the key columns in 'keyColumns'.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete multiple rows of seed data from
                a table with a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, string[] keyColumnTypes, object[] keyValues, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData(string table, string[] keyColumns, string[] keyColumnTypes, object[] keyValues, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DeleteData(System.String,System.String[],System.String[],System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteData (table As String, keyColumns As String(), keyColumnTypes As String(), keyValues As Object(), Optional schema As String = Nothing) As OperationBuilder(Of DeleteDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteData : string * string[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;&#xA;override this.DeleteData : string * string[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;" Usage="migrationBuilder.DeleteData (table, keyColumns, keyColumnTypes, keyValues, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt; DeleteData (string table, string[] keyColumns, string[] keyColumnTypes, object?[] keyValues, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumnTypes" Type="System.String[]" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table from which the data will be deleted.</param>
        <param name="keyColumns">The names of the key columns used to select the row to delete.</param>
        <param name="keyColumnTypes">
                The store types for the columns that will be used to identify the rows that should be deleted.
            </param>
        <param name="keyValues">The key values of the row to delete, one value for each column in 'keyColumns'.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DeleteDataOperation" /> to delete a single row of seed data from
                a table with a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropCheckConstraint">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation&gt; DropCheckConstraint (string name, string table, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation&gt; DropCheckConstraint(string name, string table, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropCheckConstraint(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropCheckConstraint (name As String, table As String, Optional schema As String = Nothing) As OperationBuilder(Of DropCheckConstraintOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropCheckConstraint : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation&gt;&#xA;override this.DropCheckConstraint : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation&gt;" Usage="migrationBuilder.DropCheckConstraint (name, table, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation&gt; DropCheckConstraint (string name, string table, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the check constraint to drop.</param>
        <param name="table">The name of the table for the check constraint to drop.</param>
        <param name="schema">The schema that contains the check constraint, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropCheckConstraintOperation" /> to drop an existing check constraint.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation&gt; DropColumn (string name, string table, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation&gt; DropColumn(string name, string table, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropColumn(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropColumn (name As String, table As String, Optional schema As String = Nothing) As OperationBuilder(Of DropColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropColumn : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation&gt;&#xA;override this.DropColumn : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation&gt;" Usage="migrationBuilder.DropColumn (name, table, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation&gt; DropColumn (string name, string table, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the column to drop.</param>
        <param name="table">The table that contains the column.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation" /> to drop an existing column.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation&gt; DropForeignKey (string name, string table, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation&gt; DropForeignKey(string name, string table, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropForeignKey(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropForeignKey (name As String, table As String, Optional schema As String = Nothing) As OperationBuilder(Of DropForeignKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropForeignKey : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation&gt;&#xA;override this.DropForeignKey : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation&gt;" Usage="migrationBuilder.DropForeignKey (name, table, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation&gt; DropForeignKey (string name, string table, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the foreign key constraint to drop.</param>
        <param name="table">The table that contains the foreign key.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation" /> to drop an existing foreign key constraint.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation&gt; DropIndex (string name, string table = default, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation&gt; DropIndex(string name, string table, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropIndex(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropIndex (name As String, Optional table As String = Nothing, Optional schema As String = Nothing) As OperationBuilder(Of DropIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropIndex : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation&gt;&#xA;override this.DropIndex : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation&gt;" Usage="migrationBuilder.DropIndex (name, table, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation&gt; DropIndex (string name, string? table = default, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the index to drop.</param>
        <param name="table">The table that contains the index.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation" /> to drop an existing index.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropPrimaryKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation&gt; DropPrimaryKey (string name, string table, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation&gt; DropPrimaryKey(string name, string table, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropPrimaryKey(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropPrimaryKey (name As String, table As String, Optional schema As String = Nothing) As OperationBuilder(Of DropPrimaryKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropPrimaryKey : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation&gt;&#xA;override this.DropPrimaryKey : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation&gt;" Usage="migrationBuilder.DropPrimaryKey (name, table, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation&gt; DropPrimaryKey (string name, string table, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the primary key constraint to drop.</param>
        <param name="table">The table that contains the key.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropPrimaryKeyOperation" /> to drop an existing primary key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropSchema">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation&gt; DropSchema (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation&gt; DropSchema(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropSchema (name As String) As OperationBuilder(Of DropSchemaOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropSchema : string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation&gt;&#xA;override this.DropSchema : string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation&gt;" Usage="migrationBuilder.DropSchema name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the schema to drop.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropSchemaOperation" /> to drop an existing schema.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropSequence">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation&gt; DropSequence (string name, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation&gt; DropSequence(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropSequence(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropSequence (name As String, Optional schema As String = Nothing) As OperationBuilder(Of DropSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropSequence : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation&gt;&#xA;override this.DropSequence : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation&gt;" Usage="migrationBuilder.DropSequence (name, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation&gt; DropSequence (string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the sequence to drop.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropSequenceOperation" /> to drop an existing sequence.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation&gt; DropTable (string name, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation&gt; DropTable(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropTable (name As String, Optional schema As String = Nothing) As OperationBuilder(Of DropTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropTable : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation&gt;&#xA;override this.DropTable : string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation&gt;" Usage="migrationBuilder.DropTable (name, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation&gt; DropTable (string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the table to drop.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation" /> to drop an existing table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropUniqueConstraint">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation&gt; DropUniqueConstraint (string name, string table, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation&gt; DropUniqueConstraint(string name, string table, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropUniqueConstraint(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DropUniqueConstraint (name As String, table As String, Optional schema As String = Nothing) As OperationBuilder(Of DropUniqueConstraintOperation)" />
      <MemberSignature Language="F#" Value="abstract member DropUniqueConstraint : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation&gt;&#xA;override this.DropUniqueConstraint : string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation&gt;" Usage="migrationBuilder.DropUniqueConstraint (name, table, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation&gt; DropUniqueConstraint (string name, string table, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the constraint to drop.</param>
        <param name="table">The table that contains the constraint.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropUniqueConstraintOperation" /> to drop an existing unique constraint.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureSchema">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation&gt; EnsureSchema (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation&gt; EnsureSchema(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.EnsureSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnsureSchema (name As String) As OperationBuilder(Of EnsureSchemaOperation)" />
      <MemberSignature Language="F#" Value="abstract member EnsureSchema : string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation&gt;&#xA;override this.EnsureSchema : string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation&gt;" Usage="migrationBuilder.EnsureSchema name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.EnsureSchemaOperation" /> to ensure that a schema exists.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="migrationBuilder.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object.</param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="migrationBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Serves as the default hash function.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, object value, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string column, object value, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, column As String, value As Object, Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, column, value, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, object? value, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="column">The name of the column into which the data will be inserted.</param>
        <param name="value">The value to insert.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert a single seed data value for a single column.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, object[] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string column, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String,System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, column As String, values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, column, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, object[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="column">The name of the column into which the data will be inserted.</param>
        <param name="values">The values to insert, one value for each row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert multiple rows of seed data values for a single column.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, object[,] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string[] columns, object[,] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String[],System.Object[0:,0:],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, columns As String(), values As Object(,), Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, columns, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, object?[,] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[,]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="columns">The names of the columns into which the data will be inserted.</param>
        <param name="values">
                The values to insert where each element of the outer array represents a row, and each inner array contains values for each of the
                columns in 'columns'.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert multiple rows of seed data values for multiple columns.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, object[] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string[] columns, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String[],System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, columns As String(), values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, columns, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, object?[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="columns">The names of the columns into which the data will be inserted.</param>
        <param name="values">The values to insert, one value for each column in 'columns'.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert a single row of seed data values.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, string columnType, object value, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string column, string columnType, object value, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, column As String, columnType As String, value As Object, Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, column, columnType, value, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, string columnType, object? value, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnType" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="column">The name of the column into which the data will be inserted.</param>
        <param name="columnType">The store type for the column into which data will be inserted.</param>
        <param name="value">The value to insert.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert a single seed data value for a single column.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, string columnType, object[] values, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string column, string columnType, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String,System.String,System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, column As String, columnType As String, values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, column, columnType, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string column, string columnType, object[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnType" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="column">The name of the column into which the data will be inserted.</param>
        <param name="columnType">The store type for the column into which data will be inserted.</param>
        <param name="values">The values to insert, one value for each row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert multiple rows of seed data values for a single column.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, string[] columnTypes, object[,] values, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string[] columns, string[] columnTypes, object[,] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String[],System.String[],System.Object[0:,0:],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, columns As String(), columnTypes As String(), values As Object(,), Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, columns, columnTypes, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, string[] columnTypes, object?[,] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnTypes" Type="System.String[]" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[,]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="columns">The names of the columns into which the data will be inserted.</param>
        <param name="columnTypes">A list of store types for the columns into which data will be inserted.</param>
        <param name="values">
                The values to insert where each element of the outer array represents a row, and each inner array contains values for each of the
                columns in 'columns'.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert multiple rows of seed data values for multiple columns.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, string[] columnTypes, object[] values, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData(string table, string[] columns, string[] columnTypes, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.InsertData(System.String,System.String[],System.String[],System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertData (table As String, columns As String(), columnTypes As String(), values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of InsertDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member InsertData : string * string[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;&#xA;override this.InsertData : string * string[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;" Usage="migrationBuilder.InsertData (table, columns, columnTypes, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt; InsertData (string table, string[] columns, string[] columnTypes, object?[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnTypes" Type="System.String[]" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table into which the data will be inserted.</param>
        <param name="columns">The names of the columns into which the data will be inserted.</param>
        <param name="columnTypes">A list of store types for the columns into which data will be inserted.</param>
        <param name="values">The values to insert, one value for each column in 'columns'.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.InsertDataOperation" /> to insert a single row of seed data values.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation&gt; Operations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation&gt; Operations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.Operations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Operations As List(Of MigrationOperation)" />
      <MemberSignature Language="F#" Value="member this.Operations : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation&gt;" Usage="Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.Operations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" />s being built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation&gt; RenameColumn (string name, string table, string newName, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation&gt; RenameColumn(string name, string table, string newName, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.RenameColumn(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameColumn (name As String, table As String, newName As String, Optional schema As String = Nothing) As OperationBuilder(Of RenameColumnOperation)" />
      <MemberSignature Language="F#" Value="abstract member RenameColumn : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation&gt;&#xA;override this.RenameColumn : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation&gt;" Usage="migrationBuilder.RenameColumn (name, table, newName, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation&gt; RenameColumn (string name, string table, string newName, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the column to be renamed.</param>
        <param name="table">The table that contains the column.</param>
        <param name="newName">The new name for the column.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation" /> to rename an existing column.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameIndex">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation&gt; RenameIndex (string name, string newName, string table = default, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation&gt; RenameIndex(string name, string newName, string table, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.RenameIndex(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameIndex (name As String, newName As String, Optional table As String = Nothing, Optional schema As String = Nothing) As OperationBuilder(Of RenameIndexOperation)" />
      <MemberSignature Language="F#" Value="abstract member RenameIndex : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation&gt;&#xA;override this.RenameIndex : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation&gt;" Usage="migrationBuilder.RenameIndex (name, newName, table, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation&gt; RenameIndex (string name, string newName, string? table = default, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the index to be renamed.</param>
        <param name="newName">The new name for the column.</param>
        <param name="table">The table that contains the index.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation" /> to rename an existing index.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameSequence">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation&gt; RenameSequence (string name, string schema = default, string newName = default, string newSchema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation&gt; RenameSequence(string name, string schema, string newName, string newSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.RenameSequence(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameSequence (name As String, Optional schema As String = Nothing, Optional newName As String = Nothing, Optional newSchema As String = Nothing) As OperationBuilder(Of RenameSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member RenameSequence : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation&gt;&#xA;override this.RenameSequence : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation&gt;" Usage="migrationBuilder.RenameSequence (name, schema, newName, newSchema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation&gt; RenameSequence (string name, string? schema = default, string? newName = default, string? newSchema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="newSchema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the sequence to be renamed.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <param name="newName">The new sequence name or <see langword="null" /> if only the schema has changed.</param>
        <param name="newSchema">The new schema name or <see langword="null" /> if only the name has changed.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation" /> to rename an existing sequence.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation&gt; RenameTable (string name, string schema = default, string newName = default, string newSchema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation&gt; RenameTable(string name, string schema, string newName, string newSchema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.RenameTable(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameTable (name As String, Optional schema As String = Nothing, Optional newName As String = Nothing, Optional newSchema As String = Nothing) As OperationBuilder(Of RenameTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member RenameTable : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation&gt;&#xA;override this.RenameTable : string * string * string * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation&gt;" Usage="migrationBuilder.RenameTable (name, schema, newName, newSchema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation&gt; RenameTable (string name, string? schema = default, string? newName = default, string? newSchema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="newSchema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the table to be renamed.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <param name="newName">The new table name or <see langword="null" /> if only the schema has changed.</param>
        <param name="newSchema">The new schema name, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation" /> to rename an existing table.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartSequence">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt; RestartSequence (string name, long startValue = 1, string schema = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt; RestartSequence(string name, int64 startValue, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.RestartSequence(System.String,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestartSequence (name As String, Optional startValue As Long = 1, Optional schema As String = Nothing) As OperationBuilder(Of RestartSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member RestartSequence : string * int64 * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt;&#xA;override this.RestartSequence : string * int64 * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt;" Usage="migrationBuilder.RestartSequence (name, startValue, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt; RestartSequence (string name, long startValue = 1, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="startValue" Type="System.Int64" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the sequence.</param>
        <param name="startValue">The value at which the sequence will start, defaulting to 1.</param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation" /> to re-start an existing sequence.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartSequence">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt; RestartSequence (string name, long? startValue = default, string? schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt; RestartSequence(string name, valuetype System.Nullable`1&lt;int64&gt; startValue, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.RestartSequence(System.String,System.Nullable{System.Int64},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestartSequence (name As String, Optional startValue As Nullable(Of Long) = Nothing, Optional schema As String = Nothing) As OperationBuilder(Of RestartSequenceOperation)" />
      <MemberSignature Language="F#" Value="abstract member RestartSequence : string * Nullable&lt;int64&gt; * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt;&#xA;override this.RestartSequence : string * Nullable&lt;int64&gt; * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt;" Usage="migrationBuilder.RestartSequence (name, startValue, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="startValue" Type="System.Nullable&lt;System.Int64&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the sequence.</param>
        <param name="startValue">
                The value at which the sequence will start. If <see langword="null" /> (the default), the sequence restarts based
                on the configuration used during creation.
            </param>
        <param name="schema">The schema that contains the sequence, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds a <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RestartSequenceOperation" /> to re-start an existing sequence.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sql">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation&gt; Sql (string sql, bool suppressTransaction = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation&gt; Sql(string sql, bool suppressTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.Sql(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sql (sql As String, Optional suppressTransaction As Boolean = false) As OperationBuilder(Of SqlOperation)" />
      <MemberSignature Language="F#" Value="abstract member Sql : string * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation&gt;&#xA;override this.Sql : string * bool -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation&gt;" Usage="migrationBuilder.Sql (sql, suppressTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="suppressTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sql">The SQL string to be executed to perform the operation.</param>
        <param name="suppressTransaction">
                Indicates whether or not transactions will be suppressed while executing the SQL.
            </param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation" /> to execute raw SQL.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="migrationBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a string that represents the current object.
            </summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object keyValue, string column, object value, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string keyColumn, object keyValue, string column, object value, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String,System.Object,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumn As String, keyValue As Object, column As String, value As Object, Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string * obj * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string * obj * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumn, keyValue, column, value, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object? keyValue, string column, object? value, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValue" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumn">The name of the key column used to select the row to update.</param>
        <param name="keyValue">The key value of the row to update.</param>
        <param name="column">The column to update.</param>
        <param name="value">The new value for the column in the selected row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update a single row of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object keyValue, string[] columns, object[] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string keyColumn, object keyValue, string[] columns, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String,System.Object,System.String[],System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumn As String, keyValue As Object, columns As String(), values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string * obj * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string * obj * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumn, keyValue, columns, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object? keyValue, string[] columns, object?[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValue" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumn">The name of the key column used to select the row to update.</param>
        <param name="keyValue">The key value of the row to update.</param>
        <param name="columns">The columns to update.</param>
        <param name="values">The new values, one for each column in 'columns', for the selected row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update a single row of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object[] keyValues, string column, object[] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string keyColumn, object[] keyValues, string column, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String,System.Object[],System.String,System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumn As String, keyValues As Object(), column As String, values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string * obj[] * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string * obj[] * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumn, keyValues, column, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object[] keyValues, string column, object[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumn">The name of the key column used to select the row to update.</param>
        <param name="keyValues">The key values of the rows to update, one value per row.</param>
        <param name="column">The column to update.</param>
        <param name="values">The new values for the column, one for each row specified in 'keyValues'.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update multiple rows of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object[] keyValues, string[] columns, object[,] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string keyColumn, object[] keyValues, string[] columns, object[,] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String,System.Object[],System.String[],System.Object[0:,0:],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumn As String, keyValues As Object(), columns As String(), values As Object(,), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string * obj[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string * obj[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumn, keyValues, columns, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string keyColumn, object[] keyValues, string[] columns, object?[,] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumn" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[,]" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumn">The name of the key column used to select the row to update.</param>
        <param name="keyValues">The key values of the rows to update, one value per row.</param>
        <param name="columns">The columns to update.</param>
        <param name="values">
                The values for each update, where each element of the outer array represents a row specified in
                'keyValues', and each inner array contains values for each of the columns in 'columns'.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update multiple rows of seed data.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object[,] keyValues, string column, object[] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string[] keyColumns, object[,] keyValues, string column, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String[],System.Object[0:,0:],System.String,System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumns As String(), keyValues As Object(,), column As String, values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string[] * obj[,] * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string[] * obj[,] * string * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumns, keyValues, column, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object[,] keyValues, string column, object[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[,]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumns">The names of the key columns used to select the rows to update.</param>
        <param name="keyValues">
                The key values of the rows to update, where each element of the outer array represents a row, and each inner array contains values for
                each of the key columns in 'keyColumns'.
            </param>
        <param name="column">The column to update.</param>
        <param name="values">The new values for the column, one for each row specified in 'keyValues'.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update multiple rows of seed data for a table with
                a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object[,] keyValues, string[] columns, object[,] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string[] keyColumns, object[,] keyValues, string[] columns, object[,] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String[],System.Object[0:,0:],System.String[],System.Object[0:,0:],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumns As String(), keyValues As Object(,), columns As String(), values As Object(,), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string[] * obj[,] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string[] * obj[,] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumns, keyValues, columns, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object?[,] keyValues, string[] columns, object?[,] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[,]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[,]" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumns">The names of the key columns used to select the rows to update.</param>
        <param name="keyValues">
                The key values of the rows to update, where each element of the outer array represents a row, and each inner array contains values for
                each of the key columns in 'keyColumns'.
            </param>
        <param name="columns">The columns to update.</param>
        <param name="values">
                The values for each update, where each element of the outer array represents a row specified in
                'keyValues', and each inner array contains values for each of the columns in 'columns'.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update multiple rows of seed data for a table with
                a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object[] keyValues, string column, object value, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string[] keyColumns, object[] keyValues, string column, object value, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String[],System.Object[],System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumns As String(), keyValues As Object(), column As String, value As Object, Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string[] * obj[] * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string[] * obj[] * string * obj * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumns, keyValues, column, value, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object[] keyValues, string column, object? value, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="column" Type="System.String" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumns">The names of the key columns used to select the row to update.</param>
        <param name="keyValues">The key values of the row to update, one value for each column in 'keyColumns'.</param>
        <param name="column">The column to update.</param>
        <param name="value">The new value for the column in the selected row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update a single row of seed data for a table with
                a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object[] keyValues, string[] columns, object[] values, string schema = default);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string[] keyColumns, object[] keyValues, string[] columns, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String[],System.Object[],System.String[],System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumns As String(), keyValues As Object(), columns As String(), values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string[] * obj[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string[] * obj[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumns, keyValues, columns, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, object?[] keyValues, string[] columns, object?[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumns">The names of the key columns used to select the row to update.</param>
        <param name="keyValues">The key values of the row to update, one value for each column in 'keyColumns'.</param>
        <param name="columns">The columns to update.</param>
        <param name="values">The new values, one for each column in 'columns', for the selected row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update a single row of seed data for a table with
                a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, string[] keyColumnTypes, object[,] keyValues, string[] columns, string[] columnTypes, object[,] values, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string[] keyColumns, string[] keyColumnTypes, object[,] keyValues, string[] columns, string[] columnTypes, object[,] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String[],System.String[],System.Object[0:,0:],System.String[],System.String[],System.Object[0:,0:],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumns As String(), keyColumnTypes As String(), keyValues As Object(,), columns As String(), columnTypes As String(), values As Object(,), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string[] * string[] * obj[,] * string[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string[] * string[] * obj[,] * string[] * string[] * obj[,] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumns, keyColumnTypes, keyValues, columns, columnTypes, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, string[] keyColumnTypes, object?[,] keyValues, string[] columns, string[] columnTypes, object?[,] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumnTypes" Type="System.String[]" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[,]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnTypes" Type="System.String[]" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[,]" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumns">The names of the key columns used to select the rows to update.</param>
        <param name="keyColumnTypes">
                A list of store types for the columns that will be used to identify the rows that should be updated.
            </param>
        <param name="keyValues">
                The key values of the rows to update, where each element of the outer array represents a row, and each inner array contains values for
                each of the key columns in 'keyColumns'.
            </param>
        <param name="columns">The columns to update.</param>
        <param name="columnTypes">A list of store types for the columns in which data will be updated.</param>
        <param name="values">
                The values for each update, where each element of the outer array represents a row specified in
                'keyValues', and each inner array contains values for each of the columns in 'columns'.
            </param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update multiple rows of seed data for a table with
                a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateData">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, string[] keyColumnTypes, object[] keyValues, string[] columns, string[] columnTypes, object[] values, string schema = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder`1&lt;class Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData(string table, string[] keyColumns, string[] keyColumnTypes, object[] keyValues, string[] columns, string[] columnTypes, object[] values, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.UpdateData(System.String,System.String[],System.String[],System.Object[],System.String[],System.String[],System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateData (table As String, keyColumns As String(), keyColumnTypes As String(), keyValues As Object(), columns As String(), columnTypes As String(), values As Object(), Optional schema As String = Nothing) As OperationBuilder(Of UpdateDataOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateData : string * string[] * string[] * obj[] * string[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;&#xA;override this.UpdateData : string * string[] * string[] * obj[] * string[] * string[] * obj[] * string -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;" Usage="migrationBuilder.UpdateData (table, keyColumns, keyColumnTypes, keyValues, columns, columnTypes, values, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt; UpdateData (string table, string[] keyColumns, string[] keyColumnTypes, object[] keyValues, string[] columns, string[] columnTypes, object[] values, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder&lt;Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumns" Type="System.String[]" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyColumnTypes" Type="System.String[]" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyValues" Type="System.Object[]" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.String[]" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnTypes" Type="System.String[]" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="values" Type="System.Object[]" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">The table containing the data to be updated.</param>
        <param name="keyColumns">The names of the key columns used to select the row to update.</param>
        <param name="keyColumnTypes">
                A list of store types for the columns that will be used to identify the rows that should be updated.
            </param>
        <param name="keyValues">The key values of the row to update, one value for each column in 'keyColumns'.</param>
        <param name="columns">The columns to update.</param>
        <param name="columnTypes">A list of store types for the columns in which data will be updated.</param>
        <param name="values">The new values, one for each column in 'columns', for the selected row.</param>
        <param name="schema">The schema that contains the table, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Builds an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.UpdateDataOperation" /> to update a single row of seed data for a table with
                a composite (multi-column) key.
            </summary>
        <returns>A builder to allow annotations to be added to the operation.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-migrations">Database migrations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
