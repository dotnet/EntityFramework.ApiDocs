<Type Name="EntityTypeParameterBinding" FullName="Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding">
  <TypeSignature Language="C#" Value="public class EntityTypeParameterBinding : Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityTypeParameterBinding extends Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBinding" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityTypeParameterBinding&#xA;Inherits ServiceParameterBinding" />
  <TypeSignature Language="F#" Value="type EntityTypeParameterBinding = class&#xA;    inherit ServiceParameterBinding" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.ServiceParameterBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Describes the binding of a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />, which may or may not also have and associated
                <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IServiceProperty" />, to a parameter in a constructor, factory method, or similar.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-constructor-binding">Entity types with constructors</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityTypeParameterBinding (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase serviceProperty = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase serviceProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding.#ctor(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional serviceProperty As IPropertyBase = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding" Usage="new Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding serviceProperty" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="serviceProperty"> The associated <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IServiceProperty" />, or null. </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding" /> instance for the given service type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityTypeParameterBinding (params Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[]? serviceProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] serviceProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding.#ctor(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray serviceProperties As IPropertyBase())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] -&gt; Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding" Usage="new Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding serviceProperties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProperties" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[]" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceProperties">The associated <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IServiceProperty" /> objects, or <see langword="null" />.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding" /> instance for the given service type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToParameter">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression BindToParameter (System.Linq.Expressions.Expression materializationExpression, System.Linq.Expressions.Expression entityTypeExpression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression BindToParameter(class System.Linq.Expressions.Expression materializationExpression, class System.Linq.Expressions.Expression entityTypeExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding.BindToParameter(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BindToParameter (materializationExpression As Expression, entityTypeExpression As Expression) As Expression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="override this.BindToParameter : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="entityTypeParameterBinding.BindToParameter (materializationExpression, entityTypeExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression BindToParameter (System.Linq.Expressions.Expression materializationExpression, System.Linq.Expressions.Expression bindingInfoExpression);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression BindToParameter(class System.Linq.Expressions.Expression materializationExpression, class System.Linq.Expressions.Expression bindingInfoExpression) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BindToParameter (materializationExpression As Expression, bindingInfoExpression As Expression) As Expression" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="override this.BindToParameter : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="entityTypeParameterBinding.BindToParameter (materializationExpression, bindingInfoExpression)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="materializationExpression" Type="System.Linq.Expressions.Expression" Index="0" />
        <Parameter Name="entityTypeExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="bindingInfoExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeExpression">The expression representing the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> constant.</param>
        <param name="materializationExpression">The expression representing the materialization context.</param>
        <param name="bindingInfoExpression">The expression representing the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo" /> constant.</param>
        <summary>
                Creates an expression tree representing the binding of the value of a property from a
                materialization expression to a parameter of the constructor, factory method, etc.
            </summary>
        <returns>The expression tree.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.ParameterBinding With (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] consumedProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.ParameterBinding With(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] consumedProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.EntityTypeParameterBinding.With(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function With (consumedProperties As IPropertyBase()) As ParameterBinding" />
      <MemberSignature Language="F#" Value="override this.With : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" Usage="entityTypeParameterBinding.With consumedProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ParameterBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumedProperties" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[]" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="consumedProperties">The new consumed properties.</param>
        <summary>
                Creates a copy that contains the given consumed properties.
            </summary>
        <returns>A copy with replaced consumed properties.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
