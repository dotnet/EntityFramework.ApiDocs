<Type Name="RuntimePropertyBase" FullName="Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase">
  <TypeSignature Language="C#" Value="public abstract class RuntimePropertyBase : Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase, Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RuntimePropertyBase extends Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RuntimePropertyBase&#xA;Inherits AnnotatableBase&#xA;Implements IRuntimePropertyBase" />
  <TypeSignature Language="F#" Value="type RuntimePropertyBase = class&#xA;    inherit AnnotatableBase&#xA;    interface IRuntimePropertyBase&#xA;    interface IPropertyBase&#xA;    interface IReadOnlyPropertyBase&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IPropertyBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Base type for navigations and properties.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RuntimePropertyBase (string name, System.Reflection.PropertyInfo? propertyInfo, System.Reflection.FieldInfo? fieldInfo, Microsoft.EntityFrameworkCore.PropertyAccessMode propertyAccessMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Reflection.PropertyInfo propertyInfo, class System.Reflection.FieldInfo fieldInfo, valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode propertyAccessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.#ctor(System.String,System.Reflection.PropertyInfo,System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.PropertyAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, propertyInfo As PropertyInfo, fieldInfo As FieldInfo, propertyAccessMode As PropertyAccessMode)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase : string * System.Reflection.PropertyInfo * System.Reflection.FieldInfo * Microsoft.EntityFrameworkCore.PropertyAccessMode -&gt; Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase" Usage="new Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase (name, propertyInfo, fieldInfo, propertyAccessMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="fieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="propertyAccessMode" Type="Microsoft.EntityFrameworkCore.PropertyAccessMode" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <param name="fieldInfo">To be added.</param>
        <param name="propertyAccessMode">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="protected abstract Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.ClrType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.ClrType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the type of value that this property-like object holds.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringEntityType">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType DeclaringEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType DeclaringEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.DeclaringEntityType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringEntityType As RuntimeEntityType" />
      <MemberSignature Language="F#" Value="member this.DeclaringEntityType : Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.DeclaringEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the type that this property-like object belongs to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeBase DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeBase DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As RuntimeTypeBase" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeBase" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the type that this property-like object belongs to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Accessors">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Accessors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Accessors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#Internal#IRuntimePropertyBase#Accessors" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Accessors As PropertyAccessors Implements IRuntimePropertyBase.Accessors" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Accessors : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Accessors" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Accessors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.GetSetter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter IRuntimePropertyBase.GetSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.GetSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#Internal#IRuntimePropertyBase#GetSetter" />
      <MemberSignature Language="VB.NET" Value="Function GetSetter () As IClrPropertySetter Implements IRuntimePropertyBase.GetSetter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.GetSetter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.GetSetter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter" Usage="runtimePropertyBase.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.GetSetter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.GetSetter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.MaterializationSetter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.MaterializationSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.MaterializationSetter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#Internal#IRuntimePropertyBase#MaterializationSetter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MaterializationSetter As IClrPropertySetter Implements IRuntimePropertyBase.MaterializationSetter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.MaterializationSetter : Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.MaterializationSetter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.MaterializationSetter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.PropertyIndexes">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.PropertyIndexes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.PropertyIndexes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#Internal#IRuntimePropertyBase#PropertyIndexes" />
      <MemberSignature Language="VB.NET" Value=" Property PropertyIndexes As PropertyIndexes Implements IRuntimePropertyBase.PropertyIndexes" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.PropertyIndexes : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.PropertyIndexes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.PropertyIndexes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Setter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Setter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Setter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#Internal#IRuntimePropertyBase#Setter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Setter As IClrPropertySetter Implements IRuntimePropertyBase.Setter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Setter : Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Setter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimePropertyBase.Setter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrPropertySetter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetCurrentValueComparer">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; IPropertyBase.GetCurrentValueComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetCurrentValueComparer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#IPropertyBase#GetCurrentValueComparer" />
      <MemberSignature Language="VB.NET" Value="Function GetCurrentValueComparer () As IComparer(Of IUpdateEntry) Implements IPropertyBase.GetCurrentValueComparer" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetCurrentValueComparer : unit -&gt; System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetCurrentValueComparer : unit -&gt; System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Usage="runtimePropertyBase.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetCurrentValueComparer " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetCurrentValueComparer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetGetter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter IPropertyBase.GetGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#IPropertyBase#GetGetter" />
      <MemberSignature Language="VB.NET" Value="Function GetGetter () As IClrPropertyGetter Implements IPropertyBase.GetGetter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetGetter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetGetter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter" Usage="runtimePropertyBase.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetGetter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.GetGetter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.ClrType">
      <MemberSignature Language="C#" Value="Type Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyPropertyBase#ClrType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ClrType As Type Implements IReadOnlyPropertyBase.ClrType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.ClrType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.ClrType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.DeclaringType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyPropertyBase#DeclaringType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DeclaringType As IReadOnlyTypeBase Implements IReadOnlyPropertyBase.DeclaringType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.DeclaringType : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.DeclaringType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.DeclaringType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.FieldInfo">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo? Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.FieldInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.FieldInfo Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.FieldInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyPropertyBase#FieldInfo" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FieldInfo As FieldInfo Implements IReadOnlyPropertyBase.FieldInfo" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.FieldInfo : System.Reflection.FieldInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.FieldInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.FieldInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.GetPropertyAccessMode">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.PropertyAccessMode IReadOnlyPropertyBase.GetPropertyAccessMode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.GetPropertyAccessMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyPropertyBase#GetPropertyAccessMode" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyAccessMode () As PropertyAccessMode Implements IReadOnlyPropertyBase.GetPropertyAccessMode" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.GetPropertyAccessMode : unit -&gt; Microsoft.EntityFrameworkCore.PropertyAccessMode&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.GetPropertyAccessMode : unit -&gt; Microsoft.EntityFrameworkCore.PropertyAccessMode" Usage="runtimePropertyBase.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.GetPropertyAccessMode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.GetPropertyAccessMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.PropertyAccessMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.PropertyInfo">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo? Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.PropertyInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.PropertyInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyPropertyBase#PropertyInfo" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property PropertyInfo As PropertyInfo Implements IReadOnlyPropertyBase.PropertyInfo" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.PropertyInfo : System.Reflection.PropertyInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.PropertyInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.PropertyInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the name of this property-like object.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sentinel">
      <MemberSignature Language="C#" Value="public abstract object? Sentinel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Sentinel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Sentinel" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Sentinel As Object" />
      <MemberSignature Language="F#" Value="member this.Sentinel : obj" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.Sentinel" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase.Sentinel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetAccessors">
      <MemberSignature Language="C#" Value="public virtual void SetAccessors (Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors accessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccessors(class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors accessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.SetAccessors(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAccessors (accessors As PropertyAccessors)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessors : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors -&gt; unit&#xA;override this.SetAccessors : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors -&gt; unit" Usage="runtimePropertyBase.SetAccessors accessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessors" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="accessors">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGetter&lt;TEntity,TStructuralType,TValue&gt;">
      <MemberSignature Language="C#" Value="public virtual void SetGetter&lt;TEntity,TStructuralType,TValue&gt; (Func&lt;TEntity,TValue&gt; getter, Func&lt;TEntity,bool&gt; hasDefaultValue, Func&lt;TStructuralType,TValue&gt; structuralTypeGetter, Func&lt;TStructuralType,bool&gt; hasStructuralTypeSentinelValue) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGetter&lt;class TEntity, TStructuralType, TValue&gt;(class System.Func`2&lt;!!TEntity, !!TValue&gt; getter, class System.Func`2&lt;!!TEntity, bool&gt; hasDefaultValue, class System.Func`2&lt;!!TStructuralType, !!TValue&gt; structuralTypeGetter, class System.Func`2&lt;!!TStructuralType, bool&gt; hasStructuralTypeSentinelValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.SetGetter``3(System.Func{``0,``2},System.Func{``0,System.Boolean},System.Func{``1,``2},System.Func{``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetGetter(Of TEntity As Class, TStructuralType As Class, TValue As Class) (getter As Func(Of TEntity, TValue), hasDefaultValue As Func(Of TEntity, Boolean), structuralTypeGetter As Func(Of TStructuralType, TValue), hasStructuralTypeSentinelValue As Func(Of TStructuralType, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member SetGetter : Func&lt;'Entity, 'Value (requires 'Entity : null)&gt; * Func&lt;'Entity, bool (requires 'Entity : null)&gt; * Func&lt;'StructuralType, 'Value&gt; * Func&lt;'StructuralType, bool&gt; -&gt; unit (requires 'Entity : null)&#xA;override this.SetGetter : Func&lt;'Entity, 'Value (requires 'Entity : null)&gt; * Func&lt;'Entity, bool (requires 'Entity : null)&gt; * Func&lt;'StructuralType, 'Value&gt; * Func&lt;'StructuralType, bool&gt; -&gt; unit (requires 'Entity : null)" Usage="runtimePropertyBase.SetGetter (getter, hasDefaultValue, structuralTypeGetter, hasStructuralTypeSentinelValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TStructuralType" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="getter" Type="System.Func&lt;TEntity,TValue&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="hasDefaultValue" Type="System.Func&lt;TEntity,System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="structuralTypeGetter" Type="System.Func&lt;TStructuralType,TValue&gt;" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="hasStructuralTypeSentinelValue" Type="System.Func&lt;TStructuralType,System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TStructuralType">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="getter">To be added.</param>
        <param name="hasDefaultValue">To be added.</param>
        <param name="structuralTypeGetter">To be added.</param>
        <param name="hasStructuralTypeSentinelValue">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSetter&lt;TEntity,TValue&gt;">
      <MemberSignature Language="C#" Value="public virtual void SetSetter&lt;TEntity,TValue&gt; (Action&lt;TEntity,TValue&gt; setter) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSetter&lt;class TEntity, TValue&gt;(class System.Action`2&lt;!!TEntity, !!TValue&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimePropertyBase.SetSetter``2(System.Action{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSetter(Of TEntity As Class, TValue As Class) (setter As Action(Of TEntity, TValue))" />
      <MemberSignature Language="F#" Value="abstract member SetSetter : Action&lt;'Entity, 'Value (requires 'Entity : null)&gt; -&gt; unit (requires 'Entity : null)&#xA;override this.SetSetter : Action&lt;'Entity, 'Value (requires 'Entity : null)&gt; -&gt; unit (requires 'Entity : null)" Usage="runtimePropertyBase.SetSetter setter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="setter" Type="System.Action&lt;TEntity,TValue&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="setter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
