<Type Name="IMutableTypeBase" FullName="Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase">
  <TypeSignature Language="C#" Value="public interface IMutableTypeBase : Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, Microsoft.EntityFrameworkCore.Metadata.ITypeBase" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMutableTypeBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ITypeBase" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMutableTypeBase&#xA;Implements IMutableAnnotatable, ITypeBase" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type IMutableTypeBase = interface&#xA;    interface ITypeBase&#xA;    interface IAnnotatable&#xA;    interface IMutableAnnotatable" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="C#" Value="public interface IMutableTypeBase : Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMutableTypeBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMutableTypeBase&#xA;Implements IMutableAnnotatable, IReadOnlyTypeBase" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="F#" Value="type IMutableTypeBase = interface&#xA;    interface IReadOnlyTypeBase&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IMutableAnnotatable" FrameworkAlternate="efcore-6.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITypeBase</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Represents a type in an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel" />.
                </para>
      <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" /> represents a read-only view of the same metadata.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddIgnored">
      <MemberSignature Language="C#" Value="public void AddIgnored (string memberName);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIgnored(string memberName) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.AddIgnored(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddIgnored (memberName As String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member AddIgnored : string -&gt; unit" Usage="iMutableTypeBase.AddIgnored memberName" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public string AddIgnored (string memberName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AddIgnored(string memberName) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddIgnored (memberName As String) As String" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member AddIgnored : string -&gt; string" Usage="iMutableTypeBase.AddIgnored memberName" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public string? AddIgnored (string memberName);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="memberName">The name of the member to be ignored.</param>
        <summary>
                Marks the given member name as ignored, preventing conventions from adding a matching property
                or navigation to the type.
            </summary>
        <returns>The name of the ignored member.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIgnoredMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; GetIgnoredMembers ();" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; GetIgnoredMembers() cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.GetIgnoredMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIgnoredMembers () As IReadOnlyList(Of String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member GetIgnoredMembers : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="iMutableTypeBase.GetIgnoredMembers " FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetIgnoredMembers ();" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetIgnoredMembers() cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIgnoredMembers () As IEnumerable(Of String)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member GetIgnoredMembers : unit -&gt; seq&lt;string&gt;" Usage="iMutableTypeBase.GetIgnoredMembers " FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets all the ignored members.
            </summary>
        <returns>The list of ignored member names.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIgnored">
      <MemberSignature Language="C#" Value="public bool IsIgnored (string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIgnored(string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.IsIgnored(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIgnored (memberName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsIgnored : string -&gt; bool" Usage="iMutableTypeBase.IsIgnored memberName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="memberName">The name of the member that might be ignored.</param>
        <summary>
                Indicates whether the given member name is ignored.
            </summary>
        <returns>
          <see langword="true" /> if the given member name is ignored.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IMutableModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As IMutableModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IMutableModel" Usage="Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the model that this type belongs to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveIgnored">
      <MemberSignature Language="C#" Value="public void RemoveIgnored (string memberName);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveIgnored(string memberName) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.RemoveIgnored(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveIgnored (memberName As String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member RemoveIgnored : string -&gt; unit" Usage="iMutableTypeBase.RemoveIgnored memberName" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public string RemoveIgnored (string memberName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoveIgnored(string memberName) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveIgnored (memberName As String) As String" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member RemoveIgnored : string -&gt; string" Usage="iMutableTypeBase.RemoveIgnored memberName" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public string? RemoveIgnored (string memberName);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="memberName">The name of the member to be removed.</param>
        <summary>
                Removes the ignored member name.
            </summary>
        <returns>The removed ignored member name, or <see langword="null" /> if the member name was not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavigationAccessMode">
      <MemberSignature Language="C#" Value="public virtual void SetNavigationAccessMode (Microsoft.EntityFrameworkCore.PropertyAccessMode? propertyAccessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNavigationAccessMode(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.SetNavigationAccessMode(System.Nullable{Microsoft.EntityFrameworkCore.PropertyAccessMode})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetNavigationAccessMode (propertyAccessMode As Nullable(Of PropertyAccessMode))" />
      <MemberSignature Language="F#" Value="abstract member SetNavigationAccessMode : Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; -&gt; unit&#xA;override this.SetNavigationAccessMode : Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; -&gt; unit" Usage="iMutableTypeBase.SetNavigationAccessMode propertyAccessMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt;" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="propertyAccessMode">The <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" />, or <see langword="null" /> to clear the mode set.</param>
        <summary>
          <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> to use for navigations of this entity type.
                </para>
          <para>
                    Note that individual navigations can override this access mode. The value set here will
                    be used for any navigation for which no override has been specified.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyAccessMode">
      <MemberSignature Language="C#" Value="public virtual void SetPropertyAccessMode (Microsoft.EntityFrameworkCore.PropertyAccessMode? propertyAccessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyAccessMode(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.SetPropertyAccessMode(System.Nullable{Microsoft.EntityFrameworkCore.PropertyAccessMode})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPropertyAccessMode (propertyAccessMode As Nullable(Of PropertyAccessMode))" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyAccessMode : Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; -&gt; unit&#xA;override this.SetPropertyAccessMode : Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; -&gt; unit" Usage="iMutableTypeBase.SetPropertyAccessMode propertyAccessMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt;" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="propertyAccessMode">The <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" />, or <see langword="null" /> to clear the mode set.</param>
        <summary>
          <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> to use for properties and navigations of this entity type.
                </para>
          <para>
                    Note that individual properties and navigations can override this access mode. The value set here will
                    be used for any property or navigation for which no override has been specified.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
