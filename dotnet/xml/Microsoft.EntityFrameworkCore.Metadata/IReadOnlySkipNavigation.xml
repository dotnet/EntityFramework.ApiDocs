<Type Name="IReadOnlySkipNavigation" FullName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation">
  <TypeSignature Language="C#" Value="public interface IReadOnlySkipNavigation : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadOnlySkipNavigation implements class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReadOnlySkipNavigation&#xA;Implements IReadOnlyNavigationBase" />
  <TypeSignature Language="F#" Value="type IReadOnlySkipNavigation = interface&#xA;    interface IReadOnlyNavigationBase&#xA;    interface IReadOnlyPropertyBase&#xA;    interface IReadOnlyAnnotatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IReadOnlySkipNavigation implements class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents a navigation property that is part of a relationship
                that is forwarded through a third entity type.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ForeignKey">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey? ForeignKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey ForeignKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.ForeignKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKey As IReadOnlyForeignKey" />
      <MemberSignature Language="F#" Value="member this.ForeignKey : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.ForeignKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the foreign key to the join type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation Inverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation Inverse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.Inverse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inverse As IReadOnlySkipNavigation" />
      <MemberSignature Language="F#" Value="member this.Inverse : Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.Inverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the inverse skip navigation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOnDependent">
      <MemberSignature Language="C#" Value="public bool IsOnDependent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnDependent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.IsOnDependent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnDependent As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsOnDependent : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.IsOnDependent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the navigation property is defined on the dependent side of the underlying foreign key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType? JoinEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType JoinEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.JoinEntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JoinEntityType As IReadOnlyEntityType" />
      <MemberSignature Language="F#" Value="member this.JoinEntityType : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.JoinEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the join type used by the foreign key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase.Inverse">
      <MemberSignature Language="C#" Value="override sealed Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase.Inverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase.Inverse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyNavigationBase#Inverse" />
      <MemberSignature Language="VB.NET" Value=" Overrides NotOverridable ReadOnly Property Inverse As IReadOnlyNavigationBase Implements IReadOnlyNavigationBase.Inverse" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase.Inverse : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase.Inverse" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase.Inverse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigationBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the inverse navigation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDebugString">
      <MemberSignature Language="C#" Value="public virtual string ToDebugString (Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions options = Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions.ShortDefault, int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToDebugString(valuetype Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions options, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation.ToDebugString(Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToDebugString (Optional options As MetadataDebugStringOptions = Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions.ShortDefault, Optional indent As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="abstract member ToDebugString : Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions * int -&gt; string&#xA;override this.ToDebugString : Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions * int -&gt; string" Usage="iReadOnlySkipNavigation.ToDebugString (options, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions" />
        <Parameter Name="indent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">Options for generating the string.</param>
        <param name="indent">The number of indent spaces to use before each new line.</param>
        <summary>
          <para>
                    Creates a human-readable representation of the given metadata.
                </para>
          <para>
                    Warning: Do not rely on the format of the returned string.
                    It is designed for debugging only and may change arbitrarily between releases.
                </para>
        </summary>
        <returns>A human-readable representation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
