<Type Name="PropertyAccessMode" FullName="Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode">
  <TypeSignature Language="C#" Value="public enum PropertyAccessMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyAccessMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PropertyAccessMode" />
  <TypeSignature Language="F#" Value="type PropertyAccessMode = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <para>
                    Pass a value from this enum to <see cref="M:Microsoft.EntityFrameworkCore.ModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" />,
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" />, or
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" /> to change whether the property
                    or backing field will be used when reading and writing to a property or field.
                </para>
      <para>
                    If no access mode is set, then the backing field for a property will be used if possible
                    when constructing new instances of the entity. The property getter or setter will be used,
                    if possible, for all other accesses of the property. Note that when it is not possible
                    to use the field because it could not be found by convention and was not specified using
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasField(System.String)" />, then the property will be used instead. Likewise,
                    when it is not possible to use the property getter or setter, for example when the
                    property is read-only, then the field will be used instead.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="Field" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode Field = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Field" />
      <MemberSignature Language="VB.NET" Value="Field" />
      <MemberSignature Language="F#" Value="Field = 0" Usage="Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Field" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <para>
                    Enforces that all accesses to the property must go through the field.
                </para>
          <para>
                    An exception will be thrown if this mode is set and it is not possible to read
                    from or write to the field.
                </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FieldDuringConstruction">
      <MemberSignature Language="C#" Value="FieldDuringConstruction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode FieldDuringConstruction = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.FieldDuringConstruction" />
      <MemberSignature Language="VB.NET" Value="FieldDuringConstruction" />
      <MemberSignature Language="F#" Value="FieldDuringConstruction = 1" Usage="Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.FieldDuringConstruction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <para>
                    Enforces that all accesses to the property must go through the field when
                    new instances are being constructed. New instances are typically constructed when
                    entities are queried from the database.
                    An exception will be thrown if this mode is set and it is not possible to
                    write to the field.
                </para>
          <para>
                    All other uses of the property will go through the property getters and setters,
                    unless this is not possible because, for example, the property is read-only, in which
                    case these accesses will also use the field.
                </para>
          <para>
                    This access mode is similar to the default mode used if none has been set except
                    that it will throw an exception if it is not possible to write to the field for
                    entity construction. The default access mode will fall back to using the property
                    instead.
                </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="Property" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode Property = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Property" />
      <MemberSignature Language="VB.NET" Value="Property" />
      <MemberSignature Language="F#" Value="Property = 2" Usage="Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <para>
                    Enforces that all accesses to the property must go through the property
                    getters and setters, even when new objects are being constructed.
                </para>
          <para>
                    An exception will be thrown if this mode is set and it is not possible to read
                    from or write to the property, for example because it is read-only.
                </para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
