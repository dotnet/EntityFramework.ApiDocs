<Type Name="IClrCollectionAccessor" FullName="Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor">
  <TypeSignature Language="C#" Value="public interface IClrCollectionAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClrCollectionAccessor" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClrCollectionAccessor" />
  <TypeSignature Language="F#" Value="type IClrCollectionAccessor = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IClrCollectionAccessor" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Represents operations backed by compiled delegates that allow manipulation of collections
                    on navigation properties.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (object entity, object value, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(object entity, object value, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Add(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (entity As Object, value As Object, forMaterialization As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj * bool -&gt; bool" Usage="iClrCollectionAccessor.Add (entity, value, forMaterialization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="forMaterialization" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entity">The entity instance.</param>
        <param name="value">The value to add.</param>
        <param name="forMaterialization">If true, then the value is being added as part of query materialization.</param>
        <summary>
                Adds a value to the navigation property collection, unless it is already contained in the collection.
            </summary>
        <returns>
          <see langword="true" /> if a value was added; <see langword="false" /> if it was already in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandalone">
      <MemberSignature Language="C#" Value="public bool AddStandalone (object collection, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddStandalone(object collection, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.AddStandalone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddStandalone (collection As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AddStandalone : obj * obj -&gt; bool" Usage="iClrCollectionAccessor.AddStandalone (collection, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="collection">The collection.</param>
        <param name="value">The value to add.</param>
        <summary>
                Adds a value to the passed collection, unless it is already contained in the collection.
            </summary>
        <returns>
          <see langword="true" /> if a value was added; <see langword="false" /> if it was already in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public Type CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CollectionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CollectionType As Type" />
      <MemberSignature Language="F#" Value="member this.CollectionType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The collection type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object entity, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object entity, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Contains(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entity As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj * obj -&gt; bool" Usage="iClrCollectionAccessor.Contains (entity, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity instance.</param>
        <param name="value">The value to check.</param>
        <summary>
                Checks whether the value is contained in the collection.
            </summary>
        <returns>
          <see langword="true" /> if the value is contained in the collection; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsStandalone">
      <MemberSignature Language="C#" Value="public bool ContainsStandalone (object collection, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsStandalone(object collection, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.ContainsStandalone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsStandalone (collection As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ContainsStandalone : obj * obj -&gt; bool" Usage="iClrCollectionAccessor.ContainsStandalone (collection, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="collection">The collection.</param>
        <param name="value">The value to check.</param>
        <summary>
                Checks whether the value is contained in the passed collection.
            </summary>
        <returns>
          <see langword="true" /> if the value is contained in the collection; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public object Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Create" />
      <MemberSignature Language="VB.NET" Value="Public Function Create () As Object" />
      <MemberSignature Language="F#" Value="abstract member Create : unit -&gt; obj" Usage="iClrCollectionAccessor.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Creates a new collection instance of the appropriate type for the navigation property.
            </summary>
        <returns>The collection instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreate">
      <MemberSignature Language="C#" Value="public object GetOrCreate (object entity, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOrCreate(object entity, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.GetOrCreate(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreate (entity As Object, forMaterialization As Boolean) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreate : obj * bool -&gt; obj" Usage="iClrCollectionAccessor.GetOrCreate (entity, forMaterialization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="forMaterialization" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entity">The entity instance.</param>
        <param name="forMaterialization">If true, then this is happening as part of query materialization; <see langword="false" /> otherwise.</param>
        <summary>
                Either returns the existing collection instance set on the navigation property, or if none
                exists, then creates a new instance, sets it, and returns it.
            </summary>
        <returns>The existing or new collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (object entity, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object entity, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Remove(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj * obj -&gt; bool" Usage="iClrCollectionAccessor.Remove (entity, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">The entity instance.</param>
        <param name="value">The value to check.</param>
        <summary>
                Removes a value from the collection.
            </summary>
        <returns>
          <see langword="true" /> if the value was contained in the collection; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStandalone">
      <MemberSignature Language="C#" Value="public bool RemoveStandalone (object? collection, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveStandalone(object collection, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.RemoveStandalone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveStandalone (collection As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member RemoveStandalone : obj * obj -&gt; bool" Usage="iClrCollectionAccessor.RemoveStandalone (collection, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="collection">The collection.</param>
        <param name="value">The value to check.</param>
        <summary>
                Removes a value from the passed collection.
            </summary>
        <returns>
          <see langword="true" /> if the value was contained in the collection; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
