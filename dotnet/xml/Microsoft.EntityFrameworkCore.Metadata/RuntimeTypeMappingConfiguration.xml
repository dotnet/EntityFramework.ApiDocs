<Type Name="RuntimeTypeMappingConfiguration" FullName="Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration">
  <TypeSignature Language="C#" Value="public sealed class RuntimeTypeMappingConfiguration : Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase, Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuntimeTypeMappingConfiguration extends Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuntimeTypeMappingConfiguration&#xA;Inherits AnnotatableBase&#xA;Implements ITypeMappingConfiguration" />
  <TypeSignature Language="F#" Value="type RuntimeTypeMappingConfiguration = class&#xA;    inherit AnnotatableBase&#xA;    interface ITypeMappingConfiguration&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents scalar type configuration.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeTypeMappingConfiguration (Type clrType, int? maxLength, bool? unicode, int? precision, int? scale, Type? providerClrType, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? valueConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, valuetype System.Nullable`1&lt;int32&gt; maxLength, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale, class System.Type providerClrType, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter valueConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.#ctor(System.Type,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Type,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, maxLength As Nullable(Of Integer), unicode As Nullable(Of Boolean), precision As Nullable(Of Integer), scale As Nullable(Of Integer), providerClrType As Type, valueConverter As ValueConverter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration : Type * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Type * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration" Usage="new Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration (clrType, maxLength, unicode, precision, scale, providerClrType, valueConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="providerClrType" Type="System.Type" />
        <Parameter Name="valueConverter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <param name="maxLength">To be added.</param>
        <param name="unicode">To be added.</param>
        <param name="precision">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="providerClrType">To be added.</param>
        <param name="valueConverter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.ClrType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.ClrType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the type of value that this property-like object holds.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetMaxLength">
      <MemberSignature Language="C#" Value="int? ITypeMappingConfiguration.GetMaxLength ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Nullable`1&lt;int32&gt; Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetMaxLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.Microsoft#EntityFrameworkCore#Metadata#ITypeMappingConfiguration#GetMaxLength" />
      <MemberSignature Language="VB.NET" Value="Function GetMaxLength () As Nullable(Of Integer) Implements ITypeMappingConfiguration.GetMaxLength" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetMaxLength : unit -&gt; Nullable&lt;int&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetMaxLength : unit -&gt; Nullable&lt;int&gt;" Usage="runtimeTypeMappingConfiguration.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetMaxLength " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetMaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetPrecision">
      <MemberSignature Language="C#" Value="int? ITypeMappingConfiguration.GetPrecision ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Nullable`1&lt;int32&gt; Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetPrecision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.Microsoft#EntityFrameworkCore#Metadata#ITypeMappingConfiguration#GetPrecision" />
      <MemberSignature Language="VB.NET" Value="Function GetPrecision () As Nullable(Of Integer) Implements ITypeMappingConfiguration.GetPrecision" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetPrecision : unit -&gt; Nullable&lt;int&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetPrecision : unit -&gt; Nullable&lt;int&gt;" Usage="runtimeTypeMappingConfiguration.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetPrecision " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetPrecision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetProviderClrType">
      <MemberSignature Language="C#" Value="Type? ITypeMappingConfiguration.GetProviderClrType ();" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetProviderClrType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.Microsoft#EntityFrameworkCore#Metadata#ITypeMappingConfiguration#GetProviderClrType" />
      <MemberSignature Language="VB.NET" Value="Function GetProviderClrType () As Type Implements ITypeMappingConfiguration.GetProviderClrType" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetProviderClrType : unit -&gt; Type&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetProviderClrType : unit -&gt; Type" Usage="runtimeTypeMappingConfiguration.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetProviderClrType " />
      <MemberSignature Language="C#" Value="Type ITypeMappingConfiguration.GetProviderClrType ();" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetProviderClrType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetScale">
      <MemberSignature Language="C#" Value="int? ITypeMappingConfiguration.GetScale ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Nullable`1&lt;int32&gt; Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetScale() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.Microsoft#EntityFrameworkCore#Metadata#ITypeMappingConfiguration#GetScale" />
      <MemberSignature Language="VB.NET" Value="Function GetScale () As Nullable(Of Integer) Implements ITypeMappingConfiguration.GetScale" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetScale : unit -&gt; Nullable&lt;int&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetScale : unit -&gt; Nullable&lt;int&gt;" Usage="runtimeTypeMappingConfiguration.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetScale " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetScale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetValueConverter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? ITypeMappingConfiguration.GetValueConverter ();" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetValueConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.Microsoft#EntityFrameworkCore#Metadata#ITypeMappingConfiguration#GetValueConverter" />
      <MemberSignature Language="VB.NET" Value="Function GetValueConverter () As ValueConverter Implements ITypeMappingConfiguration.GetValueConverter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetValueConverter : unit -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetValueConverter : unit -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Usage="runtimeTypeMappingConfiguration.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetValueConverter " />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter ITypeMappingConfiguration.GetValueConverter ();" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.GetValueConverter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.IsUnicode">
      <MemberSignature Language="C#" Value="bool? ITypeMappingConfiguration.IsUnicode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Nullable`1&lt;bool&gt; Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.IsUnicode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeTypeMappingConfiguration.Microsoft#EntityFrameworkCore#Metadata#ITypeMappingConfiguration#IsUnicode" />
      <MemberSignature Language="VB.NET" Value="Function IsUnicode () As Nullable(Of Boolean) Implements ITypeMappingConfiguration.IsUnicode" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.IsUnicode : unit -&gt; Nullable&lt;bool&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.IsUnicode : unit -&gt; Nullable&lt;bool&gt;" Usage="runtimeTypeMappingConfiguration.Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.IsUnicode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITypeMappingConfiguration.IsUnicode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
