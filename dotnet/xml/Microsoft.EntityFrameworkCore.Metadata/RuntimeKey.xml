<Type Name="RuntimeKey" FullName="Microsoft.EntityFrameworkCore.Metadata.RuntimeKey">
  <TypeSignature Language="C#" Value="public class RuntimeKey : Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase, Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RuntimeKey extends Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IKey, class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey" />
  <TypeSignature Language="VB.NET" Value="Public Class RuntimeKey&#xA;Inherits AnnotatableBase&#xA;Implements IRuntimeKey" />
  <TypeSignature Language="F#" Value="type RuntimeKey = class&#xA;    inherit AnnotatableBase&#xA;    interface IRuntimeKey&#xA;    interface IKey&#xA;    interface IReadOnlyKey&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IKey</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents a primary or alternate key on an entity type.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IReadOnlyList(Of RuntimeProperty))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.RuntimeKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.RuntimeKey" Usage="new Microsoft.EntityFrameworkCore.Metadata.RuntimeKey properties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.DebugView" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DebugView As DebugView" />
      <MemberSignature Language="F#" Value="member this.DebugView : Microsoft.EntityFrameworkCore.Infrastructure.DebugView" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.DebugView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.DebugView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType DeclaringEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType DeclaringEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.DeclaringEntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeclaringEntityType As RuntimeEntityType" />
      <MemberSignature Language="F#" Value="member this.DeclaringEntityType : Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.DeclaringEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.RuntimeEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the entity type the key is defined on. This may be different from the type that <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IKey.Properties" />
                are defined on when the key is defined a derived type in an inheritance hierarchy (since the properties
                may be defined on a base type).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityMapFactory">
      <MemberSignature Language="C#" Value="public virtual Func&lt;bool,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; IdentityMapFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;bool, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; IdentityMapFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.IdentityMapFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IdentityMapFactory As Func(Of Boolean, IIdentityMap)" />
      <MemberSignature Language="F#" Value="member this.IdentityMapFactory : Func&lt;bool, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.IdentityMapFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IKey.DeclaringEntityType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IEntityType Microsoft.EntityFrameworkCore.Metadata.IKey.DeclaringEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType Microsoft.EntityFrameworkCore.Metadata.IKey.DeclaringEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#IKey#DeclaringEntityType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DeclaringEntityType As IEntityType Implements IKey.DeclaringEntityType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IKey.DeclaringEntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IKey.DeclaringEntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IKey.DeclaringEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory IKey.GetPrincipalKeyValueFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#IKey#GetPrincipalKeyValueFactory" />
      <MemberSignature Language="VB.NET" Value="Function GetPrincipalKeyValueFactory () As IPrincipalKeyValueFactory Implements IKey.GetPrincipalKeyValueFactory" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory" Usage="runtimeKey.Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;TKey&gt; IKey.GetPrincipalKeyValueFactory&lt;TKey&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory`1&lt;!!TKey&gt; Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory&lt;TKey&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#IKey#GetPrincipalKeyValueFactory``1" />
      <MemberSignature Language="VB.NET" Value="Function GetPrincipalKeyValueFactory(Of TKey) () As IPrincipalKeyValueFactory(Of TKey) Implements IKey.GetPrincipalKeyValueFactory" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;'Key&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;'Key&gt;" Usage="runtimeKey.Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IKey.GetPrincipalKeyValueFactory``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IKey.Properties">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; Microsoft.EntityFrameworkCore.Metadata.IKey.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; Microsoft.EntityFrameworkCore.Metadata.IKey.Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#IKey#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As IReadOnlyList(Of IProperty) Implements IKey.Properties" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IKey.Properties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IKey.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IKey.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey.GetIdentityMapFactory">
      <MemberSignature Language="C#" Value="Func&lt;bool,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; IRuntimeKey.GetIdentityMapFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Func`2&lt;bool, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey.GetIdentityMapFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#Internal#IRuntimeKey#GetIdentityMapFactory" />
      <MemberSignature Language="VB.NET" Value="Function GetIdentityMapFactory () As Func(Of Boolean, IIdentityMap) Implements IRuntimeKey.GetIdentityMapFactory" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey.GetIdentityMapFactory : unit -&gt; Func&lt;bool, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey.GetIdentityMapFactory : unit -&gt; Func&lt;bool, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt;" Usage="runtimeKey.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey.GetIdentityMapFactory " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeKey.GetIdentityMapFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.DeclaringEntityType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.DeclaringEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.DeclaringEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyKey#DeclaringEntityType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DeclaringEntityType As IReadOnlyEntityType Implements IReadOnlyKey.DeclaringEntityType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.DeclaringEntityType : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.DeclaringEntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.DeclaringEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.GetReferencingForeignKeys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey&gt; IReadOnlyKey.GetReferencingForeignKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.GetReferencingForeignKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyKey#GetReferencingForeignKeys" />
      <MemberSignature Language="VB.NET" Value="Function GetReferencingForeignKeys () As IEnumerable(Of IReadOnlyForeignKey) Implements IReadOnlyKey.GetReferencingForeignKeys" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.GetReferencingForeignKeys : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.GetReferencingForeignKeys : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey&gt;" Usage="runtimeKey.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.GetReferencingForeignKeys " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.GetReferencingForeignKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.Properties">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyKey#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As IReadOnlyList(Of IReadOnlyProperty) Implements IReadOnlyKey.Properties" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.Properties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyKey.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As IReadOnlyList(Of RuntimeProperty)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the properties that make up the key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencingForeignKeys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeForeignKey&gt;? ReferencingForeignKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RuntimeForeignKey&gt; ReferencingForeignKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.ReferencingForeignKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReferencingForeignKeys As ISet(Of RuntimeForeignKey)" />
      <MemberSignature Language="F#" Value="member this.ReferencingForeignKeys : System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeForeignKey&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.ReferencingForeignKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.RuntimeForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIdentityMapFactory">
      <MemberSignature Language="C#" Value="public virtual void SetIdentityMapFactory (Func&lt;bool,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIdentityMapFactory(class System.Func`2&lt;bool, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.SetIdentityMapFactory(System.Func{System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetIdentityMapFactory (factory As Func(Of Boolean, IIdentityMap))" />
      <MemberSignature Language="F#" Value="abstract member SetIdentityMapFactory : Func&lt;bool, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; -&gt; unit&#xA;override this.SetIdentityMapFactory : Func&lt;bool, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt; -&gt; unit" Usage="runtimeKey.SetIdentityMapFactory factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalKeyValueFactory&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public virtual void SetPrincipalKeyValueFactory&lt;TKey&gt; (Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;TKey&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPrincipalKeyValueFactory&lt;TKey&gt;(class Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory`1&lt;!!TKey&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.SetPrincipalKeyValueFactory``1(Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPrincipalKeyValueFactory(Of TKey) (factory As IPrincipalKeyValueFactory(Of TKey))" />
      <MemberSignature Language="F#" Value="abstract member SetPrincipalKeyValueFactory : Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;'Key&gt; -&gt; unit&#xA;override this.SetPrincipalKeyValueFactory : Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;'Key&gt; -&gt; unit" Usage="runtimeKey.SetPrincipalKeyValueFactory factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.IPrincipalKeyValueFactory&lt;TKey&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <param name="factory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RuntimeKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="runtimeKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a string that represents the current object.
            </summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
