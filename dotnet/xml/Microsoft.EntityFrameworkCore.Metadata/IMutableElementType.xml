<Type Name="IMutableElementType" FullName="Microsoft.EntityFrameworkCore.Metadata.IMutableElementType">
  <TypeSignature Language="C#" Value="public interface IMutableElementType : Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IMutableElementType implements class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMutableElementType&#xA;Implements IMutableAnnotatable, IReadOnlyElementType" />
  <TypeSignature Language="F#" Value="type IMutableElementType = interface&#xA;    interface IReadOnlyElementType&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IMutableAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents the elements of a collection property.
            </summary>
    <remarks>
      <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IElementType" /> represents a read-only view of the same metadata.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CollectionProperty">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IMutableProperty CollectionProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty CollectionProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.CollectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CollectionProperty As IMutableProperty" />
      <MemberSignature Language="F#" Value="member this.CollectionProperty : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" Usage="Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.CollectionProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the collection property for which this represents the element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets a value indicating whether elements of the collection can be <see langword="null" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType.IsNullable">
      <MemberSignature Language="C#" Value="override sealed bool Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType.IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType.IsNullable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyElementType#IsNullable" />
      <MemberSignature Language="VB.NET" Value=" Overrides NotOverridable ReadOnly Property IsNullable As Boolean Implements IReadOnlyElementType.IsNullable" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType.IsNullable : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType.IsNullable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyElementType.IsNullable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetIsUnicode">
      <MemberSignature Language="C#" Value="public void SetIsUnicode (bool? unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIsUnicode(valuetype System.Nullable`1&lt;bool&gt; unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetIsUnicode(System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIsUnicode (unicode As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member SetIsUnicode : Nullable&lt;bool&gt; -&gt; unit" Usage="iMutableElementType.SetIsUnicode unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="unicode">
          <see langword="true" /> if the elements of the collection accept Unicode characters, <see langword="false" /> if they do not,
                or <see langword="null" /> to clear the setting.
            </param>
        <summary>
                Sets a value indicating whether elements of the collection can persist Unicode characters.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJsonValueReaderWriterType">
      <MemberSignature Language="C#" Value="public void SetJsonValueReaderWriterType (Type? readerWriterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetJsonValueReaderWriterType(class System.Type readerWriterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetJsonValueReaderWriterType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetJsonValueReaderWriterType (readerWriterType As Type)" />
      <MemberSignature Language="F#" Value="abstract member SetJsonValueReaderWriterType : Type -&gt; unit" Usage="iMutableElementType.SetJsonValueReaderWriterType readerWriterType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readerWriterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="readerWriterType">
                A type that inherits from <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" />, or <see langword="null" /> to use the reader/writer
                from the type mapping.
            </param>
        <summary>
                Sets the type of <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" /> to use for elements of the collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxLength">
      <MemberSignature Language="C#" Value="public void SetMaxLength (int? maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxLength(valuetype System.Nullable`1&lt;int32&gt; maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetMaxLength(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxLength (maxLength As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member SetMaxLength : Nullable&lt;int&gt; -&gt; unit" Usage="iMutableElementType.SetMaxLength maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="maxLength">The maximum length of data that is allowed in this elements of the collection.</param>
        <summary>
                Sets the maximum length of data that is allowed in elements of the collection. For example, if the element type is
                a <see cref="T:System.String" /> then this is the maximum number of characters.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrecision">
      <MemberSignature Language="C#" Value="public void SetPrecision (int? precision);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPrecision(valuetype System.Nullable`1&lt;int32&gt; precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetPrecision(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrecision (precision As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member SetPrecision : Nullable&lt;int&gt; -&gt; unit" Usage="iMutableElementType.SetPrecision precision" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="precision">The maximum number of digits that is allowed in each element.</param>
        <summary>
                Sets the precision of data that is allowed in elements of the collection.
                For example, if the element type is a <see cref="T:System.Decimal" />, then this is the maximum number of digits.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProviderClrType">
      <MemberSignature Language="C#" Value="public void SetProviderClrType (Type? providerClrType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProviderClrType(class System.Type providerClrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetProviderClrType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProviderClrType (providerClrType As Type)" />
      <MemberSignature Language="F#" Value="abstract member SetProviderClrType : Type -&gt; unit" Usage="iMutableElementType.SetProviderClrType providerClrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerClrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="providerClrType">The type to use, or <see langword="null" /> to remove any previously set type.</param>
        <summary>
                Sets the type that the elements of the collection will be converted to before being sent to the database provider.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public void SetScale (int? scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScale(valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetScale(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScale (scale As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member SetScale : Nullable&lt;int&gt; -&gt; unit" Usage="iMutableElementType.SetScale scale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="scale">The maximum number of decimal places that is allowed in each element.</param>
        <summary>
                Sets the scale of data that is allowed in this elements of the collection.
                For example, if the element type is a <see cref="T:System.Decimal" />, then this is the maximum number of decimal places.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeMapping">
      <MemberSignature Language="C#" Value="public void SetTypeMapping (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping typeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTypeMapping(class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetTypeMapping(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTypeMapping (typeMapping As CoreTypeMapping)" />
      <MemberSignature Language="F#" Value="abstract member SetTypeMapping : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping -&gt; unit" Usage="iMutableElementType.SetTypeMapping typeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" />
      </Parameters>
      <Docs>
        <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" /> for this element.</param>
        <summary>
                Sets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" /> for the given element.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueComparer">
      <MemberSignature Language="C#" Value="public void SetValueComparer (Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueComparer(class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetValueComparer(Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueComparer (comparer As ValueComparer)" />
      <MemberSignature Language="F#" Value="abstract member SetValueComparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer -&gt; unit" Usage="iMutableElementType.SetValueComparer comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">The comparer, or <see langword="null" /> to remove any previously set comparer.</param>
        <summary>
                Sets the custom <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" /> for elements of the collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueComparer">
      <MemberSignature Language="C#" Value="public void SetValueComparer (Type? comparerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueComparer(class System.Type comparerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetValueComparer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueComparer (comparerType As Type)" />
      <MemberSignature Language="F#" Value="abstract member SetValueComparer : Type -&gt; unit" Usage="iMutableElementType.SetValueComparer comparerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparerType" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="comparerType">
                A type that inherits from <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />, or <see langword="null" /> to remove any previously set comparer.
            </param>
        <summary>
                Sets the custom <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" /> for elements of the collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueConverter">
      <MemberSignature Language="C#" Value="public void SetValueConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueConverter(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetValueConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueConverter (converter As ValueConverter)" />
      <MemberSignature Language="F#" Value="abstract member SetValueConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; unit" Usage="iMutableElementType.SetValueConverter converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
      </Parameters>
      <Docs>
        <param name="converter">The converter, or <see langword="null" /> to remove any previously set converter.</param>
        <summary>
                Sets the custom <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" /> for this elements of the collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueConverter">
      <MemberSignature Language="C#" Value="public void SetValueConverter (Type? converterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueConverter(class System.Type converterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IMutableElementType.SetValueConverter(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueConverter (converterType As Type)" />
      <MemberSignature Language="F#" Value="abstract member SetValueConverter : Type -&gt; unit" Usage="iMutableElementType.SetValueConverter converterType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="converterType">
                A type that inherits from <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />, or <see langword="null" /> to remove any previously set converter.
            </param>
        <summary>
                Sets the custom <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" /> for this elements of the collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
