<Type Name="IComplexProperty" FullName="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty">
  <TypeSignature Language="C#" Value="public interface IComplexProperty : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyComplexProperty" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IComplexProperty implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyComplexProperty, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComplexProperty&#xA;Implements IPropertyBase, IReadOnlyComplexProperty" />
  <TypeSignature Language="F#" Value="type IComplexProperty = interface&#xA;    interface IReadOnlyComplexProperty&#xA;    interface IReadOnlyPropertyBase&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IPropertyBase&#xA;    interface IAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IPropertyBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyComplexProperty</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents a complex property of a structural type.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ComplexType">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IComplexType ComplexType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IComplexType ComplexType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IComplexProperty.ComplexType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComplexType As IComplexType" />
      <MemberSignature Language="F#" Value="member this.ComplexType : Microsoft.EntityFrameworkCore.Metadata.IComplexType" Usage="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty.ComplexType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IComplexType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the associated complex type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
