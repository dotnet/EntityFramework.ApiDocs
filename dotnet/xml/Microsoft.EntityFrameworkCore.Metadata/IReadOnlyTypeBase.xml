<Type Name="IReadOnlyTypeBase" FullName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase">
  <TypeSignature Language="C#" Value="public interface IReadOnlyTypeBase : Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadOnlyTypeBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReadOnlyTypeBase&#xA;Implements IReadOnlyAnnotatable" />
  <TypeSignature Language="F#" Value="type IReadOnlyTypeBase = interface&#xA;    interface IReadOnlyAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents a type in the model.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.ClrType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
                    Gets the CLR class that is used to represent instances of this type.
                    Returns <see langword="null" /> if the type does not have a corresponding CLR class (known as a shadow type).
                </para>
          <para>
                    Shadow types are not currently supported in a model that is used at runtime with a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                    Therefore, shadow types will only exist in migration model snapshots, etc.
                </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DisplayName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisplayName () As String" />
      <MemberSignature Language="F#" Value="abstract member DisplayName : unit -&gt; string&#xA;override this.DisplayName : unit -&gt; string" Usage="iReadOnlyTypeBase.DisplayName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the friendly display name for the given <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" />.
            </summary>
        <returns>The display name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName (bool omitSharedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DisplayName(bool omitSharedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.DisplayName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisplayName (omitSharedType As Boolean) As String" />
      <MemberSignature Language="F#" Value="abstract member DisplayName : bool -&gt; string&#xA;override this.DisplayName : bool -&gt; string" Usage="iReadOnlyTypeBase.DisplayName omitSharedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="omitSharedType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="omitSharedType">
                A value indicating whether the name of the type for shared type entity types should be omitted from the returned value.
            </param>
        <summary>
                Gets the friendly display name for the given <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" />.
            </summary>
        <returns>The display name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndexerPropertyInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo? FindIndexerPropertyInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo FindIndexerPropertyInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.FindIndexerPropertyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndexerPropertyInfo () As PropertyInfo" />
      <MemberSignature Language="F#" Value="abstract member FindIndexerPropertyInfo : unit -&gt; System.Reflection.PropertyInfo" Usage="iReadOnlyTypeBase.FindIndexerPropertyInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns the <see cref="T:System.Reflection.PropertyInfo" /> for the indexer on the associated CLR type if one exists.
            </summary>
        <returns>The <see cref="T:System.Reflection.PropertyInfo" /> for the indexer on the associated CLR type if one exists.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNavigationAccessMode">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.PropertyAccessMode GetNavigationAccessMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode GetNavigationAccessMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.GetNavigationAccessMode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNavigationAccessMode () As PropertyAccessMode" />
      <MemberSignature Language="F#" Value="abstract member GetNavigationAccessMode : unit -&gt; Microsoft.EntityFrameworkCore.PropertyAccessMode" Usage="iReadOnlyTypeBase.GetNavigationAccessMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.PropertyAccessMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Gets the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> being used for navigations of this type.
                </para>
          <para>
                    Note that individual navigations can override this access mode. The value returned here will
                    be used for any navigation for which no override has been specified.
                </para>
        </summary>
        <returns>The access mode being used.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAccessMode">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.PropertyAccessMode GetPropertyAccessMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode GetPropertyAccessMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.GetPropertyAccessMode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyAccessMode () As PropertyAccessMode" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyAccessMode : unit -&gt; Microsoft.EntityFrameworkCore.PropertyAccessMode" Usage="iReadOnlyTypeBase.GetPropertyAccessMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.PropertyAccessMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Gets the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> being used for properties and navigations of this type.
                </para>
          <para>
                    Note that individual properties and navigations can override this access mode. The value returned here will
                    be used for any property or navigation for which no override has been specified.
                </para>
        </summary>
        <returns>The access mode being used.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSharedClrType">
      <MemberSignature Language="C#" Value="public bool HasSharedClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSharedClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.HasSharedClrType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSharedClrType As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasSharedClrType : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.HasSharedClrType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether this entity type is mapped to a <see cref="T:System.Type" /> that
                other entity types are also mapped to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public virtual bool IsAbstract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAbstract() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAbstract () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsAbstract : unit -&gt; bool&#xA;override this.IsAbstract : unit -&gt; bool" Usage="iReadOnlyTypeBase.IsAbstract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets a value indicating whether this entity type represents an abstract type.
            </summary>
        <returns>
          <see langword="true" /> if the type is abstract, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPropertyBag">
      <MemberSignature Language="C#" Value="public bool IsPropertyBag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPropertyBag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.IsPropertyBag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPropertyBag As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPropertyBag : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.IsPropertyBag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether this entity type has an indexer which is able to contain arbitrary properties
                and a method that can be used to determine whether a given indexer property contains a value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As IReadOnlyModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the model that this type belongs to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the name of this type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortName">
      <MemberSignature Language="C#" Value="public virtual string ShortName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ShortName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase.ShortName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShortName () As String" />
      <MemberSignature Language="F#" Value="abstract member ShortName : unit -&gt; string&#xA;override this.ShortName : unit -&gt; string" Usage="iReadOnlyTypeBase.ShortName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets a short name for the given <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" /> that can be used in other identifiers.
            </summary>
        <returns>The short name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
