<Type Name="ChangeTrackingStrategy" FullName="Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy">
  <TypeSignature Language="C#" Value="public enum ChangeTrackingStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ChangeTrackingStrategy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Enum ChangeTrackingStrategy" />
  <TypeSignature Language="F#" Value="type ChangeTrackingStrategy = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
                Indicates how the context detects changes to properties for an instance of the entity type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ChangedNotifications">
      <MemberSignature Language="C#" Value="ChangedNotifications" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy ChangedNotifications = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangedNotifications" />
      <MemberSignature Language="VB.NET" Value="ChangedNotifications" />
      <MemberSignature Language="F#" Value="ChangedNotifications = 1" Usage="Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangedNotifications" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
                To use this strategy, the entity class must implement <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.
                Original values are recorded when an entity is queried from the database. Properties are marked as modified when the
                entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="ChangingAndChangedNotifications">
      <MemberSignature Language="C#" Value="ChangingAndChangedNotifications" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy ChangingAndChangedNotifications = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotifications" />
      <MemberSignature Language="VB.NET" Value="ChangingAndChangedNotifications" />
      <MemberSignature Language="F#" Value="ChangingAndChangedNotifications = 2" Usage="Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotifications" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <para>
                    To use this strategy, the entity class must implement <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> and
                    <see cref="T:System.ComponentModel.INotifyPropertyChanging" />.
                    Original values are recorded when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" /> event. Properties
                    are
                    marked as modified when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.
                </para>
          <para>
                    Original values are only recorded when they are required to save changes to the entity. For example, properties that are configured
                    as
                    concurrency tokens.
                </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ChangingAndChangedNotificationsWithOriginalValues">
      <MemberSignature Language="C#" Value="ChangingAndChangedNotificationsWithOriginalValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy ChangingAndChangedNotificationsWithOriginalValues = int32(3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues" />
      <MemberSignature Language="VB.NET" Value="ChangingAndChangedNotificationsWithOriginalValues" />
      <MemberSignature Language="F#" Value="ChangingAndChangedNotificationsWithOriginalValues = 3" Usage="Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <para>
                    To use this strategy, the entity class must implement <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> and
                    <see cref="T:System.ComponentModel.INotifyPropertyChanging" />.
                    Original values are recorded when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />. Properties are
                    marked as modified when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.
                </para>
          <para>
                    Original values are only recorded for all properties, regardless of whether they are required to save changes to the entity.
                </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy Snapshot = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="F#" Value="Snapshot = 0" Usage="Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
                Original values are recorded when an entity is queried from the database. Changes are detected by scanning the
                current property values and comparing them to the recorded values. This scanning takes place when
                <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is called, or when another API call (such as <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />)
                triggers the change detection process.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
