<Type Name="IPropertyParameterBindingFactory" FullName="Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory">
  <TypeSignature Language="C#" Value="public interface IPropertyParameterBindingFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyParameterBindingFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyParameterBindingFactory" />
  <TypeSignature Language="F#" Value="type IPropertyParameterBindingFactory = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPropertyParameterBindingFactory" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                Finds a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" /> specifically for some form of property
                (that is, some <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />) of the model.
            </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-constructor-binding">Entity types with constructors</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FindParameter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ParameterBinding? FindParameter (Microsoft.EntityFrameworkCore.Metadata.IComplexType complexType, Type parameterType, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.ParameterBinding FindParameter(class Microsoft.EntityFrameworkCore.Metadata.IComplexType complexType, class System.Type parameterType, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IComplexType,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindParameter (complexType As IComplexType, parameterType As Type, parameterName As String) As ParameterBinding" />
      <MemberSignature Language="F#" Value="abstract member FindParameter : Microsoft.EntityFrameworkCore.Metadata.IComplexType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" Usage="iPropertyParameterBindingFactory.FindParameter (complexType, parameterType, parameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ParameterBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complexType" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexType" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="parameterType" Type="System.Type" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="parameterName" Type="System.String" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complexType">The complex type on which the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" /> is defined.</param>
        <param name="parameterType">The parameter name.</param>
        <param name="parameterName">The parameter type.</param>
        <summary>
                Finds a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" /> specifically for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" /> in the model.
            </summary>
        <returns>The parameter binding, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindParameter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ParameterBinding FindParameter (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Type parameterType, string parameterName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.ParameterBinding FindParameter(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Type parameterType, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindParameter (entityType As IEntityType, parameterType As Type, parameterName As String) As ParameterBinding" />
      <MemberSignature Language="F#" Value="abstract member FindParameter : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" Usage="iPropertyParameterBindingFactory.FindParameter (entityType, parameterType, parameterName)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ParameterBinding? FindParameter (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Type parameterType, string parameterName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ParameterBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="parameterType" Type="System.Type" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type on which the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" /> is defined.</param>
        <param name="parameterType">The parameter name.</param>
        <param name="parameterName">The parameter type.</param>
        <summary>
                Finds a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" /> specifically for an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" /> in the model.
            </summary>
        <returns>The parameter binding, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
