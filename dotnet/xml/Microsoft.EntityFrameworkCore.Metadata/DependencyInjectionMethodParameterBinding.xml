<Type Name="DependencyInjectionMethodParameterBinding" FullName="Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding">
  <TypeSignature Language="C#" Value="public class DependencyInjectionMethodParameterBinding : Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionParameterBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyInjectionMethodParameterBinding extends Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionParameterBinding" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyInjectionMethodParameterBinding&#xA;Inherits DependencyInjectionParameterBinding" />
  <TypeSignature Language="F#" Value="type DependencyInjectionMethodParameterBinding = class&#xA;    inherit DependencyInjectionParameterBinding" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionParameterBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Describes the binding from a method on an EF internal dependency injection service, which may or may not
                also have and associated <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IServiceProperty" />, to a parameter in a constructor,
                factory method, or similar.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-constructor-binding">Entity types with constructors</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyInjectionMethodParameterBinding (Type parameterType, Type serviceType, System.Reflection.MethodInfo method, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase serviceProperty = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type parameterType, class System.Type serviceType, class System.Reflection.MethodInfo method, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase serviceProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.#ctor(System.Type,System.Type,System.Reflection.MethodInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterType As Type, serviceType As Type, method As MethodInfo, Optional serviceProperty As IPropertyBase = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding : Type * Type * System.Reflection.MethodInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding" Usage="new Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding (parameterType, serviceType, method, serviceProperty)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterType" Type="System.Type" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="serviceType" Type="System.Type" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="serviceProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="parameterType"> The parameter CLR type. </param>
        <param name="serviceType"> The service CLR types, as resolved from dependency injection </param>
        <param name="method"> The method of the service to bind to. </param>
        <param name="serviceProperty"> The associated <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IServiceProperty" />, or null. </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionParameterBinding" /> instance for the given method
                of the given service type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyInjectionMethodParameterBinding (Type parameterType, Type serviceType, System.Reflection.MethodInfo method, params Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[]? serviceProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type parameterType, class System.Type serviceType, class System.Reflection.MethodInfo method, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] serviceProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.#ctor(System.Type,System.Type,System.Reflection.MethodInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterType As Type, serviceType As Type, method As MethodInfo, ParamArray serviceProperties As IPropertyBase())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding : Type * Type * System.Reflection.MethodInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] -&gt; Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding" Usage="new Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding (parameterType, serviceType, method, serviceProperties)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterType" Type="System.Type" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="serviceType" Type="System.Type" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="serviceProperties" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[]" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameterType">The parameter CLR type.</param>
        <param name="serviceType">The service CLR types, as resolved from dependency injection</param>
        <param name="method">The method of the service to bind to.</param>
        <param name="serviceProperties">The associated <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IServiceProperty" /> objects, or <see langword="null" />.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionParameterBinding" /> instance for the given method
                of the given service type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToParameter">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression BindToParameter (Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo bindingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression BindToParameter(valuetype Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo bindingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.BindToParameter(Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BindToParameter (bindingInfo As ParameterBindingInfo) As Expression" />
      <MemberSignature Language="F#" Value="override this.BindToParameter : Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo -&gt; System.Linq.Expressions.Expression" Usage="dependencyInjectionMethodParameterBinding.BindToParameter bindingInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingInfo" Type="Microsoft.EntityFrameworkCore.Metadata.ParameterBindingInfo" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="bindingInfo">The binding information.</param>
        <summary>
                Creates an expression tree representing the binding of the value of a property from a
                materialization expression to a parameter of the constructor, factory method, etc.
            </summary>
        <returns>The expression tree.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToParameter">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression BindToParameter (System.Linq.Expressions.Expression materializationExpression, System.Linq.Expressions.Expression entityTypeExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression BindToParameter(class System.Linq.Expressions.Expression materializationExpression, class System.Linq.Expressions.Expression entityTypeExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.BindToParameter(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BindToParameter (materializationExpression As Expression, entityTypeExpression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.BindToParameter : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="dependencyInjectionMethodParameterBinding.BindToParameter (materializationExpression, entityTypeExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="materializationExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="entityTypeExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="materializationExpression">The expression representing the materialization context.</param>
        <param name="entityTypeExpression">The expression representing the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> constant.</param>
        <summary>
                Creates an expression tree representing the binding of the value of a property from a
                materialization expression to a parameter of the constructor, factory method, etc.
            </summary>
        <returns>The expression tree.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo Method" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Method As MethodInfo" />
      <MemberSignature Language="F#" Value="member this.Method : System.Reflection.MethodInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The method being bound to, as defined on the dependency injection service interface.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceDelegate">
      <MemberSignature Language="C#" Value="public override Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,Microsoft.EntityFrameworkCore.Metadata.IEntityType,object,object?&gt; ServiceDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`4&lt;valuetype Microsoft.EntityFrameworkCore.Storage.MaterializationContext, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, object, object&gt; ServiceDelegate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.ServiceDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServiceDelegate As Func(Of MaterializationContext, IEntityType, Object, Object)" />
      <MemberSignature Language="F#" Value="member this.ServiceDelegate : Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext, Microsoft.EntityFrameworkCore.Metadata.IEntityType, obj, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.ServiceDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A delegate to set a CLR service property on an entity instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.ParameterBinding With (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] consumedProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.ParameterBinding With(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] consumedProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.DependencyInjectionMethodParameterBinding.With(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function With (consumedProperties As IPropertyBase()) As ParameterBinding" />
      <MemberSignature Language="F#" Value="override this.With : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[] -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" Usage="dependencyInjectionMethodParameterBinding.With consumedProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ParameterBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumedProperties" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase[]" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="consumedProperties">The new consumed properties.</param>
        <summary>
                Creates a copy that contains the given consumed properties.
            </summary>
        <returns>A copy with replaced consumed properties.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
