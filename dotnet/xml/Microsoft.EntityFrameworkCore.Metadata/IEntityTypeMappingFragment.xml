<Type Name="IEntityTypeMappingFragment" FullName="Microsoft.EntityFrameworkCore.Metadata.IEntityTypeMappingFragment">
  <TypeSignature Language="C#" Value="public interface IEntityTypeMappingFragment : Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityTypeMappingFragment" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEntityTypeMappingFragment implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityTypeMappingFragment" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IEntityTypeMappingFragment" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityTypeMappingFragment&#xA;Implements IAnnotatable, IReadOnlyEntityTypeMappingFragment" />
  <TypeSignature Language="F#" Value="type IEntityTypeMappingFragment = interface&#xA;    interface IReadOnlyEntityTypeMappingFragment&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IAnnotatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEntityTypeMappingFragment implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityTypeMappingFragment" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityTypeMappingFragment</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents entity type mapping for a particular table-like store object.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IEntityTypeMappingFragment.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As IEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IEntityTypeMappingFragment.EntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the entity type for which the fragment is defined.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
