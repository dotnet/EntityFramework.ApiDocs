<Type Name="RelationalAnnotationProvider" FullName="Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider">
  <TypeSignature Language="C#" Value="public class RelationalAnnotationProvider : Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalAnnotationProvider extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalAnnotationProvider&#xA;Implements IRelationalAnnotationProvider" />
  <TypeSignature Language="F#" Value="type RelationalAnnotationProvider = class&#xA;    interface IRelationalAnnotationProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A base class inherited by database providers that gives access to annotations
                used by relational EF Core components on various elements of the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" />.
            </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalAnnotationProvider (Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.#ctor(Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As RelationalAnnotationProviderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider : Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider" Usage="new Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this service.</param>
        <summary>
                Initializes a new instance of this class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As RelationalAnnotationProviderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProviderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint checkConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint checkConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (checkConstraint As ICheckConstraint) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For checkConstraint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkConstraint" Type="Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="checkConstraint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As IColumn) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For column" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IColumn)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (foreignKey As IForeignKeyConstraint) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For foreignKey" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As IFunctionColumn) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For column" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IRelationalModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IRelationalModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (model As IRelationalModel) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IRelationalModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IRelationalModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For model" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IRelationalModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ISequence sequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ISequence sequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISequence)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (sequence As ISequence) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ISequence -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ISequence -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For sequence" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISequence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="Microsoft.EntityFrameworkCore.Metadata.ISequence" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="sequence">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ISqlQuery sqlQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ISqlQuery sqlQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (sqlQuery As ISqlQuery) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ISqlQuery -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ISqlQuery -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For sqlQuery" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQuery)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlQuery" Type="Microsoft.EntityFrameworkCore.Metadata.ISqlQuery" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="sqlQuery">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As ISqlQueryColumn) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For column" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IStoreFunction function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IStoreFunction function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreFunction)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (function As IStoreFunction) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IStoreFunction -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IStoreFunction -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For function" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreFunction" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ITable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ITable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (table As ITable) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ITable -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ITable -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For table" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.ITable" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ITableIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ITableIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITableIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (index As ITableIndex) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ITableIndex -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ITableIndex -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITableIndex)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.ITableIndex" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (constraint As IUniqueConstraint) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For constraint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IView)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (view As IView) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IView -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IView -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For view" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.EntityFrameworkCore.Metadata.IView" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IViewColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IViewColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IViewColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As IViewColumn) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IViewColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IViewColumn -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For column" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IViewColumn)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IViewColumn" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint checkConstraint, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint checkConstraint, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (checkConstraint As ICheckConstraint, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (checkConstraint, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkConstraint" Type="Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="checkConstraint">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IColumn column, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IColumn column, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As IColumn, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (column, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IColumn,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IColumn" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint foreignKey, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (foreignKey As IForeignKeyConstraint, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (foreignKey, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn column, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn column, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As IFunctionColumn, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (column, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IFunctionColumn" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IRelationalModel model, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel model, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IRelationalModel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (model As IRelationalModel, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IRelationalModel * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IRelationalModel * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (model, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IRelationalModel,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ISequence sequence, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ISequence sequence, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISequence,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (sequence As ISequence, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ISequence * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ISequence * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (sequence, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISequence,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="Microsoft.EntityFrameworkCore.Metadata.ISequence" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="sequence">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ISqlQuery sqlQuery, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ISqlQuery sqlQuery, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQuery,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (sqlQuery As ISqlQuery, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ISqlQuery * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ISqlQuery * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (sqlQuery, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQuery,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlQuery" Type="Microsoft.EntityFrameworkCore.Metadata.ISqlQuery" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="sqlQuery">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn column, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn column, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As ISqlQueryColumn, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (column, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IStoreFunction function, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IStoreFunction function, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreFunction,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (function As IStoreFunction, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IStoreFunction * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IStoreFunction * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (function, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreFunction,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreFunction" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IStoreFunctionParameter parameter, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IStoreFunctionParameter parameter, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreFunctionParameter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (parameter As IStoreFunctionParameter, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IStoreFunctionParameter * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IStoreFunctionParameter * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (parameter, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreFunctionParameter,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreFunctionParameter" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure storedProcedure, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure storedProcedure, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (storedProcedure As IStoreStoredProcedure, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (storedProcedure, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedure" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="storedProcedure">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter parameter, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter parameter, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (parameter As IStoreStoredProcedureParameter, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (parameter, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn column, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn column, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As IStoreStoredProcedureResultColumn, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (column, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ITable table, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ITable table, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (table As ITable, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ITable * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ITable * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (table, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITable,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.ITable" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ITableIndex index, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ITableIndex index, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITableIndex,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (index As ITableIndex, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ITableIndex * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ITableIndex * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (index, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITableIndex,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.ITableIndex" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.ITrigger trigger, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.ITrigger trigger, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITrigger,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (trigger As ITrigger, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.ITrigger * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.ITrigger * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (trigger, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.ITrigger,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.ITrigger" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="trigger">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint constraint, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint constraint, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (constraint As IUniqueConstraint, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (constraint, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IView view, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IView view, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (view As IView, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IView * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IView * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (view, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IView,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.EntityFrameworkCore.Metadata.IView" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="For">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For (Microsoft.EntityFrameworkCore.Metadata.IViewColumn column, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; For(class Microsoft.EntityFrameworkCore.Metadata.IViewColumn column, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.RelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IViewColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function For (column As IViewColumn, designTime As Boolean) As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member For : Microsoft.EntityFrameworkCore.Metadata.IViewColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;&#xA;override this.For : Microsoft.EntityFrameworkCore.Metadata.IViewColumn * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="relationalAnnotationProvider.For (column, designTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IViewColumn,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IViewColumn" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
