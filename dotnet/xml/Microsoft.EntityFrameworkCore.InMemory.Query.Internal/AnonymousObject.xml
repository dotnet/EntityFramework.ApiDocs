<Type Name="AnonymousObject" FullName="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject">
  <TypeSignature Language="C#" Value="public readonly struct AnonymousObject" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AnonymousObject extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject" />
  <TypeSignature Language="VB.NET" Value="Public Structure AnonymousObject" />
  <TypeSignature Language="F#" Value="type AnonymousObject = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousObject (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.#ctor(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Object())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject : obj[] -&gt; Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject" Usage="new Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousObjectCtor">
      <MemberSignature Language="C#" Value="public static readonly System.Reflection.ConstructorInfo AnonymousObjectCtor;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Reflection.ConstructorInfo AnonymousObjectCtor" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.AnonymousObjectCtor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnonymousObjectCtor As ConstructorInfo " />
      <MemberSignature Language="F#" Value=" staticval mutable AnonymousObjectCtor : System.Reflection.ConstructorInfo" Usage="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.AnonymousObjectCtor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="anonymousObject.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="anonymousObject.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject x, Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject x, valuetype Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.op_Equality(Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject,Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (x As AnonymousObject, y As AnonymousObject) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject * Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject -&gt; bool" Usage="x = y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject" />
        <Parameter Name="y" Type="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject x, Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject x, valuetype Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.op_Inequality(Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject,Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (x As AnonymousObject, y As AnonymousObject) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject * Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject -&gt; bool" Usage="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject.op_Inequality (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject" />
        <Parameter Name="y" Type="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.AnonymousObject" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
