<Type Name="StringUriConverter&lt;TModel,TProvider&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter&lt;TModel,TProvider&gt;">
  <TypeSignature Language="C#" Value="public class StringUriConverter&lt;TModel,TProvider&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TModel,TProvider&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringUriConverter`2&lt;TModel, TProvider&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TModel, !TProvider&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter`2" />
  <TypeSignature Language="VB.NET" Value="Public Class StringUriConverter(Of TModel, TProvider)&#xA;Inherits ValueConverter(Of TModel, TProvider)" />
  <TypeSignature Language="F#" Value="type StringUriConverter&lt;'Model, 'Provider&gt; = class&#xA;    inherit ValueConverter&lt;'Model, 'Provider&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModel" />
    <TypeParameter Name="TProvider" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TModel,TProvider&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">TModel</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProvider">TProvider</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TModel">To be added.</typeparam>
    <typeparam name="TProvider">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringUriConverter (System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProvider&gt;&gt; convertToProviderExpression, System.Linq.Expressions.Expression&lt;Func&lt;TProvider,TModel&gt;&gt; convertFromProviderExpression, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TModel, !TProvider&gt;&gt; convertToProviderExpression, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TProvider, !TModel&gt;&gt; convertFromProviderExpression, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`1,`0}},Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (convertToProviderExpression As Expression(Of Func(Of TModel, TProvider)), convertFromProviderExpression As Expression(Of Func(Of TProvider, TModel)), Optional mappingHints As ConverterMappingHints = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter&lt;'Model, 'Provider&gt; : System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Provider&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Provider, 'Model&gt;&gt; * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter&lt;'Model, 'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter&lt;'Model, 'Provider&gt; (convertToProviderExpression, convertFromProviderExpression, mappingHints)" />
      <MemberSignature Language="C#" Value="public StringUriConverter (System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProvider&gt;&gt; convertToProviderExpression, System.Linq.Expressions.Expression&lt;Func&lt;TProvider,TModel&gt;&gt; convertFromProviderExpression, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints? mappingHints = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="convertToProviderExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProvider&gt;&gt;" />
        <Parameter Name="convertFromProviderExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TProvider,TModel&gt;&gt;" />
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="convertToProviderExpression">To be added.</param>
        <param name="convertFromProviderExpression">To be added.</param>
        <param name="mappingHints">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="protected static System.Linq.Expressions.Expression&lt;Func&lt;Uri,string&gt;&gt; ToString ();" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Uri, string&gt;&gt; ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ToString () As Expression(Of Func(Of Uri, String))" />
      <MemberSignature Language="F#" Value="static member ToString : unit -&gt; System.Linq.Expressions.Expression&lt;Func&lt;Uri, string&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter&lt;'Model, 'Provider&gt;.ToString " />
      <MemberSignature Language="C#" Value="protected static System.Linq.Expressions.Expression&lt;Func&lt;Uri?,string?&gt;&gt; ToString ();" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.Uri,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUri">
      <MemberSignature Language="C#" Value="protected static System.Linq.Expressions.Expression&lt;Func&lt;string,Uri&gt;&gt; ToUri ();" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;string, class System.Uri&gt;&gt; ToUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter`2.ToUri" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ToUri () As Expression(Of Func(Of String, Uri))" />
      <MemberSignature Language="F#" Value="static member ToUri : unit -&gt; System.Linq.Expressions.Expression&lt;Func&lt;string, Uri&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.StringUriConverter&lt;'Model, 'Provider&gt;.ToUri " />
      <MemberSignature Language="C#" Value="protected static System.Linq.Expressions.Expression&lt;Func&lt;string?,Uri?&gt;&gt; ToUri ();" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.String,System.Uri&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
